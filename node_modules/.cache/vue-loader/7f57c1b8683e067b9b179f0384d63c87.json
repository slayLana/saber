{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/page/index/top/top-theme.vue?vue&type=style&index=0&id=1bd7f21a&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/page/index/top/top-theme.vue","mtime":1666151205527},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/css-loader/index.js","mtime":1666157452306},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1666157454418},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/postcss-loader/src/index.js","mtime":1666157453259},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/sass-loader/dist/cjs.js","mtime":1666157452322},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n.list {\n  width: 100%;\n}\n",{"version":3,"sources":["top-theme.vue"],"names":[],"mappings":";AA2GA;AACA;AACA","file":"top-theme.vue","sourceRoot":"src/page/index/top","sourcesContent":["<template>\n  <div>\n    <el-dialog title=\"选择\"\n               append-to-body\n               :visible.sync=\"box\"\n               width=\"50%\">\n      <el-radio-group v-model=\"text\"\n                      class=\"list\">\n        <el-row :span=\"24\">\n          <el-col v-for=\"(item,index) in list\"\n                  :key=\"index\"\n                  :md=\"4\"\n                  :xs=\"12\"\n                  :sm=\"4\">\n            <el-radio :label=\"item.value\">{{item.name}}</el-radio>\n          </el-col>\n        </el-row>\n      </el-radio-group>\n    </el-dialog>\n\n    <span>\n      <i class=\"icon-zhuti\"\n         @click=\"open\"></i>\n    </span>\n  </div>\n</template>\n\n<script>\nimport { setTheme } from \"@/util/util\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data () {\n    return {\n      box: false,\n      text: \"\",\n      list: [\n        {\n          name: \"默认主题\",\n          value: \"default\"\n        },\n        {\n          name: \"白色主题\",\n          value: \"theme-white\"\n        },\n        {\n          name: \"黑色主题\",\n          value: \"theme-dark\"\n        },\n        {\n          name: \"炫彩主题\",\n          value: \"theme-star\"\n        },\n        {\n          name: \"智能主题\",\n          value: \"theme-bule\"\n        },\n        {\n          name: \"iview主题\",\n          value: \"theme-iview\"\n        },\n        {\n          name: \"vip主题\",\n          value: \"theme-vip\"\n        },\n        {\n          name: \"cool主题\",\n          value: \"theme-cool\"\n        },\n        {\n          name: \"d2主题\",\n          value: \"theme-d2\"\n        },\n        {\n          name: \"hey主题\",\n          value: \"theme-hey\"\n        },\n        {\n          name: \"lte主题\",\n          value: \"theme-lte\"\n        }\n      ]\n    };\n  },\n  watch: {\n    text: function (val) {\n      this.$store.commit(\"SET_THEME_NAME\", val);\n      setTheme(val);\n    }\n  },\n  computed: {\n    ...mapGetters([\"themeName\"])\n  },\n  mounted () {\n    this.text = this.themeName;\n    if (!this.text) {\n      this.text = \"\";\n    }\n  },\n  methods: {\n    open () {\n      this.box = true;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.list {\n  width: 100%;\n}\n</style>\n\n"]}]}