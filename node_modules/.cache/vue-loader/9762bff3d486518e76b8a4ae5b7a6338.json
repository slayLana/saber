{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/views/monitor/log/error.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/views/monitor/log/error.vue","mtime":1666151205540},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n  import {getErrorList, getErrorLogs} from \"@/api/logs\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        option: {\n          height: 'auto',\n          calcHeight: 30,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          viewBtn: true,\n          editBtn: false,\n          addBtn: false,\n          delBtn: false,\n          menuWidth: 120,\n          dialogType: 'drawer',\n          column: [\n            {\n              label: \"服务id\",\n              prop: \"serviceId\",\n              search: true,\n              width:'120'\n            },\n            {\n              label: \"服务host\",\n              prop: \"serverHost\",\n              search: true,\n              width:'150'\n            },\n            {\n              label: \"服务ip\",\n              prop: \"serverIp\",\n              width:'160'\n            },\n            {\n              label: \"软件环境\",\n              prop: \"env\",\n              width:'80'\n            },\n            {\n              label: \"请求方法\",\n              prop: \"method\",\n              width:'80'\n            },\n            {\n              label: \"请求接口\",\n              prop: \"requestUri\"\n            },\n            {\n              label: \"日志时间\",\n              prop: \"createTime\",\n              width:'180'\n            },\n            {\n              label: \"用户代理\",\n              prop: \"userAgent\",\n              span: 24,\n              hide: true\n            },\n            {\n              label: \"请求数据\",\n              prop: \"params\",\n              type: \"textarea\",\n              span: 24,\n              minRows: 2,\n              hide: true\n            },\n            {\n              label: \"日志数据\",\n              prop: \"stackTrace\",\n              type: \"textarea\",\n              span: 24,\n              minRows: 16,\n              hide: true\n            }\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          viewBtn: this.vaildData(this.permission.log_error_view, false)\n        };\n      }\n    },\n    methods: {\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getErrorLogs(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getErrorList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["error.vue"],"names":[],"mappings":";AAqfile":"error.vue","sourceRoot":"src/views/monitor/log","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               :page.sync=\"page\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\n  import {getErrorList, getErrorLogs} from \"@/api/logs\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        option: {\n          height: 'auto',\n          calcHeight: 30,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          viewBtn: true,\n          editBtn: false,\n          addBtn: false,\n          delBtn: false,\n          menuWidth: 120,\n          dialogType: 'drawer',\n          column: [\n            {\n              label: \"服务id\",\n              prop: \"serviceId\",\n              search: true,\n              width:'120'\n            },\n            {\n              label: \"服务host\",\n              prop: \"serverHost\",\n              search: true,\n              width:'150'\n            },\n            {\n              label: \"服务ip\",\n              prop: \"serverIp\",\n              width:'160'\n            },\n            {\n              label: \"软件环境\",\n              prop: \"env\",\n              width:'80'\n            },\n            {\n              label: \"请求方法\",\n              prop: \"method\",\n              width:'80'\n            },\n            {\n              label: \"请求接口\",\n              prop: \"requestUri\"\n            },\n            {\n              label: \"日志时间\",\n              prop: \"createTime\",\n              width:'180'\n            },\n            {\n              label: \"用户代理\",\n              prop: \"userAgent\",\n              span: 24,\n              hide: true\n            },\n            {\n              label: \"请求数据\",\n              prop: \"params\",\n              type: \"textarea\",\n              span: 24,\n              minRows: 2,\n              hide: true\n            },\n            {\n              label: \"日志数据\",\n              prop: \"stackTrace\",\n              type: \"textarea\",\n              span: 24,\n              minRows: 16,\n              hide: true\n            }\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          viewBtn: this.vaildData(this.permission.log_error_view, false)\n        };\n      }\n    },\n    methods: {\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getErrorLogs(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getErrorList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n</style>\n"]}]}