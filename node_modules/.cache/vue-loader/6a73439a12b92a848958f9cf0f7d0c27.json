{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/system/user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/system/user.vue","mtime":1666151205543},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n  import {\n    getList,\n    getUser,\n    getUserPlatform,\n    remove,\n    update,\n    updatePlatform,\n    add,\n    grant,\n    resetPassword, unlock\n  } from \"@/api/system/user\";\n  import {exportBlob} from \"@/api/common\";\n  import {getDeptTree, getDeptLazyTree} from \"@/api/system/dept\";\n  import {getRoleTree} from \"@/api/system/role\";\n  import {getPostList} from \"@/api/system/post\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n  import {getToken} from '@/util/auth';\n  import {downloadXls} from \"@/util/util\";\n  import {dateNow} from \"@/util/date\";\n  import NProgress from 'nprogress';\n  import 'nprogress/nprogress.css';\n  import func from \"@/util/func\";\n\n  export default {\n    data() {\n      const validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          callback();\n        }\n      };\n      const validatePass2 = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        } else if (value !== this.form.password) {\n          callback(new Error('两次输入密码不一致!'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        form: {},\n        search:{},\n        roleBox: false,\n        excelBox: false,\n        platformBox: false,\n        initFlag: true,\n        selectionList: [],\n        query: {},\n        loading: true,\n        platformLoading: false,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        platformPage: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        init: {\n          roleTree: [],\n          deptTree: [],\n        },\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        roleGrantList: [],\n        roleTreeObj: [],\n        treeDeptId: '',\n        treeData: [],\n        treeOption: {\n          nodeKey: 'id',\n          lazy: true,\n          treeLoad: function (node, resolve) {\n            const parentId = (node.level === 0) ? 0 : node.data.id;\n            getDeptLazyTree(parentId).then(res => {\n              resolve(res.data.data.map(item => {\n                return {\n                  ...item,\n                  leaf: !item.hasChildren\n                }\n              }))\n            });\n          },\n          addBtn: false,\n          menu: false,\n          size: 'small',\n          props: {\n            labelText: '标题',\n            label: 'title',\n            value: 'value',\n            children: 'children'\n          }\n        },\n        option: {\n          height: 'auto',\n          calcHeight: 80,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          dialogType: 'drawer',\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"登录账号\",\n              prop: \"account\",\n              search: true,\n              display: false\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户姓名\",\n              prop: \"realName\",\n              search: true,\n              display: false\n            },\n            {\n              label: \"所属角色\",\n              prop: \"roleName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"所属部门\",\n              prop: \"deptName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户平台\",\n              prop: \"userTypeName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户平台\",\n              type: \"select\",\n              dicUrl: \"/api/blade-system/dict/dictionary?code=user_type\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              dataType: \"number\",\n              search: true,\n              hide: true,\n              display: false,\n              prop: \"userType\",\n              rules: [{\n                required: true,\n                message: \"请选择用户平台\",\n                trigger: \"blur\"\n              }]\n            },\n          ],\n          group: [\n            {\n              label: '基础信息',\n              prop: 'baseInfo',\n              icon: 'el-icon-user-solid',\n              column: [\n                {\n                  label: \"所属租户\",\n                  prop: \"tenantId\",\n                  type: \"tree\",\n                  dicUrl: \"/api/blade-system/tenant/select\",\n                  props: {\n                    label: \"tenantName\",\n                    value: \"tenantId\"\n                  },\n                  hide: !website.tenantMode,\n                  addDisplay: website.tenantMode,\n                  editDisplay: website.tenantMode,\n                  viewDisplay: website.tenantMode,\n                  rules: [{\n                    required: true,\n                    message: \"请输入所属租户\",\n                    trigger: \"click\"\n                  }],\n                  span: 24,\n                },\n                {\n                  label: \"登录账号\",\n                  prop: \"account\",\n                  rules: [{\n                    required: true,\n                    message: \"请输入登录账号\",\n                    trigger: \"blur\"\n                  }],\n                },\n                {\n                  label: \"用户平台\",\n                  type: \"select\",\n                  dicUrl: \"/api/blade-system/dict/dictionary?code=user_type\",\n                  props: {\n                    label: \"dictValue\",\n                    value: \"dictKey\"\n                  },\n                  dataType: \"number\",\n                  slot: true,\n                  prop: \"userType\",\n                  rules: [{\n                    required: true,\n                    message: \"请选择用户平台\",\n                    trigger: \"blur\"\n                  }]\n                },\n                {\n                  label: '密码',\n                  prop: 'password',\n                  hide: true,\n                  editDisplay: false,\n                  viewDisplay: false,\n                  rules: [{required: true, validator: validatePass, trigger: 'blur'}]\n                },\n                {\n                  label: '确认密码',\n                  prop: 'password2',\n                  hide: true,\n                  editDisplay: false,\n                  viewDisplay: false,\n                  rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\n                },\n              ]\n            },\n            {\n              label: '详细信息',\n              prop: 'detailInfo',\n              icon: 'el-icon-s-order',\n              column: [\n                {\n                  label: \"用户昵称\",\n                  prop: \"name\",\n                  hide: true,\n                  rules: [{\n                    required: true,\n                    message: \"请输入用户昵称\",\n                    trigger: \"blur\"\n                  }]\n                },\n                {\n                  label: \"用户姓名\",\n                  prop: \"realName\",\n                  rules: [{\n                    required: true,\n                    message: \"请输入用户姓名\",\n                    trigger: \"blur\"\n                  }, {\n                    min: 2,\n                    max: 5,\n                    message: '姓名长度在2到5个字符'\n                  }]\n                },\n                {\n                  label: \"手机号码\",\n                  prop: \"phone\",\n                  overHidden: true\n                },\n                {\n                  label: \"电子邮箱\",\n                  prop: \"email\",\n                  hide: true,\n                  overHidden: true\n                },\n                {\n                  label: \"用户性别\",\n                  prop: \"sex\",\n                  type: \"select\",\n                  dicData: [\n                    {\n                      label: \"男\",\n                      value: 1\n                    },\n                    {\n                      label: \"女\",\n                      value: 2\n                    },\n                    {\n                      label: \"未知\",\n                      value: 3\n                    }\n                  ],\n                  hide: true\n                },\n                {\n                  label: \"用户生日\",\n                  type: \"date\",\n                  prop: \"birthday\",\n                  format: \"yyyy-MM-dd hh:mm:ss\",\n                  valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n                  hide: true\n                },\n                {\n                  label: \"账号状态\",\n                  prop: \"statusName\",\n                  hide: true,\n                  display: false\n                }\n              ]\n            },\n            {\n              label: '职责信息',\n              prop: 'dutyInfo',\n              icon: 'el-icon-s-custom',\n              column: [\n                {\n                  label: \"用户编号\",\n                  prop: \"code\",\n                },\n                {\n                  label: \"所属角色\",\n                  prop: \"roleId\",\n                  multiple: true,\n                  type: \"tree\",\n                  dicData: [],\n                  props: {\n                    label: \"title\"\n                  },\n                  checkStrictly: true,\n                  slot: true,\n                  rules: [{\n                    required: true,\n                    message: \"请选择所属角色\",\n                    trigger: \"click\"\n                  }]\n                },\n                {\n                  label: \"所属部门\",\n                  prop: \"deptId\",\n                  type: \"tree\",\n                  multiple: true,\n                  dicData: [],\n                  props: {\n                    label: \"title\"\n                  },\n                  checkStrictly: true,\n                  slot: true,\n                  rules: [{\n                    required: true,\n                    message: \"请选择所属部门\",\n                    trigger: \"click\"\n                  }]\n                },\n                {\n                  label: \"所属岗位\",\n                  prop: \"postId\",\n                  type: \"tree\",\n                  multiple: true,\n                  dicData: [],\n                  props: {\n                    label: \"postName\",\n                    value: \"id\"\n                  },\n                  rules: [{\n                    required: true,\n                    message: \"请选择所属岗位\",\n                    trigger: \"click\"\n                  }],\n                },\n              ]\n            },\n          ]\n        },\n        data: [],\n        platformQuery: {},\n        platformSelectionList: [],\n        platformData: [],\n        platformForm: {},\n        platformOption: {\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          dialogClickModal: false,\n          menuWidth: 120,\n          editBtnText: '配置',\n          column: [\n            {\n              label: \"登录账号\",\n              prop: \"account\",\n              search: true,\n              display: false\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户姓名\",\n              prop: \"realName\",\n              search: true,\n              display: false\n            },\n            {\n              label: \"用户平台\",\n              prop: \"userTypeName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户平台\",\n              type: \"select\",\n              dicUrl: \"/api/blade-system/dict/dictionary?code=user_type\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              dataType: \"number\",\n              search: true,\n              hide: true,\n              display: false,\n              prop: \"userType\",\n              rules: [{\n                required: true,\n                message: \"请选择用户平台\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"用户拓展\",\n              prop: \"userExt\",\n              type: \"textarea\",\n              minRows: 8,\n              span: 24,\n              overHidden: true,\n              row: true,\n              hide: true,\n            },\n          ],\n        },\n        excelForm: {},\n        excelOption: {\n          submitBtn: false,\n          emptyBtn: false,\n          column: [\n            {\n              label: '模板上传',\n              prop: 'excelFile',\n              type: 'upload',\n              drag: true,\n              loadText: '模板上传中，请稍等',\n              span: 24,\n              propsHttp: {\n                res: 'data'\n              },\n              tip: '请上传 .xls,.xlsx 标准格式文件',\n              action: \"/api/blade-user/import-user\"\n            },\n            {\n              label: \"数据覆盖\",\n              prop: \"isCovered\",\n              type: \"switch\",\n              align: \"center\",\n              width: 80,\n              dicData: [\n                {\n                  label: \"否\",\n                  value: 0\n                },\n                {\n                  label: \"是\",\n                  value: 1\n                }\n              ],\n              value: 0,\n              slot: true,\n              rules: [\n                {\n                  required: true,\n                  message: \"请选择是否覆盖\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: '模板下载',\n              prop: 'excelTemplate',\n              formslot: true,\n              span: 24,\n            }\n          ]\n        }\n      };\n    },\n    watch: {\n      'form.tenantId'() {\n        if (this.form.tenantId !== '' && this.initFlag) {\n          this.initData(this.form.tenantId);\n        }\n      },\n      'excelForm.isCovered'() {\n        if (this.excelForm.isCovered !== '') {\n          const column = this.findObject(this.excelOption.column, \"excelFile\");\n          column.action = `/api/blade-user/import-user?isCovered=${this.excelForm.isCovered}`;\n        }\n      }\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.user_add, false),\n          viewBtn: this.vaildData(this.permission.user_view, false),\n          delBtn: this.vaildData(this.permission.user_delete, false),\n          editBtn: this.vaildData(this.permission.user_edit, false)\n        };\n      },\n      platformPermissionList() {\n        return {\n          addBtn: false,\n          viewBtn: false,\n          delBtn: false,\n          editBtn: this.vaildData(this.permission.user_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n    },\n    mounted() {\n      // 非租户模式默认加载管理组数据\n      if (!website.tenantMode) {\n        this.initData(website.tenantId);\n      }\n    },\n    methods: {\n      nodeClick(data) {\n        this.treeDeptId = data.id;\n        this.page.currentPage = 1;\n        this.onLoad(this.page);\n      },\n      initData(tenantId) {\n        getRoleTree(tenantId).then(res => {\n          const column = this.findObject(this.option.group, \"roleId\");\n          column.dicData = res.data.data;\n        });\n        getDeptTree(tenantId).then(res => {\n          const column = this.findObject(this.option.group, \"deptId\");\n          column.dicData = res.data.data;\n        });\n        getPostList(tenantId).then(res => {\n          const column = this.findObject(this.option.group, \"postId\");\n          column.dicData = res.data.data;\n        });\n      },\n      submitRole() {\n        const roleList = this.$refs.treeRole.getCheckedKeys().join(\",\");\n        grant(this.ids, roleList).then(() => {\n          this.roleBox = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        row.postId = row.postId.join(\",\");\n        add(row).then(() => {\n          this.initFlag = false;\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        row.postId = row.postId.join(\",\");\n        update(row).then(() => {\n          this.initFlag = false;\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.treeDeptId = '';\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleReset() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return resetPassword(this.ids);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleGrant() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.roleTreeObj = [];\n        if (this.selectionList.length === 1) {\n          this.roleTreeObj = this.selectionList[0].roleId.split(\",\");\n        }\n        getRoleTree().then(res => {\n          this.roleGrantList = res.data.data;\n          this.roleBox = true;\n        });\n      },\n      handlePlatform() {\n        this.platformBox = true;\n      },\n      handleLock() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择账号解封？\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return unlock(this.ids);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleImport() {\n        this.excelBox = true;\n      },\n      uploadAfter(res, done, loading, column) {\n        window.console.log(column);\n        this.excelBox = false;\n        this.refreshChange();\n        done();\n      },\n      handleExport() {\n        const account = func.toStr(this.search.account);\n        const realName = func.toStr(this.search.realName);\n        this.$confirm(\"是否导出用户数据?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          NProgress.start();\n          exportBlob(`/api/blade-user/export-user?${this.website.tokenHeader}=${getToken()}&account=${account}&realName=${realName}`).then(res => {\n            downloadXls(res.data, `用户数据表${dateNow()}.xlsx`);\n            NProgress.done();\n          })\n        });\n      },\n      handleTemplate() {\n        exportBlob(`/api/blade-user/export-template?${this.website.tokenHeader}=${getToken()}`).then(res => {\n          downloadXls(res.data, \"用户数据模板.xlsx\");\n        })\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getUser(this.form.id).then(res => {\n            this.form = res.data.data;\n            if(this.form.hasOwnProperty(\"deptId\")){\n              this.form.deptId = this.form.deptId.split(\",\");\n            }\n            if(this.form.hasOwnProperty(\"roleId\")){\n              this.form.roleId = this.form.roleId.split(\",\");\n            }\n            if(this.form.hasOwnProperty(\"postId\")){\n              this.form.postId = this.form.postId.split(\",\");\n            }\n          });\n        }\n        this.initFlag = true;\n        done();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query), this.treeDeptId).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      platformRowUpdate(row, index, done, loading) {\n        updatePlatform(row.id, row.userType, row.userExt).then(() => {\n          this.platformOnLoad(this.platformPage);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      platformBeforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getUserPlatform(this.platformForm.id).then(res => {\n            this.platformForm = res.data.data;\n          });\n        }\n        done();\n      },\n      platformSearchReset() {\n        this.platformQuery = {};\n        this.platformOnLoad(this.platformPage);\n      },\n      platformSearchChange(params, done) {\n        this.platformQuery = params;\n        this.platformPage.currentPage = 1;\n        this.platformOnLoad(this.platformPage, params);\n        done();\n      },\n      platformSelectionChange(list) {\n        this.platformSelectionList = list;\n      },\n      platformSelectionClear() {\n        this.platformSelectionList = [];\n        this.$refs.platformCrud.toggleSelection();\n      },\n      platformCurrentChange(currentPage) {\n        this.platformPage.currentPage = currentPage;\n      },\n      platformSizeChange(pageSize) {\n        this.platformPage.pageSize = pageSize;\n      },\n      platformRefreshChange() {\n        this.platformOnLoad(this.platformPage, this.platformQuery);\n      },\n      platformOnLoad(page, params = {}) {\n        this.platformLoading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query), this.treeDeptId).then(res => {\n          const data = res.data.data;\n          this.platformPage.total = data.total;\n          this.platformData = data.records;\n          this.platformLoading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["user.vue"],"names":[],"mappings":";AAwfile":"user.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <el-row>\n    <el-col :span=\"5\">\n      <div class=\"box\">\n        <el-scrollbar>\n          <basic-container>\n            <avue-tree :option=\"treeOption\" :data=\"treeData\" @node-click=\"nodeClick\"/>\n          </basic-container>\n        </el-scrollbar>\n      </div>\n    </el-col>\n    <el-col :span=\"19\">\n      <basic-container>\n        <avue-crud :option=\"option\"\n                   :search.sync=\"search\"\n                   :table-loading=\"loading\"\n                   :data=\"data\"\n                   ref=\"crud\"\n                   v-model=\"form\"\n                   :permission=\"permissionList\"\n                   @row-del=\"rowDel\"\n                   @row-update=\"rowUpdate\"\n                   @row-save=\"rowSave\"\n                   :before-open=\"beforeOpen\"\n                   :page.sync=\"page\"\n                   @search-change=\"searchChange\"\n                   @search-reset=\"searchReset\"\n                   @selection-change=\"selectionChange\"\n                   @current-change=\"currentChange\"\n                   @size-change=\"sizeChange\"\n                   @refresh-change=\"refreshChange\"\n                   @on-load=\"onLoad\">\n          <template slot=\"menuLeft\">\n            <el-button type=\"danger\"\n                       size=\"small\"\n                       plain\n                       icon=\"el-icon-delete\"\n                       v-if=\"permission.user_delete\"\n                       @click=\"handleDelete\">删 除\n            </el-button>\n            <el-button type=\"info\"\n                       size=\"small\"\n                       plain\n                       v-if=\"permission.user_role\"\n                       icon=\"el-icon-user\"\n                       @click=\"handleGrant\">角色配置\n            </el-button>\n            <el-button type=\"info\"\n                       size=\"small\"\n                       plain\n                       v-if=\"permission.user_reset\"\n                       icon=\"el-icon-refresh\"\n                       @click=\"handleReset\">密码重置\n            </el-button>\n            <el-button type=\"info\"\n                       size=\"small\"\n                       plain\n                       v-if=\"userInfo.role_name.includes('admin')\"\n                       icon=\"el-icon-setting\"\n                       @click=\"handlePlatform\">平台配置\n            </el-button>\n            <el-button type=\"info\"\n                       size=\"small\"\n                       plain\n                       v-if=\"userInfo.role_name.includes('admin')\"\n                       icon=\"el-icon-coordinate\"\n                       @click=\"handleLock\">账号解封\n            </el-button>\n            <el-button type=\"success\"\n                       size=\"small\"\n                       plain\n                       v-if=\"userInfo.role_name.includes('admin')\"\n                       icon=\"el-icon-upload2\"\n                       @click=\"handleImport\">导入\n            </el-button>\n            <el-button type=\"warning\"\n                       size=\"small\"\n                       plain\n                       v-if=\"userInfo.role_name.includes('admin')\"\n                       icon=\"el-icon-download\"\n                       @click=\"handleExport\">导出\n            </el-button>\n          </template>\n          <template slot-scope=\"{row}\"\n                    slot=\"tenantName\">\n            <el-tag>{{row.tenantName}}</el-tag>\n          </template>\n          <template slot-scope=\"{row}\"\n                    slot=\"roleName\">\n            <el-tag>{{row.roleName}}</el-tag>\n          </template>\n          <template slot-scope=\"{row}\"\n                    slot=\"deptName\">\n            <el-tag>{{row.deptName}}</el-tag>\n          </template>\n          <template slot-scope=\"{row}\"\n                    slot=\"userTypeName\">\n            <el-tag>{{row.userTypeName}}</el-tag>\n          </template>\n        </avue-crud>\n        <el-dialog title=\"用户角色配置\"\n                   append-to-body\n                   :visible.sync=\"roleBox\"\n                   width=\"345px\">\n\n          <el-tree :data=\"roleGrantList\"\n                   show-checkbox\n                   check-strictly\n                   default-expand-all\n                   node-key=\"id\"\n                   ref=\"treeRole\"\n                   :default-checked-keys=\"roleTreeObj\"\n                   :props=\"props\">\n          </el-tree>\n\n          <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"roleBox = false\">取 消</el-button>\n            <el-button type=\"primary\"\n                       @click=\"submitRole\">确 定</el-button>\n          </span>\n        </el-dialog>\n        <el-dialog title=\"用户数据导入\"\n                   append-to-body\n                   :visible.sync=\"excelBox\"\n                   width=\"555px\">\n          <avue-form :option=\"excelOption\" v-model=\"excelForm\" :upload-after=\"uploadAfter\">\n            <template slot=\"excelTemplate\">\n              <el-button type=\"primary\" @click=\"handleTemplate\">\n                点击下载<i class=\"el-icon-download el-icon--right\"></i>\n              </el-button>\n            </template>\n          </avue-form>\n        </el-dialog>\n        <el-dialog title=\"用户平台配置\"\n                   append-to-body\n                   :visible.sync=\"platformBox\">\n          <avue-crud :option=\"platformOption\"\n                     :table-loading=\"platformLoading\"\n                     :data=\"platformData\"\n                     ref=\"platformCrud\"\n                     v-model=\"platformForm\"\n                     :before-open=\"platformBeforeOpen\"\n                     :page.sync=\"platformPage\"\n                     :permission=\"platformPermissionList\"\n                     @row-update=\"platformRowUpdate\"\n                     @search-change=\"platformSearchChange\"\n                     @search-reset=\"platformSearchReset\"\n                     @selection-change=\"platformSelectionChange\"\n                     @current-change=\"platformCurrentChange\"\n                     @size-change=\"platformSizeChange\"\n                     @refresh-change=\"platformRefreshChange\"\n                     @on-load=\"platformOnLoad\">\n            <template slot-scope=\"{row}\"\n                      slot=\"tenantName\">\n              <el-tag>{{row.tenantName}}</el-tag>\n            </template>\n            <template slot-scope=\"{row}\"\n                      slot=\"userTypeName\">\n              <el-tag>{{row.userTypeName}}</el-tag>\n            </template>\n          </avue-crud>\n        </el-dialog>\n      </basic-container>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n  import {\n    getList,\n    getUser,\n    getUserPlatform,\n    remove,\n    update,\n    updatePlatform,\n    add,\n    grant,\n    resetPassword, unlock\n  } from \"@/api/system/user\";\n  import {exportBlob} from \"@/api/common\";\n  import {getDeptTree, getDeptLazyTree} from \"@/api/system/dept\";\n  import {getRoleTree} from \"@/api/system/role\";\n  import {getPostList} from \"@/api/system/post\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n  import {getToken} from '@/util/auth';\n  import {downloadXls} from \"@/util/util\";\n  import {dateNow} from \"@/util/date\";\n  import NProgress from 'nprogress';\n  import 'nprogress/nprogress.css';\n  import func from \"@/util/func\";\n\n  export default {\n    data() {\n      const validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          callback();\n        }\n      };\n      const validatePass2 = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        } else if (value !== this.form.password) {\n          callback(new Error('两次输入密码不一致!'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        form: {},\n        search:{},\n        roleBox: false,\n        excelBox: false,\n        platformBox: false,\n        initFlag: true,\n        selectionList: [],\n        query: {},\n        loading: true,\n        platformLoading: false,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        platformPage: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        init: {\n          roleTree: [],\n          deptTree: [],\n        },\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        roleGrantList: [],\n        roleTreeObj: [],\n        treeDeptId: '',\n        treeData: [],\n        treeOption: {\n          nodeKey: 'id',\n          lazy: true,\n          treeLoad: function (node, resolve) {\n            const parentId = (node.level === 0) ? 0 : node.data.id;\n            getDeptLazyTree(parentId).then(res => {\n              resolve(res.data.data.map(item => {\n                return {\n                  ...item,\n                  leaf: !item.hasChildren\n                }\n              }))\n            });\n          },\n          addBtn: false,\n          menu: false,\n          size: 'small',\n          props: {\n            labelText: '标题',\n            label: 'title',\n            value: 'value',\n            children: 'children'\n          }\n        },\n        option: {\n          height: 'auto',\n          calcHeight: 80,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          dialogType: 'drawer',\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"登录账号\",\n              prop: \"account\",\n              search: true,\n              display: false\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户姓名\",\n              prop: \"realName\",\n              search: true,\n              display: false\n            },\n            {\n              label: \"所属角色\",\n              prop: \"roleName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"所属部门\",\n              prop: \"deptName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户平台\",\n              prop: \"userTypeName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户平台\",\n              type: \"select\",\n              dicUrl: \"/api/blade-system/dict/dictionary?code=user_type\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              dataType: \"number\",\n              search: true,\n              hide: true,\n              display: false,\n              prop: \"userType\",\n              rules: [{\n                required: true,\n                message: \"请选择用户平台\",\n                trigger: \"blur\"\n              }]\n            },\n          ],\n          group: [\n            {\n              label: '基础信息',\n              prop: 'baseInfo',\n              icon: 'el-icon-user-solid',\n              column: [\n                {\n                  label: \"所属租户\",\n                  prop: \"tenantId\",\n                  type: \"tree\",\n                  dicUrl: \"/api/blade-system/tenant/select\",\n                  props: {\n                    label: \"tenantName\",\n                    value: \"tenantId\"\n                  },\n                  hide: !website.tenantMode,\n                  addDisplay: website.tenantMode,\n                  editDisplay: website.tenantMode,\n                  viewDisplay: website.tenantMode,\n                  rules: [{\n                    required: true,\n                    message: \"请输入所属租户\",\n                    trigger: \"click\"\n                  }],\n                  span: 24,\n                },\n                {\n                  label: \"登录账号\",\n                  prop: \"account\",\n                  rules: [{\n                    required: true,\n                    message: \"请输入登录账号\",\n                    trigger: \"blur\"\n                  }],\n                },\n                {\n                  label: \"用户平台\",\n                  type: \"select\",\n                  dicUrl: \"/api/blade-system/dict/dictionary?code=user_type\",\n                  props: {\n                    label: \"dictValue\",\n                    value: \"dictKey\"\n                  },\n                  dataType: \"number\",\n                  slot: true,\n                  prop: \"userType\",\n                  rules: [{\n                    required: true,\n                    message: \"请选择用户平台\",\n                    trigger: \"blur\"\n                  }]\n                },\n                {\n                  label: '密码',\n                  prop: 'password',\n                  hide: true,\n                  editDisplay: false,\n                  viewDisplay: false,\n                  rules: [{required: true, validator: validatePass, trigger: 'blur'}]\n                },\n                {\n                  label: '确认密码',\n                  prop: 'password2',\n                  hide: true,\n                  editDisplay: false,\n                  viewDisplay: false,\n                  rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\n                },\n              ]\n            },\n            {\n              label: '详细信息',\n              prop: 'detailInfo',\n              icon: 'el-icon-s-order',\n              column: [\n                {\n                  label: \"用户昵称\",\n                  prop: \"name\",\n                  hide: true,\n                  rules: [{\n                    required: true,\n                    message: \"请输入用户昵称\",\n                    trigger: \"blur\"\n                  }]\n                },\n                {\n                  label: \"用户姓名\",\n                  prop: \"realName\",\n                  rules: [{\n                    required: true,\n                    message: \"请输入用户姓名\",\n                    trigger: \"blur\"\n                  }, {\n                    min: 2,\n                    max: 5,\n                    message: '姓名长度在2到5个字符'\n                  }]\n                },\n                {\n                  label: \"手机号码\",\n                  prop: \"phone\",\n                  overHidden: true\n                },\n                {\n                  label: \"电子邮箱\",\n                  prop: \"email\",\n                  hide: true,\n                  overHidden: true\n                },\n                {\n                  label: \"用户性别\",\n                  prop: \"sex\",\n                  type: \"select\",\n                  dicData: [\n                    {\n                      label: \"男\",\n                      value: 1\n                    },\n                    {\n                      label: \"女\",\n                      value: 2\n                    },\n                    {\n                      label: \"未知\",\n                      value: 3\n                    }\n                  ],\n                  hide: true\n                },\n                {\n                  label: \"用户生日\",\n                  type: \"date\",\n                  prop: \"birthday\",\n                  format: \"yyyy-MM-dd hh:mm:ss\",\n                  valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n                  hide: true\n                },\n                {\n                  label: \"账号状态\",\n                  prop: \"statusName\",\n                  hide: true,\n                  display: false\n                }\n              ]\n            },\n            {\n              label: '职责信息',\n              prop: 'dutyInfo',\n              icon: 'el-icon-s-custom',\n              column: [\n                {\n                  label: \"用户编号\",\n                  prop: \"code\",\n                },\n                {\n                  label: \"所属角色\",\n                  prop: \"roleId\",\n                  multiple: true,\n                  type: \"tree\",\n                  dicData: [],\n                  props: {\n                    label: \"title\"\n                  },\n                  checkStrictly: true,\n                  slot: true,\n                  rules: [{\n                    required: true,\n                    message: \"请选择所属角色\",\n                    trigger: \"click\"\n                  }]\n                },\n                {\n                  label: \"所属部门\",\n                  prop: \"deptId\",\n                  type: \"tree\",\n                  multiple: true,\n                  dicData: [],\n                  props: {\n                    label: \"title\"\n                  },\n                  checkStrictly: true,\n                  slot: true,\n                  rules: [{\n                    required: true,\n                    message: \"请选择所属部门\",\n                    trigger: \"click\"\n                  }]\n                },\n                {\n                  label: \"所属岗位\",\n                  prop: \"postId\",\n                  type: \"tree\",\n                  multiple: true,\n                  dicData: [],\n                  props: {\n                    label: \"postName\",\n                    value: \"id\"\n                  },\n                  rules: [{\n                    required: true,\n                    message: \"请选择所属岗位\",\n                    trigger: \"click\"\n                  }],\n                },\n              ]\n            },\n          ]\n        },\n        data: [],\n        platformQuery: {},\n        platformSelectionList: [],\n        platformData: [],\n        platformForm: {},\n        platformOption: {\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          dialogClickModal: false,\n          menuWidth: 120,\n          editBtnText: '配置',\n          column: [\n            {\n              label: \"登录账号\",\n              prop: \"account\",\n              search: true,\n              display: false\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户姓名\",\n              prop: \"realName\",\n              search: true,\n              display: false\n            },\n            {\n              label: \"用户平台\",\n              prop: \"userTypeName\",\n              slot: true,\n              display: false\n            },\n            {\n              label: \"用户平台\",\n              type: \"select\",\n              dicUrl: \"/api/blade-system/dict/dictionary?code=user_type\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              dataType: \"number\",\n              search: true,\n              hide: true,\n              display: false,\n              prop: \"userType\",\n              rules: [{\n                required: true,\n                message: \"请选择用户平台\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"用户拓展\",\n              prop: \"userExt\",\n              type: \"textarea\",\n              minRows: 8,\n              span: 24,\n              overHidden: true,\n              row: true,\n              hide: true,\n            },\n          ],\n        },\n        excelForm: {},\n        excelOption: {\n          submitBtn: false,\n          emptyBtn: false,\n          column: [\n            {\n              label: '模板上传',\n              prop: 'excelFile',\n              type: 'upload',\n              drag: true,\n              loadText: '模板上传中，请稍等',\n              span: 24,\n              propsHttp: {\n                res: 'data'\n              },\n              tip: '请上传 .xls,.xlsx 标准格式文件',\n              action: \"/api/blade-user/import-user\"\n            },\n            {\n              label: \"数据覆盖\",\n              prop: \"isCovered\",\n              type: \"switch\",\n              align: \"center\",\n              width: 80,\n              dicData: [\n                {\n                  label: \"否\",\n                  value: 0\n                },\n                {\n                  label: \"是\",\n                  value: 1\n                }\n              ],\n              value: 0,\n              slot: true,\n              rules: [\n                {\n                  required: true,\n                  message: \"请选择是否覆盖\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: '模板下载',\n              prop: 'excelTemplate',\n              formslot: true,\n              span: 24,\n            }\n          ]\n        }\n      };\n    },\n    watch: {\n      'form.tenantId'() {\n        if (this.form.tenantId !== '' && this.initFlag) {\n          this.initData(this.form.tenantId);\n        }\n      },\n      'excelForm.isCovered'() {\n        if (this.excelForm.isCovered !== '') {\n          const column = this.findObject(this.excelOption.column, \"excelFile\");\n          column.action = `/api/blade-user/import-user?isCovered=${this.excelForm.isCovered}`;\n        }\n      }\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.user_add, false),\n          viewBtn: this.vaildData(this.permission.user_view, false),\n          delBtn: this.vaildData(this.permission.user_delete, false),\n          editBtn: this.vaildData(this.permission.user_edit, false)\n        };\n      },\n      platformPermissionList() {\n        return {\n          addBtn: false,\n          viewBtn: false,\n          delBtn: false,\n          editBtn: this.vaildData(this.permission.user_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n    },\n    mounted() {\n      // 非租户模式默认加载管理组数据\n      if (!website.tenantMode) {\n        this.initData(website.tenantId);\n      }\n    },\n    methods: {\n      nodeClick(data) {\n        this.treeDeptId = data.id;\n        this.page.currentPage = 1;\n        this.onLoad(this.page);\n      },\n      initData(tenantId) {\n        getRoleTree(tenantId).then(res => {\n          const column = this.findObject(this.option.group, \"roleId\");\n          column.dicData = res.data.data;\n        });\n        getDeptTree(tenantId).then(res => {\n          const column = this.findObject(this.option.group, \"deptId\");\n          column.dicData = res.data.data;\n        });\n        getPostList(tenantId).then(res => {\n          const column = this.findObject(this.option.group, \"postId\");\n          column.dicData = res.data.data;\n        });\n      },\n      submitRole() {\n        const roleList = this.$refs.treeRole.getCheckedKeys().join(\",\");\n        grant(this.ids, roleList).then(() => {\n          this.roleBox = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        row.postId = row.postId.join(\",\");\n        add(row).then(() => {\n          this.initFlag = false;\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        row.deptId = row.deptId.join(\",\");\n        row.roleId = row.roleId.join(\",\");\n        row.postId = row.postId.join(\",\");\n        update(row).then(() => {\n          this.initFlag = false;\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.treeDeptId = '';\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleReset() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return resetPassword(this.ids);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleGrant() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.roleTreeObj = [];\n        if (this.selectionList.length === 1) {\n          this.roleTreeObj = this.selectionList[0].roleId.split(\",\");\n        }\n        getRoleTree().then(res => {\n          this.roleGrantList = res.data.data;\n          this.roleBox = true;\n        });\n      },\n      handlePlatform() {\n        this.platformBox = true;\n      },\n      handleLock() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择账号解封？\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return unlock(this.ids);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleImport() {\n        this.excelBox = true;\n      },\n      uploadAfter(res, done, loading, column) {\n        window.console.log(column);\n        this.excelBox = false;\n        this.refreshChange();\n        done();\n      },\n      handleExport() {\n        const account = func.toStr(this.search.account);\n        const realName = func.toStr(this.search.realName);\n        this.$confirm(\"是否导出用户数据?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          NProgress.start();\n          exportBlob(`/api/blade-user/export-user?${this.website.tokenHeader}=${getToken()}&account=${account}&realName=${realName}`).then(res => {\n            downloadXls(res.data, `用户数据表${dateNow()}.xlsx`);\n            NProgress.done();\n          })\n        });\n      },\n      handleTemplate() {\n        exportBlob(`/api/blade-user/export-template?${this.website.tokenHeader}=${getToken()}`).then(res => {\n          downloadXls(res.data, \"用户数据模板.xlsx\");\n        })\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getUser(this.form.id).then(res => {\n            this.form = res.data.data;\n            if(this.form.hasOwnProperty(\"deptId\")){\n              this.form.deptId = this.form.deptId.split(\",\");\n            }\n            if(this.form.hasOwnProperty(\"roleId\")){\n              this.form.roleId = this.form.roleId.split(\",\");\n            }\n            if(this.form.hasOwnProperty(\"postId\")){\n              this.form.postId = this.form.postId.split(\",\");\n            }\n          });\n        }\n        this.initFlag = true;\n        done();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query), this.treeDeptId).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      platformRowUpdate(row, index, done, loading) {\n        updatePlatform(row.id, row.userType, row.userExt).then(() => {\n          this.platformOnLoad(this.platformPage);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      platformBeforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getUserPlatform(this.platformForm.id).then(res => {\n            this.platformForm = res.data.data;\n          });\n        }\n        done();\n      },\n      platformSearchReset() {\n        this.platformQuery = {};\n        this.platformOnLoad(this.platformPage);\n      },\n      platformSearchChange(params, done) {\n        this.platformQuery = params;\n        this.platformPage.currentPage = 1;\n        this.platformOnLoad(this.platformPage, params);\n        done();\n      },\n      platformSelectionChange(list) {\n        this.platformSelectionList = list;\n      },\n      platformSelectionClear() {\n        this.platformSelectionList = [];\n        this.$refs.platformCrud.toggleSelection();\n      },\n      platformCurrentChange(currentPage) {\n        this.platformPage.currentPage = currentPage;\n      },\n      platformSizeChange(pageSize) {\n        this.platformPage.pageSize = pageSize;\n      },\n      platformRefreshChange() {\n        this.platformOnLoad(this.platformPage, this.platformQuery);\n      },\n      platformOnLoad(page, params = {}) {\n        this.platformLoading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query), this.treeDeptId).then(res => {\n          const data = res.data.data;\n          this.platformPage.total = data.total;\n          this.platformData = data.records;\n          this.platformLoading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n  .box {\n    height: 800px;\n  }\n\n  .el-scrollbar {\n    height: 100%;\n  }\n\n  .box .el-scrollbar__wrap {\n    overflow: scroll;\n  }\n</style>\n"]}]}