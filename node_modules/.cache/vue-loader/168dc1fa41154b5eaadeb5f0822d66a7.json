{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/views/util/demo/dict-horizontal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/views/util/demo/dict-horizontal.vue","mtime":1666151205545},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n  import {\n    getParentList,\n    getChildList,\n    remove,\n    update,\n    add,\n    getDict,\n  } from \"@/api/system/dict\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        parentId: 0,\n        formParent: {},\n        formChild: {},\n        selectionList: [],\n        query: {},\n        loading: true,\n        pageParent: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        pageChild: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        dataParent: [],\n        dataChild: [],\n        option: {\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tree: true,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          menuWidth: 300,\n          dialogWidth: 880,\n          column: [\n            {\n              label: \"字典编号\",\n              prop: \"code\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入字典编号\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"字典键值\",\n              prop: \"dictKey\",\n              type: \"number\",\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入字典键值\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"字典名称\",\n              prop: \"dictValue\",\n              search: true,\n              align: \"center\",\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入字典名称\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"字典排序\",\n              prop: \"sort\",\n              type: \"number\",\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入字典排序\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"封存\",\n              prop: \"isSealed\",\n              type: \"select\",\n              dicData: [\n                {\n                  label: \"否\",\n                  value: 0\n                },\n                {\n                  label: \"是\",\n                  value: 1\n                }\n              ],\n              slot: true,\n              rules: [\n                {\n                  required: true,\n                  message: \"请选择封存\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"字典备注\",\n              prop: \"remark\",\n              search: true,\n              hide: true\n            }\n          ]\n        }\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.dict_add, false),\n          viewBtn: this.vaildData(this.permission.dict_view, false),\n          delBtn: this.vaildData(this.permission.dict_delete, false),\n          editBtn: this.vaildData(this.permission.dict_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleRowClick(row) {\n        this.parentId = row.id;\n        this.onLoadChild(this.pageChild);\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoadParent(this.pageParent);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.pageParent.currentPage = 1;\n        this.onLoadParent(this.pageParent, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formParent.id).then(res => {\n            this.formParent = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.pageParent.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.pageParent.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoadParent(this.page, this.query);\n      },\n      rowSaveChild(row, done, loading) {\n        add(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdateChild(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDelChild(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchResetChild() {\n        this.query = {};\n        this.onLoadChild(this.pageChild);\n      },\n      searchChangeChild(params, done) {\n        this.query = params;\n        this.pageChild.currentPage = 1;\n        this.onLoadChild(this.pageChild, params);\n        done();\n      },\n      selectionChangeChild(list) {\n        this.selectionList = list;\n      },\n      selectionClearChild() {\n        this.selectionList = [];\n        this.$refs.crudChild.toggleSelection();\n      },\n      handleDeleteChild() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crudChild.toggleSelection();\n          });\n      },\n      beforeOpenChild(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formChild.id).then(res => {\n            this.formChild = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChangeChild(currentPage) {\n        this.pageChild.currentPage = currentPage;\n      },\n      sizeChangeChild(pageSize) {\n        this.pageChild.pageSize = pageSize;\n      },\n      refreshChangeChild() {\n        this.onLoadChild(this.pageChild, this.query);\n      },\n      onLoadParent(page, params = {}) {\n        this.loading = true;\n        getParentList(\n          page.currentPage,\n          page.pageSize,\n          Object.assign(params, this.query)\n        ).then(res => {\n          const data = res.data.data;\n          this.pageParent.total = data.total;\n          this.dataParent = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      onLoadChild(page, params = {}) {\n        this.loading = true;\n        getChildList(\n          page.currentPage,\n          page.pageSize,\n          this.parentId,\n          Object.assign(params, this.query)\n        ).then(res => {\n          const data = res.data.data;\n          this.pageChild.total = data.total;\n          this.dataChild = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["dict-horizontal.vue"],"names":[],"mappings":";AAqfile":"dict-horizontal.vue","sourceRoot":"src/views/util/demo","sourcesContent":["<template>\n  <div>\n    <basic-container>\n      <el-row>\n        <el-col :span=\"12\">\n          <avue-crud\n            :option=\"option\"\n            :table-loading=\"loading\"\n            :data=\"dataParent\"\n            :page=\"pageParent\"\n            ref=\"crud\"\n            v-model=\"formParent\"\n            :permission=\"permissionList\"\n            :before-open=\"beforeOpen\"\n            @row-del=\"rowDel\"\n            @row-update=\"rowUpdate\"\n            @row-save=\"rowSave\"\n            @row-click=\"handleRowClick\"\n            @search-change=\"searchChange\"\n            @search-reset=\"searchReset\"\n            @selection-change=\"selectionChange\"\n            @current-change=\"currentChange\"\n            @size-change=\"sizeChange\"\n            @refresh-change=\"refreshChange\"\n            @on-load=\"onLoadParent\"\n          >\n            <template slot=\"menuLeft\">\n              <el-button\n                type=\"danger\"\n                size=\"small\"\n                icon=\"el-icon-delete\"\n                v-if=\"permission.dict_delete\"\n                plain\n                @click=\"handleDelete\"\n              >删 除\n              </el-button>\n            </template>\n            <template slot-scope=\"{row}\" slot=\"isSealed\">\n              <el-tag>{{row.isSealed===0?'否':'是'}}</el-tag>\n            </template>\n          </avue-crud>\n        </el-col>\n        <el-col :span=\"12\">\n          <avue-crud\n            :option=\"option\"\n            :table-loading=\"loading\"\n            :data=\"dataChild\"\n            :page=\"pageChild\"\n            ref=\"crudChild\"\n            v-model=\"formChild\"\n            :permission=\"permissionList\"\n            :before-open=\"beforeOpenChild\"\n            @row-del=\"rowDelChild\"\n            @row-update=\"rowUpdateChild\"\n            @row-save=\"rowSaveChild\"\n            @search-change=\"searchChangeChild\"\n            @search-reset=\"searchResetChild\"\n            @selection-change=\"selectionChangeChild\"\n            @current-change=\"currentChangeChild\"\n            @size-change=\"sizeChangeChild\"\n            @refresh-change=\"refreshChangeChild\"\n            @on-load=\"onLoadChild\"\n          >\n            <template slot=\"menuLeft\">\n              <el-button\n                type=\"danger\"\n                size=\"small\"\n                icon=\"el-icon-delete\"\n                v-if=\"permission.dict_delete\"\n                plain\n                @click=\"handleDelete\"\n              >删 除\n              </el-button>\n            </template>\n            <template slot-scope=\"{row}\" slot=\"isSealed\">\n              <el-tag>{{row.isSealed===0?'否':'是'}}</el-tag>\n            </template>\n          </avue-crud>\n        </el-col>\n      </el-row>\n    </basic-container>\n  </div>\n</template>\n\n<script>\n  import {\n    getParentList,\n    getChildList,\n    remove,\n    update,\n    add,\n    getDict,\n  } from \"@/api/system/dict\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        parentId: 0,\n        formParent: {},\n        formChild: {},\n        selectionList: [],\n        query: {},\n        loading: true,\n        pageParent: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        pageChild: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        dataParent: [],\n        dataChild: [],\n        option: {\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tree: true,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          menuWidth: 300,\n          dialogWidth: 880,\n          column: [\n            {\n              label: \"字典编号\",\n              prop: \"code\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入字典编号\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"字典键值\",\n              prop: \"dictKey\",\n              type: \"number\",\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入字典键值\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"字典名称\",\n              prop: \"dictValue\",\n              search: true,\n              align: \"center\",\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入字典名称\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"字典排序\",\n              prop: \"sort\",\n              type: \"number\",\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入字典排序\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"封存\",\n              prop: \"isSealed\",\n              type: \"select\",\n              dicData: [\n                {\n                  label: \"否\",\n                  value: 0\n                },\n                {\n                  label: \"是\",\n                  value: 1\n                }\n              ],\n              slot: true,\n              rules: [\n                {\n                  required: true,\n                  message: \"请选择封存\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"字典备注\",\n              prop: \"remark\",\n              search: true,\n              hide: true\n            }\n          ]\n        }\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.dict_add, false),\n          viewBtn: this.vaildData(this.permission.dict_view, false),\n          delBtn: this.vaildData(this.permission.dict_delete, false),\n          editBtn: this.vaildData(this.permission.dict_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleRowClick(row) {\n        this.parentId = row.id;\n        this.onLoadChild(this.pageChild);\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoadParent(this.pageParent);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.pageParent.currentPage = 1;\n        this.onLoadParent(this.pageParent, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formParent.id).then(res => {\n            this.formParent = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.pageParent.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.pageParent.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoadParent(this.page, this.query);\n      },\n      rowSaveChild(row, done, loading) {\n        add(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdateChild(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDelChild(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchResetChild() {\n        this.query = {};\n        this.onLoadChild(this.pageChild);\n      },\n      searchChangeChild(params, done) {\n        this.query = params;\n        this.pageChild.currentPage = 1;\n        this.onLoadChild(this.pageChild, params);\n        done();\n      },\n      selectionChangeChild(list) {\n        this.selectionList = list;\n      },\n      selectionClearChild() {\n        this.selectionList = [];\n        this.$refs.crudChild.toggleSelection();\n      },\n      handleDeleteChild() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crudChild.toggleSelection();\n          });\n      },\n      beforeOpenChild(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formChild.id).then(res => {\n            this.formChild = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChangeChild(currentPage) {\n        this.pageChild.currentPage = currentPage;\n      },\n      sizeChangeChild(pageSize) {\n        this.pageChild.pageSize = pageSize;\n      },\n      refreshChangeChild() {\n        this.onLoadChild(this.pageChild, this.query);\n      },\n      onLoadParent(page, params = {}) {\n        this.loading = true;\n        getParentList(\n          page.currentPage,\n          page.pageSize,\n          Object.assign(params, this.query)\n        ).then(res => {\n          const data = res.data.data;\n          this.pageParent.total = data.total;\n          this.dataParent = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      onLoadChild(page, params = {}) {\n        this.loading = true;\n        getChildList(\n          page.currentPage,\n          page.pageSize,\n          this.parentId,\n          Object.assign(params, this.query)\n        ).then(res => {\n          const data = res.data.data;\n          this.pageChild.total = data.total;\n          this.dataChild = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n</style>\n"]}]}