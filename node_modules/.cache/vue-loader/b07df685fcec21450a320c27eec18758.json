{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/page/index/tags.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/page/index/tags.vue","mtime":1666151205525},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n  import {mapGetters, mapState} from \"vuex\";\n  import {clearCache} from \"@/api/user\";\n\n  export default {\n    name: \"tags\",\n    data() {\n      return {\n        active: \"\",\n        contentmenuX: \"\",\n        contentmenuY: \"\",\n        contextmenuFlag: false\n      };\n    },\n    created() {\n    },\n    mounted() {\n      this.setActive();\n    },\n    watch: {\n      tag() {\n        this.setActive();\n      },\n      contextmenuFlag() {\n        window.addEventListener(\"mousedown\", this.watchContextmenu);\n      }\n    },\n    computed: {\n      ...mapGetters([\"tagWel\", \"tagList\", \"tag\", \"website\"]),\n      ...mapState({\n        showTag: state => state.common.showTag\n      }),\n      tagLen() {\n        return this.tagList.length || 0;\n      }\n    },\n    methods: {\n      generateTitle(item) {\n        return this.$router.$avueRouter.generateTitle(\n          item.label,\n          (item.meta || {}).i18n\n        );\n      },\n      watchContextmenu(event) {\n        if (!this.$el.contains(event.target) || event.button !== 0) {\n          this.contextmenuFlag = false;\n        }\n        window.removeEventListener(\"mousedown\", this.watchContextmenu);\n      },\n      handleContextmenu(event) {\n        let target = event.target;\n        // 解决 https://github.com/d2-projects/d2-admin/issues/54\n        let flag = false;\n        if (target.className.indexOf(\"el-tabs__item\") > -1) flag = true;\n        else if (target.parentNode.className.indexOf(\"el-tabs__item\") > -1) {\n          target = target.parentNode;\n          flag = true;\n        }\n        if (flag) {\n          event.preventDefault();\n          event.stopPropagation();\n          this.contentmenuX = event.clientX;\n          this.contentmenuY = event.clientY;\n          this.tagName = target.getAttribute(\"aria-controls\").slice(5);\n          this.contextmenuFlag = true;\n        }\n      },\n      //激活当前选项\n      setActive() {\n        this.active = this.tag.value;\n      },\n      menuTag(value, action) {\n        if (action === \"remove\") {\n          let {tag, key} = this.findTag(value);\n          this.$store.commit(\"DEL_TAG\", tag);\n          if (tag.value === this.tag.value) {\n            tag = this.tagList[key === 0 ? key : key - 1]; //如果关闭本标签让前推一个\n            this.openTag(tag);\n          }\n        }\n      },\n      openTag(item) {\n        let tag;\n        if (item.name) {\n          tag = this.findTag(item.name).tag;\n        } else {\n          tag = item;\n        }\n        this.$router.push({\n          path: this.$router.$avueRouter.getPath({\n            name: tag.label,\n            src: tag.value\n          }, tag.meta),\n          query: tag.query\n        });\n      },\n      closeOthersTags() {\n        this.contextmenuFlag = false;\n        this.$store.commit(\"DEL_TAG_OTHER\");\n      },\n      findTag(value) {\n        let tag, key;\n        this.tagList.map((item, index) => {\n          if (item.value === value) {\n            tag = item;\n            key = index;\n          }\n        });\n        return {tag: tag, key: key};\n      },\n      closeAllTags() {\n        this.contextmenuFlag = false;\n        this.$store.commit(\"DEL_ALL_TAG\");\n        this.$router.push({\n          path: this.$router.$avueRouter.getPath({\n            src: this.tagWel.value\n          }),\n          query: this.tagWel.query\n        });\n      },\n      clearCacheTags() {\n        this.$confirm(\"是否需要清除缓存?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          clearCache().then(() => {\n            this.contextmenuFlag = false;\n            this.$message.success('清除完毕');\n          })\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["tags.vue"],"names":[],"mappings":";AAkDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tags.vue","sourceRoot":"src/page/index","sourcesContent":["<template>\n  <div class=\"avue-tags\"\n       v-if=\"showTag\">\n    <!-- tag盒子 -->\n    <div v-if=\"contextmenuFlag\"\n         class=\"avue-tags__contentmenu\"\n         :style=\"{left:contentmenuX+'px',top:contentmenuY+'px'}\">\n      <div class=\"item\"\n           @click=\"clearCacheTags\">{{$t('tagsView.clearCache')}}\n      </div>\n      <div class=\"item\"\n           @click=\"closeOthersTags\">{{$t('tagsView.closeOthers')}}\n      </div>\n      <div class=\"item\"\n           @click=\"closeAllTags\">{{$t('tagsView.closeAll')}}\n      </div>\n    </div>\n    <div class=\"avue-tags__box\"\n         :class=\"{'avue-tags__box--close':!website.isFirstPage}\">\n      <el-tabs v-model=\"active\"\n               type=\"card\"\n               @contextmenu.native=\"handleContextmenu\"\n               :closable=\"tagLen!==1\"\n               @tab-click=\"openTag\"\n               @edit=\"menuTag\">\n        <el-tab-pane :key=\"item.value\"\n                     v-for=\"item in tagList\"\n                     :label=\"generateTitle(item)\"\n                     :name=\"item.value\">\n        </el-tab-pane>\n\n      </el-tabs>\n      <el-dropdown class=\"avue-tags__menu\">\n        <el-button type=\"primary\"\n                   size=\"mini\">\n          {{$t('tagsView.menu')}}\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item @click.native=\"$parent.isSearch=true\">{{$t('tagsView.search')}}</el-dropdown-item>\n          <el-dropdown-item @click.native=\"closeOthersTags\">{{$t('tagsView.closeOthers')}}</el-dropdown-item>\n          <el-dropdown-item @click.native=\"closeAllTags\">{{$t('tagsView.closeAll')}}</el-dropdown-item>\n          <el-dropdown-item @click.native=\"clearCacheTags\">{{$t('tagsView.clearCache')}}</el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n    </div>\n\n  </div>\n</template>\n<script>\n  import {mapGetters, mapState} from \"vuex\";\n  import {clearCache} from \"@/api/user\";\n\n  export default {\n    name: \"tags\",\n    data() {\n      return {\n        active: \"\",\n        contentmenuX: \"\",\n        contentmenuY: \"\",\n        contextmenuFlag: false\n      };\n    },\n    created() {\n    },\n    mounted() {\n      this.setActive();\n    },\n    watch: {\n      tag() {\n        this.setActive();\n      },\n      contextmenuFlag() {\n        window.addEventListener(\"mousedown\", this.watchContextmenu);\n      }\n    },\n    computed: {\n      ...mapGetters([\"tagWel\", \"tagList\", \"tag\", \"website\"]),\n      ...mapState({\n        showTag: state => state.common.showTag\n      }),\n      tagLen() {\n        return this.tagList.length || 0;\n      }\n    },\n    methods: {\n      generateTitle(item) {\n        return this.$router.$avueRouter.generateTitle(\n          item.label,\n          (item.meta || {}).i18n\n        );\n      },\n      watchContextmenu(event) {\n        if (!this.$el.contains(event.target) || event.button !== 0) {\n          this.contextmenuFlag = false;\n        }\n        window.removeEventListener(\"mousedown\", this.watchContextmenu);\n      },\n      handleContextmenu(event) {\n        let target = event.target;\n        // 解决 https://github.com/d2-projects/d2-admin/issues/54\n        let flag = false;\n        if (target.className.indexOf(\"el-tabs__item\") > -1) flag = true;\n        else if (target.parentNode.className.indexOf(\"el-tabs__item\") > -1) {\n          target = target.parentNode;\n          flag = true;\n        }\n        if (flag) {\n          event.preventDefault();\n          event.stopPropagation();\n          this.contentmenuX = event.clientX;\n          this.contentmenuY = event.clientY;\n          this.tagName = target.getAttribute(\"aria-controls\").slice(5);\n          this.contextmenuFlag = true;\n        }\n      },\n      //激活当前选项\n      setActive() {\n        this.active = this.tag.value;\n      },\n      menuTag(value, action) {\n        if (action === \"remove\") {\n          let {tag, key} = this.findTag(value);\n          this.$store.commit(\"DEL_TAG\", tag);\n          if (tag.value === this.tag.value) {\n            tag = this.tagList[key === 0 ? key : key - 1]; //如果关闭本标签让前推一个\n            this.openTag(tag);\n          }\n        }\n      },\n      openTag(item) {\n        let tag;\n        if (item.name) {\n          tag = this.findTag(item.name).tag;\n        } else {\n          tag = item;\n        }\n        this.$router.push({\n          path: this.$router.$avueRouter.getPath({\n            name: tag.label,\n            src: tag.value\n          }, tag.meta),\n          query: tag.query\n        });\n      },\n      closeOthersTags() {\n        this.contextmenuFlag = false;\n        this.$store.commit(\"DEL_TAG_OTHER\");\n      },\n      findTag(value) {\n        let tag, key;\n        this.tagList.map((item, index) => {\n          if (item.value === value) {\n            tag = item;\n            key = index;\n          }\n        });\n        return {tag: tag, key: key};\n      },\n      closeAllTags() {\n        this.contextmenuFlag = false;\n        this.$store.commit(\"DEL_ALL_TAG\");\n        this.$router.push({\n          path: this.$router.$avueRouter.getPath({\n            src: this.tagWel.value\n          }),\n          query: this.tagWel.query\n        });\n      },\n      clearCacheTags() {\n        this.$confirm(\"是否需要清除缓存?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          clearCache().then(() => {\n            this.contextmenuFlag = false;\n            this.$message.success('清除完毕');\n          })\n        });\n      }\n    }\n  };\n</script>\n\n\n"]}]}