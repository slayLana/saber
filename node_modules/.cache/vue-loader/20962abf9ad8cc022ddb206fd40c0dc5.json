{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/views/wel/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/views/wel/index.vue","mtime":1666151205547},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\nimport { mapGetters } from \"vuex\";\nimport { downloadXls } from \"@/util/util\";\nimport request from \"@/router/axios\";\nimport store from \"../../store\";\nexport default {\n  name: \"wel\",\n  data() {\n    return {\n      headers: {\n        \"Blade-Auth\": \"Bearer \" + store.getters.token,\n      },\n      activeNames: [\"1\", \"2\", \"3\", \"5\"],\n      logActiveNames: [\"28\"],\n    };\n  },\n  computed: {\n    ...mapGetters([\"userInfo\"]),\n  },\n  methods: {\n    handleChange(val) {\n      window.console.log(val);\n    },\n    uploadFile(params) {\n      console.log(params.file);\n      const form = new FormData();\n      let name = params.file.name;\n      name = name.replace(\".pdf\", \".docx\");\n      form.append(\"file\", params.file);\n      request({\n        url: \"/api/blade-goodsInfo/goodsInfo/pdf2doc\",\n        method: \"post\",\n        data: form,\n        responseType: \"blob\",\n      }).then((res) => {\n        this.$refs.pdf2docx.clearFiles();\n        downloadXls(res.data, name);\n      });\n    },\n    beforeUpload(file) {\n      const fileSuffix = file.name.substring(file.name.lastIndexOf(\".\") + 1);\n\n      const whiteList = [\"pdf\"];\n\n      if (!whiteList.includes(fileSuffix)) {\n        this.$message.error(\"上传文件只能是 pdf格式\");\n        return false;\n      }\n\n      const isLt2M = file.size / 1024 / 1024 < 30;\n\n      if (!isLt2M) {\n        this.$message.error(\"上传文件大小不能超过 30MB\");\n        return false;\n      }\n    },\n  },\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/wel","sourcesContent":["<template>\n  <div>\n    <el-row>\n      <el-col :span=\"24\">\n        <third-register></third-register>\n      </el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"24\">\n        <basic-container>\n          小工具\n          <!-- <p style=\"text-align: center\">\n            <img src=\"https://img.shields.io/badge/Release-V3.0.1-green.svg\" alt=\"Downloads\"/>\n            <img src=\"https://img.shields.io/badge/JDK-1.8+-green.svg\" alt=\"Build Status\"/>\n            <img src=\"https://img.shields.io/badge/Spring%20Cloud-2021-blue.svg\" alt=\"Coverage Status\"/>\n            <img src=\"https://img.shields.io/badge/Spring%20Boot-2.7-blue.svg\" alt=\"Downloads\"/>\n            <a target=\"_blank\" href=\"https://bladex.vip\">\n              <img src=\"https://img.shields.io/badge/Saber%20Author-Small%20Chill-ff69b4.svg\" alt=\"Downloads\"/>\n            </a>\n            <a target=\"_blank\" href=\"https://bladex.vip\">\n              <img src=\"https://img.shields.io/badge/Copyright%20-@BladeX-%23ff3f59.svg\" alt=\"Downloads\"/>\n            </a>\n          </p> -->\n        </basic-container>\n      </el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"16\">\n        <basic-container>\n          pdf转word\n          <el-upload\n            class=\"upload-demo\"\n            drag\n            :beforeUpload=\"beforeUpload\"\n            accept=\".pdf\"\n            ref=\"pdf2docx\"\n            :http-request=\"uploadFile\"\n            :headers=\"headers\"\n            :show-file-list=\"false\"\n            action=\"\"\n            multiple\n            :on-success=\"download\"\n          >\n            <i class=\"el-icon-upload\"></i>\n            <div class=\"el-upload__text\">\n              将文件拖到此处，或<em>点击上传</em>\n            </div>\n            <div class=\"el-upload__tip\" slot=\"tip\">\n              只能上传pdf文件，且不超过30MB\n            </div>\n          </el-upload>\n        </basic-container>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-row>\n          <basic-container> </basic-container>\n        </el-row>\n        <el-row>\n          <basic-container> </basic-container>\n        </el-row>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport { downloadXls } from \"@/util/util\";\nimport request from \"@/router/axios\";\nimport store from \"../../store\";\nexport default {\n  name: \"wel\",\n  data() {\n    return {\n      headers: {\n        \"Blade-Auth\": \"Bearer \" + store.getters.token,\n      },\n      activeNames: [\"1\", \"2\", \"3\", \"5\"],\n      logActiveNames: [\"28\"],\n    };\n  },\n  computed: {\n    ...mapGetters([\"userInfo\"]),\n  },\n  methods: {\n    handleChange(val) {\n      window.console.log(val);\n    },\n    uploadFile(params) {\n      console.log(params.file);\n      const form = new FormData();\n      let name = params.file.name;\n      name = name.replace(\".pdf\", \".docx\");\n      form.append(\"file\", params.file);\n      request({\n        url: \"/api/blade-goodsInfo/goodsInfo/pdf2doc\",\n        method: \"post\",\n        data: form,\n        responseType: \"blob\",\n      }).then((res) => {\n        this.$refs.pdf2docx.clearFiles();\n        downloadXls(res.data, name);\n      });\n    },\n    beforeUpload(file) {\n      const fileSuffix = file.name.substring(file.name.lastIndexOf(\".\") + 1);\n\n      const whiteList = [\"pdf\"];\n\n      if (!whiteList.includes(fileSuffix)) {\n        this.$message.error(\"上传文件只能是 pdf格式\");\n        return false;\n      }\n\n      const isLt2M = file.size / 1024 / 1024 < 30;\n\n      if (!isLt2M) {\n        this.$message.error(\"上传文件大小不能超过 30MB\");\n        return false;\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.el-font-size {\n  font-size: 14px;\n}\n</style>\n\n"]}]}