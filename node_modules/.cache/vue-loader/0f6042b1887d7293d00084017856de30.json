{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/resource/sms.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/resource/sms.vue","mtime":1666151205540},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n  import {getList, getDetail, add, update, remove, enable, send} from \"@/api/resource/sms\";\n  import {mapGetters} from \"vuex\";\n  import func from \"@/util/func\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        query: {},\n        loading: true,\n        box: false,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        option: {\n          height: 'auto',\n          calcHeight: 30,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          viewBtn: true,\n          selection: true,\n          menuWidth: 350,\n          labelWidth: 100,\n          dialogWidth: 880,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"分类\",\n              type: \"radio\",\n              value: 1,\n              span: 24,\n              width: 100,\n              searchLabelWidth: 50,\n              row: true,\n              dicUrl: \"/api/blade-system/dict/dictionary?code=sms\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              dataType: \"number\",\n              slot: true,\n              prop: \"category\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请选择分类\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"资源编号\",\n              prop: \"smsCode\",\n              span: 24,\n              width: 200,\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入资源编号\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"模版ID\",\n              prop: \"templateId\",\n              span: 24,\n              width: 200,\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入模版ID\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"accessKey\",\n              prop: \"accessKey\",\n              span: 24,\n              overHidden: true,\n              rules: [{\n                required: true,\n                message: \"请输入accessKey\",\n                trigger: \"blur\"\n              }],\n            },\n            {\n              label: \"secretKey\",\n              prop: \"secretKey\",\n              span: 24,\n              overHidden: true,\n              display: true,\n              hide: true,\n              rules: [{\n                required: true,\n                message: \"请输入secretKey\",\n                trigger: \"blur\"\n              }],\n            },\n            {\n              label: \"regionId\",\n              prop: \"regionId\",\n              span: 24,\n              value: \"cn-hangzhou\",\n              hide: true,\n              display: false\n            },\n            {\n              label: \"短信签名\",\n              prop: \"signName\",\n              span: 24,\n              width: 200,\n              rules: [{\n                required: true,\n                message: \"请输入短信签名\",\n                trigger: \"blur\"\n              }],\n            },\n            {\n              label: \"是否启用\",\n              prop: \"status\",\n              span: 24,\n              width: 80,\n              align: \"center\",\n              slot: true,\n              addDisplay: false,\n              editDisplay: false,\n              viewDisplay: false,\n            },\n            {\n              label: \"备注\",\n              prop: \"remark\",\n              span: 24,\n              hide: true\n            },\n          ]\n        },\n        data: [],\n        debugForm: {\n          code: '',\n        },\n        debugOption: {\n          submitText: \"发送\",\n          column: [\n            {\n              label: \"资源编号\",\n              prop: \"code\",\n              disabled: true,\n              span: 24,\n            },\n            {\n              label: \"发送手机\",\n              prop: \"phones\",\n              span: 24,\n            },\n            {\n              label: \"发送参数\",\n              prop: \"params\",\n              span: 24,\n              placeholder: \"例: {'code':2333,'title':'通知标题'}\",\n            },\n          ]\n        }\n      };\n    },\n    watch: {\n      'form.category'() {\n        const category = func.toInt(this.form.category);\n        this.$refs.crud.option.column.filter(item => {\n          if (item.prop === \"templateId\") {\n            if (category === 1) {\n              item.label = \"模版内容\";\n            } else {\n              item.label = \"模版ID\";\n            }\n          }\n          if (item.prop === \"accessKey\") {\n            if (category === 1) {\n              item.label = \"apiKey\";\n            } else if (category === 4) {\n              item.label = \"appId\";\n            } else {\n              item.label = \"accessKey\";\n            }\n          }\n          if (item.prop === \"secretKey\") {\n            item.display = category !== 1;\n            if (category === 4) {\n              item.label = \"appKey\";\n            } else {\n              item.label = \"secretKey\";\n            }\n          }\n          if (item.prop === \"regionId\") {\n            if (category === 3) {\n              item.display = true;\n              item.value = \"cn-hangzhou\";\n            } else {\n              item.display = false;\n            }\n          }\n        });\n      }\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.sms_add, false),\n          viewBtn: this.vaildData(this.permission.sms_view, false),\n          delBtn: this.vaildData(this.permission.sms_delete, false),\n          editBtn: this.vaildData(this.permission.sms_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleEnable(row) {\n        this.$confirm(\"是否确定启用这条配置?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return enable(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleDebug(row) {\n        this.box = true;\n        this.debugForm.code = row.smsCode;\n      },\n      handleSend(form, done, loading) {\n        send(form.code, form.phones, form.params).then((res) => {\n          this.$message({\n            type: \"success\",\n            message: \"发送成功!\"\n          });\n          done();\n          window.console.log(res);\n          this.box = false;\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["sms.vue"],"names":[],"mappingsfile":"sms.vue","sourceRoot":"src/views/resource","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page.sync=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"permission.sms_delete\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template slot-scope=\"scope\" slot=\"menu\">\n        <el-button type=\"text\"\n                   icon=\"el-icon-video-play\"\n                   size=\"small\"\n                   v-if=\"userInfo.role_name.includes('admin')\"\n                   @click=\"handleDebug(scope.row)\">调试\n        </el-button>\n        <el-button type=\"text\"\n                   icon=\"el-icon-circle-check\"\n                   size=\"small\"\n                   v-if=\"permission.sms_enable\"\n                   @click.stop=\"handleEnable(scope.row)\">启用\n        </el-button>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"status\">\n        <el-tag>{{row.statusName}}</el-tag>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"category\">\n        <el-tag>{{row.categoryName}}</el-tag>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"手机短信发送调试\"\n               append-to-body\n               :visible.sync=\"box\"\n               width=\"550px\">\n      <avue-form :option=\"debugOption\" v-model=\"debugForm\" @submit=\"handleSend\"/>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {getList, getDetail, add, update, remove, enable, send} from \"@/api/resource/sms\";\n  import {mapGetters} from \"vuex\";\n  import func from \"@/util/func\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        query: {},\n        loading: true,\n        box: false,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        option: {\n          height: 'auto',\n          calcHeight: 30,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          viewBtn: true,\n          selection: true,\n          menuWidth: 350,\n          labelWidth: 100,\n          dialogWidth: 880,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"分类\",\n              type: \"radio\",\n              value: 1,\n              span: 24,\n              width: 100,\n              searchLabelWidth: 50,\n              row: true,\n              dicUrl: \"/api/blade-system/dict/dictionary?code=sms\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              dataType: \"number\",\n              slot: true,\n              prop: \"category\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请选择分类\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"资源编号\",\n              prop: \"smsCode\",\n              span: 24,\n              width: 200,\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入资源编号\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"模版ID\",\n              prop: \"templateId\",\n              span: 24,\n              width: 200,\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入模版ID\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"accessKey\",\n              prop: \"accessKey\",\n              span: 24,\n              overHidden: true,\n              rules: [{\n                required: true,\n                message: \"请输入accessKey\",\n                trigger: \"blur\"\n              }],\n            },\n            {\n              label: \"secretKey\",\n              prop: \"secretKey\",\n              span: 24,\n              overHidden: true,\n              display: true,\n              hide: true,\n              rules: [{\n                required: true,\n                message: \"请输入secretKey\",\n                trigger: \"blur\"\n              }],\n            },\n            {\n              label: \"regionId\",\n              prop: \"regionId\",\n              span: 24,\n              value: \"cn-hangzhou\",\n              hide: true,\n              display: false\n            },\n            {\n              label: \"短信签名\",\n              prop: \"signName\",\n              span: 24,\n              width: 200,\n              rules: [{\n                required: true,\n                message: \"请输入短信签名\",\n                trigger: \"blur\"\n              }],\n            },\n            {\n              label: \"是否启用\",\n              prop: \"status\",\n              span: 24,\n              width: 80,\n              align: \"center\",\n              slot: true,\n              addDisplay: false,\n              editDisplay: false,\n              viewDisplay: false,\n            },\n            {\n              label: \"备注\",\n              prop: \"remark\",\n              span: 24,\n              hide: true\n            },\n          ]\n        },\n        data: [],\n        debugForm: {\n          code: '',\n        },\n        debugOption: {\n          submitText: \"发送\",\n          column: [\n            {\n              label: \"资源编号\",\n              prop: \"code\",\n              disabled: true,\n              span: 24,\n            },\n            {\n              label: \"发送手机\",\n              prop: \"phones\",\n              span: 24,\n            },\n            {\n              label: \"发送参数\",\n              prop: \"params\",\n              span: 24,\n              placeholder: \"例: {'code':2333,'title':'通知标题'}\",\n            },\n          ]\n        }\n      };\n    },\n    watch: {\n      'form.category'() {\n        const category = func.toInt(this.form.category);\n        this.$refs.crud.option.column.filter(item => {\n          if (item.prop === \"templateId\") {\n            if (category === 1) {\n              item.label = \"模版内容\";\n            } else {\n              item.label = \"模版ID\";\n            }\n          }\n          if (item.prop === \"accessKey\") {\n            if (category === 1) {\n              item.label = \"apiKey\";\n            } else if (category === 4) {\n              item.label = \"appId\";\n            } else {\n              item.label = \"accessKey\";\n            }\n          }\n          if (item.prop === \"secretKey\") {\n            item.display = category !== 1;\n            if (category === 4) {\n              item.label = \"appKey\";\n            } else {\n              item.label = \"secretKey\";\n            }\n          }\n          if (item.prop === \"regionId\") {\n            if (category === 3) {\n              item.display = true;\n              item.value = \"cn-hangzhou\";\n            } else {\n              item.display = false;\n            }\n          }\n        });\n      }\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.sms_add, false),\n          viewBtn: this.vaildData(this.permission.sms_view, false),\n          delBtn: this.vaildData(this.permission.sms_delete, false),\n          editBtn: this.vaildData(this.permission.sms_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleEnable(row) {\n        this.$confirm(\"是否确定启用这条配置?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return enable(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleDebug(row) {\n        this.box = true;\n        this.debugForm.code = row.smsCode;\n      },\n      handleSend(form, done, loading) {\n        send(form.code, form.phones, form.params).then((res) => {\n          this.$message({\n            type: \"success\",\n            message: \"发送成功!\"\n          });\n          done();\n          window.console.log(res);\n          this.box = false;\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n"]}]}