{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/system/dictbiz.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/system/dictbiz.vue","mtime":1666151205542},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n  import {\n    getParentList,\n    getChildList,\n    remove,\n    update,\n    add,\n    getDict,\n    getDictTree\n  } from \"@/api/system/dictbiz\";\n  import {optionParent, optionChild} from \"@/option/system/dictbiz\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        dictValue: '暂无',\n        parentId: -1,\n        formParent: {},\n        formChild: {},\n        selectionList: [],\n        query: {},\n        box: false,\n        loading: true,\n        loadingChild: true,\n        pageParent: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        pageChild: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        dataParent: [],\n        dataChild: [],\n        optionParent: optionParent,\n        optionChild: optionChild,\n      };\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.dictbiz_add, false),\n          delBtn: this.vaildData(this.permission.dictbiz_delete, false),\n          editBtn: this.vaildData(this.permission.dictbiz_edit, false),\n          viewBtn: false,\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    mounted() {\n      this.initData();\n    },\n    methods: {\n      initData() {\n        getDictTree().then(res => {\n          const column = this.findObject(this.optionChild.column, \"parentId\");\n          column.dicData = res.data.data;\n        });\n      },\n      handleAdd(row) {\n        this.formChild.dictValue = \"\";\n        this.formChild.dictKey = \"\";\n        this.formChild.sort = 0;\n        this.formChild.isSealed = 0;\n        this.formChild.remark = \"\";\n        this.formChild.parentId = row.id;\n        this.$refs.crudChild.rowAdd();\n      },\n      rowSave(row, done, loading) {\n        const form = {\n          ...row,\n          dictKey: -1,\n        };\n        add(form).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoadChild(this.pageChild);\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleRowClick(row) {\n        this.query = {};\n        this.parentId = row.id;\n        this.dictValue = row.dictValue;\n\n        const code = this.findObject(this.optionChild.column, \"code\");\n        code.value = row.code;\n        const parentId = this.findObject(this.optionChild.column, \"parentId\");\n        parentId.value = row.id;\n\n        this.box = true;\n        this.onLoadChild(this.pageChild);\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoadParent(this.pageParent);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.pageParent.currentPage = 1;\n        this.onLoadParent(this.pageParent, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formParent.id).then(res => {\n            this.formParent = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.pageParent.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.pageParent.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoadParent(this.pageParent, this.query);\n      },\n      rowSaveChild(row, done, loading) {\n        add(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdateChild(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDelChild(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchResetChild() {\n        this.query = {};\n        this.onLoadChild(this.pageChild);\n      },\n      searchChangeChild(params, done) {\n        this.query = params;\n        this.pageChild.currentPage = 1;\n        this.onLoadChild(this.pageChild, params);\n        done();\n      },\n      selectionChangeChild(list) {\n        this.selectionList = list;\n      },\n      selectionClearChild() {\n        this.selectionList = [];\n        this.$refs.crudChild.toggleSelection();\n      },\n      handleDeleteChild() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crudChild.toggleSelection();\n          });\n      },\n      beforeOpenChild(done, type) {\n        if ([\"add\", \"edit\"].includes(type)) {\n          this.initData();\n        }\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formChild.id).then(res => {\n            this.formChild = res.data.data;\n          });\n        }\n        done();\n      },\n      beforeCloseChild(done) {\n        this.$refs.crudChild.value.parentId = this.parentId;\n        this.$refs.crudChild.option.column.filter(item => {\n          if (item.prop === \"parentId\") {\n            item.value = this.parentId;\n          }\n        });\n        done();\n      },\n      currentChangeChild(currentPage) {\n        this.pageChild.currentPage = currentPage;\n      },\n      sizeChangeChild(pageSize) {\n        this.pageChild.pageSize = pageSize;\n      },\n      refreshChangeChild() {\n        this.onLoadChild(this.pageChild, this.query);\n      },\n      onLoadParent(page, params = {}) {\n        this.loading = true;\n        getParentList(\n          page.currentPage,\n          page.pageSize,\n          Object.assign(params, this.query)\n        ).then(res => {\n          const data = res.data.data;\n          this.pageParent.total = data.total;\n          this.dataParent = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      onLoadChild(page, params = {}) {\n        this.loadingChild = true;\n        getChildList(\n          page.currentPage,\n          page.pageSize,\n          this.parentId,\n          Object.assign(params, this.query)\n        ).then(res => {\n          this.dataChild = res.data.data;\n          this.loadingChild = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["dictbiz.vue"],"names":[],"mappings":";AAyfile":"dictbiz.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud\n      :option=\"optionParent\"\n      :table-loading=\"loading\"\n      :data=\"dataParent\"\n      :page=\"pageParent\"\n      ref=\"crud\"\n      v-model=\"formParent\"\n      :permission=\"permissionList\"\n      :before-open=\"beforeOpen\"\n      @row-del=\"rowDel\"\n      @row-update=\"rowUpdate\"\n      @row-save=\"rowSave\"\n      @row-click=\"handleRowClick\"\n      @search-change=\"searchChange\"\n      @search-reset=\"searchReset\"\n      @selection-change=\"selectionChange\"\n      @current-change=\"currentChange\"\n      @size-change=\"sizeChange\"\n      @refresh-change=\"refreshChange\"\n      @on-load=\"onLoadParent\"\n    >\n      <template slot=\"menuLeft\">\n        <el-button\n          type=\"danger\"\n          size=\"small\"\n          icon=\"el-icon-delete\"\n          v-if=\"permission.dictbiz_delete\"\n          plain\n          @click=\"handleDelete\"\n        >删 除\n        </el-button>\n      </template>\n      <template slot-scope=\"scope\" slot=\"menu\">\n        <el-button\n          type=\"text\"\n          icon=\"el-icon-setting\"\n          size=\"small\"\n          @click.stop=\"handleRowClick(scope.row)\"\n          v-if=\"userInfo.role_name.includes('admin')\"\n        >字典配置\n        </el-button>\n      </template>\n      <template slot-scope=\"{row}\" slot=\"code\">\n        <el-tag @click=\"handleRowClick(row)\" style=\"cursor:pointer\">{{ row.code }}</el-tag>\n      </template>\n      <template slot-scope=\"{row}\" slot=\"isSealed\">\n        <el-tag>{{ row.isSealed === 0 ? '否' : '是' }}</el-tag>\n      </template>\n    </avue-crud>\n    <el-dialog :title=\"`[${dictValue}]字典配置`\"\n               append-to-body\n               :visible.sync=\"box\"\n               width=\"1000px\">\n      <avue-crud\n        :option=\"optionChild\"\n        :table-loading=\"loadingChild\"\n        :data=\"dataChild\"\n        ref=\"crudChild\"\n        v-model=\"formChild\"\n        :permission=\"permissionList\"\n        :before-open=\"beforeOpenChild\"\n        :before-close=\"beforeCloseChild\"\n        @row-del=\"rowDelChild\"\n        @row-update=\"rowUpdateChild\"\n        @row-save=\"rowSaveChild\"\n        @search-change=\"searchChangeChild\"\n        @search-reset=\"searchResetChild\"\n        @selection-change=\"selectionChangeChild\"\n        @current-change=\"currentChangeChild\"\n        @size-change=\"sizeChangeChild\"\n        @refresh-change=\"refreshChangeChild\"\n        @on-load=\"onLoadChild\"\n      >\n        <template slot=\"menuLeft\">\n          <el-button\n            type=\"danger\"\n            size=\"small\"\n            icon=\"el-icon-delete\"\n            v-if=\"permission.dict_delete\"\n            plain\n            @click=\"handleDelete\"\n          >删 除\n          </el-button>\n        </template>\n        <template slot-scope=\"scope\" slot=\"menu\">\n          <el-button\n            type=\"text\"\n            icon=\"el-icon-circle-plus-outline\"\n            size=\"small\"\n            @click.stop=\"handleAdd(scope.row,scope.index)\"\n            v-if=\"userInfo.role_name.includes('admin')\"\n          >新增子项\n          </el-button>\n        </template>\n        <template slot-scope=\"{row}\" slot=\"isSealed\">\n          <el-tag>{{ row.isSealed === 0 ? '否' : '是' }}</el-tag>\n        </template>\n      </avue-crud>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {\n    getParentList,\n    getChildList,\n    remove,\n    update,\n    add,\n    getDict,\n    getDictTree\n  } from \"@/api/system/dictbiz\";\n  import {optionParent, optionChild} from \"@/option/system/dictbiz\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        dictValue: '暂无',\n        parentId: -1,\n        formParent: {},\n        formChild: {},\n        selectionList: [],\n        query: {},\n        box: false,\n        loading: true,\n        loadingChild: true,\n        pageParent: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        pageChild: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        dataParent: [],\n        dataChild: [],\n        optionParent: optionParent,\n        optionChild: optionChild,\n      };\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.dictbiz_add, false),\n          delBtn: this.vaildData(this.permission.dictbiz_delete, false),\n          editBtn: this.vaildData(this.permission.dictbiz_edit, false),\n          viewBtn: false,\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    mounted() {\n      this.initData();\n    },\n    methods: {\n      initData() {\n        getDictTree().then(res => {\n          const column = this.findObject(this.optionChild.column, \"parentId\");\n          column.dicData = res.data.data;\n        });\n      },\n      handleAdd(row) {\n        this.formChild.dictValue = \"\";\n        this.formChild.dictKey = \"\";\n        this.formChild.sort = 0;\n        this.formChild.isSealed = 0;\n        this.formChild.remark = \"\";\n        this.formChild.parentId = row.id;\n        this.$refs.crudChild.rowAdd();\n      },\n      rowSave(row, done, loading) {\n        const form = {\n          ...row,\n          dictKey: -1,\n        };\n        add(form).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoadChild(this.pageChild);\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleRowClick(row) {\n        this.query = {};\n        this.parentId = row.id;\n        this.dictValue = row.dictValue;\n\n        const code = this.findObject(this.optionChild.column, \"code\");\n        code.value = row.code;\n        const parentId = this.findObject(this.optionChild.column, \"parentId\");\n        parentId.value = row.id;\n\n        this.box = true;\n        this.onLoadChild(this.pageChild);\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoadParent(this.pageParent);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.pageParent.currentPage = 1;\n        this.onLoadParent(this.pageParent, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formParent.id).then(res => {\n            this.formParent = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.pageParent.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.pageParent.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoadParent(this.pageParent, this.query);\n      },\n      rowSaveChild(row, done, loading) {\n        add(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdateChild(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDelChild(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchResetChild() {\n        this.query = {};\n        this.onLoadChild(this.pageChild);\n      },\n      searchChangeChild(params, done) {\n        this.query = params;\n        this.pageChild.currentPage = 1;\n        this.onLoadChild(this.pageChild, params);\n        done();\n      },\n      selectionChangeChild(list) {\n        this.selectionList = list;\n      },\n      selectionClearChild() {\n        this.selectionList = [];\n        this.$refs.crudChild.toggleSelection();\n      },\n      handleDeleteChild() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crudChild.toggleSelection();\n          });\n      },\n      beforeOpenChild(done, type) {\n        if ([\"add\", \"edit\"].includes(type)) {\n          this.initData();\n        }\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formChild.id).then(res => {\n            this.formChild = res.data.data;\n          });\n        }\n        done();\n      },\n      beforeCloseChild(done) {\n        this.$refs.crudChild.value.parentId = this.parentId;\n        this.$refs.crudChild.option.column.filter(item => {\n          if (item.prop === \"parentId\") {\n            item.value = this.parentId;\n          }\n        });\n        done();\n      },\n      currentChangeChild(currentPage) {\n        this.pageChild.currentPage = currentPage;\n      },\n      sizeChangeChild(pageSize) {\n        this.pageChild.pageSize = pageSize;\n      },\n      refreshChangeChild() {\n        this.onLoadChild(this.pageChild, this.query);\n      },\n      onLoadParent(page, params = {}) {\n        this.loading = true;\n        getParentList(\n          page.currentPage,\n          page.pageSize,\n          Object.assign(params, this.query)\n        ).then(res => {\n          const data = res.data.data;\n          this.pageParent.total = data.total;\n          this.dataParent = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      onLoadChild(page, params = {}) {\n        this.loadingChild = true;\n        getChildList(\n          page.currentPage,\n          page.pageSize,\n          this.parentId,\n          Object.assign(params, this.query)\n        ).then(res => {\n          this.dataChild = res.data.data;\n          this.loadingChild = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n"]}]}