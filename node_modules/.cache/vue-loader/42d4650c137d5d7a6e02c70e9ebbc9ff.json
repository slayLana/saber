{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/goodsInfo/goodsInfo.vue?vue&type=style&index=1&id=cdd02162&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/goodsInfo/goodsInfo.vue","mtime":1672808981435},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/css-loader/index.js","mtime":1666157452306},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1666157454418},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/postcss-loader/src/index.js","mtime":1666157453259},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/sass-loader/dist/cjs.js","mtime":1666157452322},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n.el-pagination {\n  margin-top: 20px;\n}\n\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  text-align: center;\n}\n.avatar {\n  display: block;\n}\n",{"version":3,"sources":["goodsInfo.vue"],"names":[],"mappings":";AAyiCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"goodsInfo.vue","sourceRoot":"src/views/goodsInfo","sourcesContent":["<template>\n  <basic-container>\n    <div class=\"avue-crud\">\n      <!-- 查询模块 -->\n      <query-form\n        :rateOptions=\"rateOptions\"\n        :option=\"option\"\n        :query=\"query\"\n        :search=\"search\"\n        @searchReset=\"searchReset\"\n        @searchChange=\"searchChange\"\n      ></query-form>\n      <el-row>\n        <div class=\"avue-crud__menu\">\n          <!-- 头部左侧按钮模块 -->\n          <div class=\"avue-crud__left\">\n            <el-button\n              :size=\"option.size\"\n              type=\"primary\"\n              icon=\"el-icon-plus\"\n              @click=\"handleAdd\"\n              >新增</el-button\n            >\n            <el-button\n              :size=\"option.size\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete\"\n              plain\n              >删除\n            </el-button>\n            <el-button\n              :size=\"option.size\"\n              type=\"primary\"\n              @click=\"handleImport\"\n              plain\n              >导入\n            </el-button>\n            <el-dropdown @command=\"clickMenu\">\n              <el-button type=\"primary\" :size=\"option.size\">\n                批量审核<i class=\"el-icon-arrow-down el-icon--right\"></i>\n              </el-button>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item :command=\"handleAudit('Y')\"\n                  >Y</el-dropdown-item\n                >\n                <el-dropdown-item :command=\"handleAudit('N')\"\n                  >N</el-dropdown-item\n                >\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n          <!-- 头部右侧按钮模块 -->\n          <div class=\"avue-crud__right\">\n            <el-button\n              :size=\"option.size\"\n              icon=\"el-icon-refresh\"\n              @click=\"searchChange\"\n              circle\n            ></el-button>\n            <el-button\n              :size=\"option.size\"\n              icon=\"el-icon-s-operation\"\n              @click=\"handleDrawer\"\n              circle\n            ></el-button>\n            <el-button\n              :size=\"option.size\"\n              icon=\"el-icon-search\"\n              @click=\"searchHide\"\n              circle\n            ></el-button>\n          </div>\n        </div>\n      </el-row>\n      <el-row :gutter=\"10\">\n        <el-col :span=\"6\"\n          ><el-input\n            @input=\"handleInput\"\n            v-model=\"exportGoodsCodes\"\n            placeholder=\"请输入导出条码\"\n          ></el-input\n        ></el-col>\n        <el-col :span=\"8\"\n          ><el-button\n            :size=\"option.size\"\n            type=\"primary\"\n            @click=\"handleExport\"\n            plain\n            >导出\n          </el-button></el-col\n        >\n      </el-row>\n      <el-row>\n        <!-- 列表模块 -->\n        <el-table\n          :row-key=\"\n            (row) => {\n              return row.id;\n            }\n          \"\n          :expand-row-keys=\"expands\"\n          ref=\"table\"\n          v-loading=\"loading\"\n          :size=\"option.size\"\n          @selection-change=\"selectionChange\"\n          :data=\"data\"\n          style=\"width: 100%\"\n          :border=\"option.border\"\n          @sort-change=\"handleSort\"\n          :row-style=\"tableRowStyle\"\n        >\n          <el-table-column\n            type=\"selection\"\n            v-if=\"option.selection\"\n            width=\"55\"\n            align=\"center\"\n            fixed\n          ></el-table-column>\n\n          <template v-for=\"(item, index) in option.column\">\n            <!-- table字段 -->\n            <el-table-column\n              v-if=\"item.hide !== true\"\n              :prop=\"item.prop\"\n              :sortable=\"item.sortable\"\n              :label=\"item.label\"\n              :fixed=\"item.fixed\"\n              :width=\"item.width\"\n              :show-overflow-tooltip=\"item.showOverflowTooltip\"\n              :key=\"index\"\n              :max-height=\"5\"\n            >\n              <template slot-scope=\"{ row }\">\n                <template v-if=\"item.prop == 'goodsImage'\">\n                  <el-upload\n                    v-model=\"row.goodsImage\"\n                    :beforeUpload=\"beforeUpload\"\n                    accept=\".jpg,.jpeg,.png,\"\n                    :http-request=\"uploadImage\"\n                    :headers=\"headers\"\n                    class=\"avatar-uploader\"\n                    :show-file-list=\"false\"\n                    action=\"\"\n                  >\n                    <img\n                      v-if=\"row.goodsImage\"\n                      :src=\"row.goodsImage\"\n                      class=\"avatar\"\n                      style=\"width: 50px; height: 50px\"\n                      @click=\"bind_Id(row.id)\"\n                    />\n                    <i\n                      v-else\n                      class=\"el-icon-plus avatar-uploader-icon\"\n                      @click=\"bind_Id(row.id)\"\n                    ></i>\n                  </el-upload>\n                </template>\n                <template v-else>\n                  <!-- <div>test</div> -->\n                  <el-tooltip placement=\"top\" :disabled=\"!item.tooltip\">\n                    <div slot=\"content\" v-if=\"item.prop == 'offerPrice'\">\n                      数量：{{ row.goodsCount }}<br />\n                      运费1：{{ row.freightFee1 }}<br />成本1：{{\n                        row.primeCost1\n                      }}<br />\n                      运费2：{{ row.freightFee2 }}<br />成本2：{{\n                        row.primeCost2\n                      }}\n                    </div>\n                    <focus-input\n                      :openEdit=\"item.edit\"\n                      v-model=\"row[item.prop]\"\n                      :placeholder=\"item.label\"\n                      :clearable=\"item.clearable\"\n                      :selectOptions=\"item.selectOptions || {}\"\n                      :commentOption=\"item.comment\"\n                      :datePickOptions=\"item.datePickOptions\"\n                      :mystyle=\"\n                        myFuction(item.comment ? item.comment.style : null, row)\n                      \"\n                      @myclick=\"\n                        myFuction(\n                          item.comment ? item.comment.onclick : null,\n                          row,\n                          arguments[0]\n                        )\n                      \"\n                      @openEdit=\"openEdit(item)\"\n                      :inputType=\"item.inputType\"\n                      @myOnBlur=\"\n                        handleOnBlur(row, item, arguments[0], arguments[1])\n                      \"\n                    >\n                    </focus-input>\n                  </el-tooltip>\n                </template>\n              </template>\n            </el-table-column>\n          </template>\n\n          <!-- 操作栏模块 -->\n          <el-table-column prop=\"menu\" label=\"操作\" :width=\"180\" align=\"center\">\n            <template slot-scope=\"{ row }\">\n              <el-button\n                :size=\"option.size\"\n                type=\"text\"\n                icon=\"el-icon-edit\"\n                @click=\"handleEdit(row)\"\n                >编辑</el-button\n              >\n              <el-button\n                :size=\"option.size\"\n                type=\"text\"\n                icon=\"el-icon-delete\"\n                @click=\"rowDel(row)\"\n                >删除</el-button\n              >\n            </template>\n          </el-table-column>\n          <!-- 展开模块 -->\n          <el-table-column type=\"expand\" v-if=\"option.expand\" width=\"1\">\n            <template>\n              <div class=\"expand\">\n                <el-row>\n                  <el-col\n                    v-for=\"item in goodsShopList\"\n                    :key=\"item\"\n                    :span=\"2\"\n                    align=\"center\"\n                  >\n                    <el-tooltip placement=\"top\" :content=\"item.shopType\">\n                      <el-button\n                        icon=\"el-icon-link\"\n                        class=\"el-button--text\"\n                        style=\"\n                          font-size: 12px;\n                          font-weight: normal;\n                          padding-bottom: 0;\n                          width: fit-content;\n                          max-width: 80%;\n                          overflow: hidden;\n                          text-overflow: ellipsis;\n                        \"\n                        @click=\"toUrl(item.shopUrl)\"\n                        >{{ item.shopType }}</el-button\n                      >\n                    </el-tooltip>\n                    <el-button\n                      type=\"text\"\n                      icon=\"el-icon-remove-outline\"\n                      style=\"margin-left: 5px; color: red; padding-bottom: 0\"\n                      @click=\"delShopRul(item.id)\"\n                    ></el-button>\n                  </el-col>\n                  <el-col :span=\"3\" align=\"left\">\n                    <div class=\"el-empty\" v-if=\"goodsShopList.length == 0\">\n                      <div class=\"el-empty__description\">\n                        <p>暂无商链记录</p>\n                      </div>\n                    </div>\n                  </el-col>\n                </el-row>\n                <el-form\n                  :size=\"option.size\"\n                  ref=\"goodsUrlForm\"\n                  :model=\"goodsUrlForm\"\n                  label-width=\"80px\"\n                >\n                  <el-row gutter=\"10\">\n                    <el-col :span=\"4\">\n                      <el-form-item label=\"链接\" prop=\"shopUrl\">\n                        <el-input\n                          v-model=\"goodsUrlForm.shopUrl\"\n                          placeholder=\"请输入链接\"\n                        />\n                      </el-form-item>\n                    </el-col>\n                    <el-col :span=\"4\">\n                      <el-form-item label=\"备注名\" prop=\"shopType\">\n                        <el-input\n                          v-model=\"goodsUrlForm.shopType\"\n                          placeholder=\"备注名\"\n                        />\n                      </el-form-item>\n                    </el-col>\n                    <el-col :span=\"8\">\n                      <el-button type=\"primary\" size=\"small\" @click=\"addShopRul\"\n                        >添加</el-button\n                      >\n                    </el-col>\n                  </el-row>\n                </el-form>\n              </div>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-row>\n      <el-row>\n        <!-- 分页模块 -->\n        <el-pagination\n          align=\"right\"\n          background\n          @size-change=\"sizeChange\"\n          @current-change=\"currentChange\"\n          :current-page=\"page.currentPage\"\n          :page-sizes=\"[10, 20, 30, 40, 50, 100]\"\n          :page-size=\"page.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"page.total\"\n        >\n        </el-pagination>\n      </el-row>\n      <el-dialog\n        title=\"数据导入\"\n        append-to-body\n        :visible.sync=\"excelBox\"\n        width=\"555px\"\n      >\n        <avue-form\n          :option=\"excelOption\"\n          v-model=\"excelForm\"\n          :upload-after=\"uploadAfter\"\n        >\n          <template slot=\"excelTemplate\">\n            <el-button type=\"primary\" @click=\"handleTemplate\">\n              点击下载<i class=\"el-icon-download el-icon--right\"></i>\n            </el-button>\n          </template>\n        </avue-form>\n      </el-dialog>\n      <!-- 表单模块 -->\n      <add-form\n        :box.sync=\"box\"\n        :form=\"form\"\n        :title=\"title\"\n        :option=\"option\"\n        :rateOptions=\"rateOptions\"\n        @submitSuccess=\"submitSuccess\"\n        @closeBox=\"closeBox\"\n      ></add-form>\n\n      <!-- 算价模块 -->\n      <price-form\n        :title=\"title\"\n        :priceBox.sync=\"priceBox\"\n        :priceForm=\"priceForm\"\n        :option=\"option\"\n        :request=\"request\"\n        @submitSuccess=\"submitSuccess\"\n        @closeBox=\"closeBox\"\n      ></price-form>\n\n      <table-drawer\n        :visible.sync=\"visibleDrawer\"\n        :option=\"option\"\n      ></table-drawer>\n    </div>\n  </basic-container>\n</template>\n\n<script>\nimport { getList, getDetail, update, remove } from \"@/api/goodsInfo/goodsInfo\";\n// import request from \"@/router/axios\";\nimport option from \"@/const/goodsInfo/goodsInfo\";\nimport priceForm from \"./priceForm.vue\";\nimport addForm from \"./addForm.vue\";\nimport queryForm from \"./queryForm.vue\";\nimport focusInput from \"@/components/focus-input/main.vue\";\nimport tableDrawer from \"@/components/table-drawer/main.vue\";\nimport request from \"@/router/axios\";\nimport { mapGetters } from \"vuex\";\nimport store from \"../../store\";\nimport { exportBlob } from \"@/api/common\";\nimport { downloadXls, timeFormate } from \"@/util/util\";\nimport { getToken } from \"@/util/auth\";\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\n\nexport default {\n  components: {\n    \"focus-input\": focusInput,\n    \"table-drawer\": tableDrawer,\n    \"price-form\": priceForm,\n    \"add-form\": addForm,\n    \"query-form\": queryForm,\n  },\n  data() {\n    return {\n      expands: [], //展开显示商链的列\n      goodsShopList: [], //商链列表\n      goodsUrlForm: {}, //商链表单\n      visibleDrawer: false, //表格列显引模块控制\n      request: {}, //算价模块结果\n      tmp: null, //临时settimeout的tmp，用于控制单双击不冲突。\n      bindId: \"\",\n      exportGoodsCodes: \"\", //导出条码\n      cityList: [],\n      excelBox: false, //控制导入模块\n      rateOptions: null, //商品进度的配置\n      excelForm: {},\n      excelOption: {\n        submitBtn: false,\n        emptyBtn: false,\n        column: [\n          {\n            label: \"模板上传\",\n            prop: \"excelFile\",\n            type: \"upload\",\n            drag: true,\n            loadText: \"模板上传中，请稍等\",\n            span: 24,\n            propsHttp: {\n              res: \"data\",\n            },\n            tip: \"请上传 .xls,.xlsx 标准格式文件\",\n            action: \"/api/blade-goodsInfo/goodsInfo/import-goodsInfo\",\n          },\n          {\n            label: \"数据覆盖\",\n            prop: \"isCovered\",\n            type: \"switch\",\n            align: \"center\",\n            width: 80,\n            dicData: [\n              {\n                label: \"否\",\n                value: 0,\n              },\n              {\n                label: \"是\",\n                value: 1,\n              },\n            ],\n            value: 0,\n            slot: true,\n            rules: [\n              {\n                required: true,\n                message: \"请选择是否覆盖\",\n                trigger: \"blur\",\n              },\n            ],\n          },\n          {\n            label: \"模板下载\",\n            prop: \"excelTemplate\",\n            formslot: true,\n            span: 24,\n          },\n        ],\n      },\n      // 弹框标题\n      title: \"\",\n      // 是否展示弹框\n      box: false,\n      priceBox: false,\n      // 是否显示查询\n      search: true,\n      // 加载中\n      loading: true,\n      loadingDailog: false,\n      // 是否为查看模式\n      view: false,\n      // 查询信息\n      query: {},\n      headers: {\n        \"Blade-Auth\": \"Bearer \" + store.getters.token,\n      },\n      // 分页信息\n      page: {\n        currentPage: 1,\n        pageSize: 10,\n        total: 40,\n      },\n      // 表单数据\n      form: {},\n      priceForm: {},\n      // 选择行\n      selectionList: [],\n      // 表单配置\n      option: option,\n      // 表单列表\n      data: [],\n      editCellOption: {},\n    };\n  },\n  watch: {\n    \"excelForm.isCovered\"() {\n      if (this.excelForm.isCovered !== \"\") {\n        const column = this.findObject(this.excelOption.column, \"excelFile\");\n        column.action = `/api/blade-goodsInfo/goodsInfo/import-goodsInfo?isCovered=${this.excelForm.isCovered}`;\n      }\n    },\n    \"priceForm.goodsCount\"() {\n      this.priceForm.weight =\n        (this.priceForm.goodsCount * this.priceForm.goodsWeightK) / 1000;\n    },\n  },\n  mounted() {\n    this.init();\n    this.onLoad(this.page);\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    ids() {\n      let ids = [];\n      this.selectionList.forEach((ele) => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n  },\n  methods: {\n    init() {\n      this.rateOptions = this.option.column.find(\n        (item) => item.prop == \"goodsRate\"\n      ).selectOptions;\n    },\n    bind_Id(id) {\n      this.bindId = id;\n      console.log(this.bindId);\n    },\n    myFuction(fname, param, ...args) {\n      if (fname) {\n        return this[fname](param, ...args);\n      }\n    },\n    beforeUpload(file) {\n      const isLt2M = file.size / 1024 / 1024 < 1;\n\n      if (!isLt2M) {\n        this.$message.error(\"上传文件大小不能超过 1MB\");\n        return false;\n      }\n    },\n    uploadImage(params) {\n      this.loading = true;\n      let file = params.file;\n      const form = new FormData();\n\n      const imageConversion1 = require(\"image-conversion\");\n      imageConversion1.compressAccurately(file, 100).then((res) => {\n        let resFile = new File([res], file.name);\n        form.append(\"file\", resFile);\n        request({\n          url: \"/api/blade-resource/oss/endpoint/put-file-attach\",\n          method: \"post\",\n          data: form,\n        })\n          .then(({ data }) => {\n            this.imageSuccess(data);\n          })\n          .catch(() => {\n            this.loading = false;\n            this.$message({\n              message: \"上传失败，请重试\",\n              type: \"error\",\n            });\n          });\n      });\n    },\n    openEdit(option) {\n      this.editCellOption = { ...option };\n      console.log(this.editCellOption);\n      option.width = option.width + 45;\n    },\n    handleOfferPrice(row) {\n      this.title = row.goodsName;\n      this.priceForm = {\n        goodsId: row.id,\n        profitRate: row.profitRate,\n        goodsCount: row.goodsCount || 200,\n        goodsWeightK: row.goodsWeightK,\n        buyingPrice: row.buyingPrice,\n        weight: (row.goodsCount * row.goodsWeightK) / 1000,\n      };\n      this.request = {\n        primeCost1: row.primeCost1,\n        primeCost2: row.primeCost2,\n        freightFee1: row.freightFee1,\n        freightFee2: row.freightFee2,\n      };\n      this.priceBox = true;\n    },\n    goodsRateStyle(row) {\n      const rateinfo = this.rateOptions.find(\n        (rate) => rate.value == row.goodsRate\n      );\n      if (rateinfo) {\n        return {\n          color: rateinfo.color,\n        };\n      } else return {};\n    },\n    styleButton() {\n      return { color: \"#6c6e71\" };\n    },\n    uploadAfter(res, done, loading, column) {\n      window.console.log(column);\n      this.excelBox = false;\n      this.onLoad(this.page);\n      done();\n    },\n    handleExport() {\n      if (this.exportGoodsCodes == \"\" && this.ids == \"\") {\n        this.$message({\n          type: \"error\",\n          message: \"请选择导出的数据或者输入导出条码。\",\n        });\n        return;\n      }\n      const form = {\n        exportGoodsCodes: this.exportGoodsCodes || \"99999\",\n        ids: this.ids,\n      };\n      this.$confirm(\"是否导出商品信息数据?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      }).then(() => {\n        NProgress.start();\n        request({\n          url: \"/api/blade-goodsInfo/goodsInfo/export-goodsInfo\",\n          method: \"get\",\n          params: form,\n          responseType: \"blob\",\n        }).then((res) => {\n          downloadXls(res.data, `商品信息${timeFormate(new Date())}.xlsx`);\n          NProgress.done();\n        });\n      });\n    },\n    handleSort({ prop, order }) {\n      this.$delete(this.query, \"descs\");\n      this.$delete(this.query, \"ascs\");\n      const orderS = order == \"descending\" ? \"descs\" : \"ascs\";\n      if (order) {\n        prop = prop.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n        this.query = {\n          ...this.query,\n          [orderS]: prop,\n        };\n      }\n      this.onLoad(this.page);\n    },\n    searchHide() {\n      this.search = !this.search;\n    },\n    searchChange() {\n      this.onLoad(this.page);\n    },\n    searchReset() {\n      this.query = {};\n      this.page.currentPage = 1;\n      this.onLoad(this.page);\n    },\n    handleTemplate() {\n      exportBlob(\n        `/api/blade-goodsInfo/goodsInfo/export-template?${\n          this.website.tokenHeader\n        }=${getToken()}`\n      ).then((res) => {\n        downloadXls(res.data, `商品信息模板.xlsx`);\n      });\n    },\n    handleImport() {\n      this.excelBox = true;\n    },\n    handleAdd() {\n      this.title = \"新增\";\n      this.form.id = null;\n      if (!this.form.isSave) {\n        this.form = {\n          submissionDate: new Date(),\n        };\n      }\n      this.box = true;\n    },\n    handleEdit(row) {\n      this.title = \"编辑\";\n      this.box = true;\n      getDetail(row.id).then((res) => {\n        this.form = res.data.data;\n      });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.selectionClear();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\",\n          });\n        });\n    },\n    handleAudit(auditStatus) {\n     const f = () =>{ if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据审核?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          const res = (ids, status) =>\n            request({\n              url: \"/api/blade-goodsInfo/goodsInfo/audit\",\n              method: \"post\",\n              params: { ids, status },\n            });\n          return res(this.ids, auditStatus);\n        })\n        .then(() => {\n          this.selectionClear();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\",\n          });\n        });\n     }\n     return f;\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\",\n          });\n        });\n    },\n    tableRowStyle({ rowIndex }) {\n      if (rowIndex % 2 != 0) {\n        return {\n          \"background-color\": \"#f6f6f6\",\n        };\n      }\n    },\n    handleDrawer() {\n      // debugger\n      console.log(this.visibleDrawer);\n      this.visibleDrawer = true;\n    },\n    handleOnBlur(row, item, value, isChange) {\n      let form = {\n        id: row.id,\n        [item.prop]: value,\n      };\n      if (item.prop == \"profitRate\" && value) {\n        let tmp = +(value.replace(\"%\", \"\") / 100).toFixed(2);\n        form = {\n          ...form,\n          offerPrice: (row.primeCost2 * (1 + tmp)).toFixed(1),\n        };\n      }\n      item.width = this.editCellOption.width;\n      if (isChange) {\n        this.loading = true;\n        update(form).then(() => {\n          this.onLoad(this.page);\n          this.editCellOption = {};\n          this.$message({\n            type: \"success\",\n            message: \"更新成功!\",\n          });\n        });\n      }\n    },\n\n    copySuccess() {\n      this.$message({\n        message: \"复制成功\",\n        type: \"success\",\n      });\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.table.clearSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n      this.onLoad(this.page);\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n      this.onLoad(this.page);\n    },\n    imageSuccess(res) {\n      console.log(res);\n      // this.onLoad(this.page);\n      const form = {\n        goodsImage: res.data.link,\n        id: this.bindId,\n      };\n      update(form)\n        .then(() => {\n          this.loading = false;\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\",\n          });\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    copyInfo(row, value) {\n      if (!this.tmp) {\n        this.tmp = setTimeout(() => {\n          console.log(value);\n          // 创建输入框元素\n          let oInput = document.createElement(\"input\");\n          // 将想要复制的值\n          oInput.value = value;\n          // 页面底部追加输入框\n          document.body.appendChild(oInput);\n          // 选中输入框\n          oInput.select();\n          // 执行浏览器复制命令\n          document.execCommand(\"Copy\");\n          // 弹出复制成功信息\n          this.$message.success(\"复制成功\");\n          // 复制后移除输入框\n          oInput.remove();\n          this.tmp = null;\n        }, 300);\n      } else {\n        clearTimeout(this.tmp);\n        this.tmp = null;\n      }\n    },\n    expandRow(row, value) {\n      if (!this.tmp) {\n        this.tmp = setTimeout(() => {\n          console.log(value);\n          // 创建输入框元素\n          let oInput = document.createElement(\"input\");\n          // 将想要复制的值\n          oInput.value = value;\n          // 页面底部追加输入框\n          document.body.appendChild(oInput);\n          // 选中输入框\n          oInput.select();\n          // 执行浏览器复制命令\n          document.execCommand(\"Copy\");\n          // 弹出复制成功信息\n          this.$message.success(\"复制成功\");\n          // 复制后移除输入框\n          oInput.remove();\n          this.tmp = null;\n        }, 250);\n      } else {\n        clearTimeout(this.tmp);\n        this.tmp = null;\n        this.goodsShopList = [];\n        this.goodsUrlForm = {};\n        if (this.expands.includes(row.id)) {\n          this.expands = this.expands.filter((val) => val !== row.id);\n        } else {\n          this.expands = [];\n          this.loadUrl(row.id).then((res) => {\n            this.goodsShopList = res.data.data;\n            this.expands.push(row.id);\n            this.goodsUrlForm = { goodsId: row.id };\n          });\n        }\n      }\n    },\n    addShopRul() {\n      if (!this.goodsUrlForm.shopType || !this.goodsUrlForm.shopUrl) {\n        this.$message({\n          type: \"error\",\n          message: \"url或备注名不能为空\",\n        });\n        return;\n      }\n      if (\n        !this.goodsUrlForm.shopUrl.startsWith(\"http://\") &&\n        !this.goodsUrlForm.shopUrl.startsWith(\"https://\")\n      ) {\n        this.$message({\n          type: \"error\",\n          message: \"url请已https//或http//开头\",\n        });\n        return;\n      }\n      request({\n        url: \"/api/blade-goodsShop/goodsShop/submit\",\n        method: \"post\",\n        data: this.goodsUrlForm,\n      }).then(() => {\n        // this.goodsShopList.push(this.goodsUrlForm)\n        this.loadUrl(this.goodsUrlForm.goodsId).then((res) => {\n          this.goodsShopList = res.data.data;\n          this.goodsUrlForm.shopType = \"\";\n          this.goodsUrlForm.shopUrl = \"\";\n        });\n      });\n    },\n    toUrl(url) {\n      window.open(url);\n    },\n    delShopRul(id) {\n      this.$confirm(\"是否删除商链该记录?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      }).then(() => {\n        request({\n          url: \"/api/blade-goodsShop/goodsShop/remove\",\n          method: \"post\",\n          params: {\n            ids: id,\n          },\n        }).then(() => {\n          this.loadUrl(this.goodsUrlForm.goodsId).then((res) => {\n            this.goodsShopList = res.data.data;\n          });\n        });\n      });\n    },\n    handleInput(v) {\n      // const re = /[u4E00-u9FA5]/g;\n      debugger;\n      const pattern = new RegExp(\"[\\u4E00-\\u9FA5]+\");\n      let res = v.replace(pattern, \"\").replaceAll(\" \", \",\").split(\",\");\n      res = res.filter((value, i) => value != \"\" || i != 0);\n      this.exportGoodsCodes = res.toString();\n    },\n    loadUrl(goodsId) {\n      return request({\n        url: \"/api/blade-goodsShop/goodsShop/list\",\n        method: \"get\",\n        params: { goodsId },\n      });\n    },\n    submitSuccess(value) {\n      this[value] = false;\n      this.onLoad(this.page);\n      this.$message({\n        type: \"success\",\n        message: \"操作成功!\",\n      });\n    },\n    clickMenu(f){\n      f()\n    },\n    // headerClick(column, event){\n    //   console.log(column,event)\n    //   if(column.property != 'goodsCode'){\n    //     return\n    //   }\n    //   const goodsCodes = this.data.map(i => i.goodsCode)\n    //   console.log(goodsCodes.toString())\n    //    // 创建输入框元素\n    //       let oInput = document.createElement(\"input\");\n    //       // 将想要复制的值\n    //       oInput.value = goodsCodes.toString();\n    //       // 页面底部追加输入框\n    //       document.body.appendChild(oInput);\n    //       // 选中输入框\n    //       oInput.select();\n    //       // 执行浏览器复制命令\n    //       document.execCommand(\"Copy\");\n    //       // 弹出复制成功信息\n    //       this.$message.success(\"复制成功\");\n    //       // 复制后移除输入框\n    //       oInput.remove();\n    // },\n    closeBox(value) {\n      this[value] = false;\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(\n        page.currentPage,\n        page.pageSize,\n        Object.assign(params, this.query)\n      ).then((res) => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.form-item .el-form-item__content {\n  width: 90px;\n}\n.el-table__expand-icon {\n  display: unset !important;\n}\n.avue-crud .el-table .el-form-item__label {\n  position: unset !important;\n}\n\n.el-table__cell.el-table__expanded-cell .el-empty {\n  height: 1px;\n  padding: 20px;\n  .el-empty__description {\n    margin-top: 0px;\n  }\n}\n.el-table__body-wrapper {\n  .el-table__expanded-cell {\n    z-index: 100;\n    padding: 0;\n  }\n}\n.el-table__fixed,\n.el-table__fixed-right {\n  .el-table__expanded-cell {\n    visibility: hidden;\n    padding: 0;\n  }\n}\n.expand {\n  width: 100%;\n  padding-left: 2rem;\n  /* padding: 20px; */\n  background-color: #dcdfe6 !important; //盖住fixed产生的阴影\n  font-size: 12px;\n\n  .el-form-item__label {\n    font-size: 12px !important;\n  }\n  .el-input__inner {\n    font-size: 12px !important;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.el-pagination {\n  margin-top: 20px;\n}\n\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  text-align: center;\n}\n.avatar {\n  display: block;\n}\n</style>\n"]}]}