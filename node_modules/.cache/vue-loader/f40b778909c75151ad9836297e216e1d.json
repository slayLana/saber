{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/page/index/top/top-lock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/page/index/top/top-lock.vue","mtime":1666151205526},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\nimport { validatenull } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"top-lock\",\n  data() {\n    return {\n      box: false,\n      form: {\n        passwd: \"\"\n      }\n    };\n  },\n  created() {},\n  mounted() {},\n  computed: {\n    ...mapGetters([\"lockPasswd\"])\n  },\n  props: [],\n  methods: {\n    handleSetLock() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          this.$store.commit(\"SET_LOCK_PASSWD\", this.form.passwd);\n          this.handleLock();\n        }\n      });\n    },\n    handleLock() {\n      if (validatenull(this.lockPasswd)) {\n        this.box = true;\n        return;\n      }\n      this.$store.commit(\"SET_LOCK\");\n      setTimeout(() => {\n        this.$router.push({ path: \"/lock\" });\n      }, 100);\n    }\n  },\n  components: {}\n};\n",{"version":3,"sources":["top-lock.vue"],"names":[],"mappings":";AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"top-lock.vue","sourceRoot":"src/page/index/top","sourcesContent":["<template>\n  <span>\n    <i class=\"icon-suoping\"\n       @click=\"handleLock\"></i>\n    <el-dialog title=\"设置锁屏密码\"\n               :visible.sync=\"box\"\n               width=\"30%\"\n               append-to-body>\n      <el-form :model=\"form\"\n               ref=\"form\"\n               label-width=\"80px\">\n        <el-form-item label=\"锁屏密码\"\n                      prop=\"passwd\"\n                      :rules=\"[{ required: true, message: '锁屏密码不能为空'}]\">\n          <el-input v-model=\"form.passwd\"\n                    placeholder=\"请输入锁屏密码\" />\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button type=\"primary\"\n                   @click=\"handleSetLock\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </span>\n</template>\n\n<script>\nimport { validatenull } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"top-lock\",\n  data() {\n    return {\n      box: false,\n      form: {\n        passwd: \"\"\n      }\n    };\n  },\n  created() {},\n  mounted() {},\n  computed: {\n    ...mapGetters([\"lockPasswd\"])\n  },\n  props: [],\n  methods: {\n    handleSetLock() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          this.$store.commit(\"SET_LOCK_PASSWD\", this.form.passwd);\n          this.handleLock();\n        }\n      });\n    },\n    handleLock() {\n      if (validatenull(this.lockPasswd)) {\n        this.box = true;\n        return;\n      }\n      this.$store.commit(\"SET_LOCK\");\n      setTimeout(() => {\n        this.$router.push({ path: \"/lock\" });\n      }, 100);\n    }\n  },\n  components: {}\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n"]}]}