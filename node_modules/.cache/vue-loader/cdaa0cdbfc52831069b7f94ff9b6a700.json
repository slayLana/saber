{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/authority/role.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/authority/role.vue","mtime":1666151205537},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n  import {add, getList, getRole, getRoleTreeById, grant, grantTree, remove, update} from \"@/api/system/role\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n\n  export default {\n    data() {\n      return {\n        form: {},\n        box: false,\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        menuGrantList: [],\n        dataScopeGrantList: [],\n        apiScopeGrantList: [],\n        apiGrantList: [],\n        menuTreeObj: [],\n        dataScopeTreeObj: [],\n        apiScopeTreeObj: [],\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        option: {\n          tip: false,\n          simplePage: true,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tree: true,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          dialogWidth: 900,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"角色名称\",\n              prop: \"roleName\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色名称\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantId\",\n              type: \"tree\",\n              dicUrl: \"/api/blade-system/tenant/select\",\n              addDisplay: false,\n              editDisplay: false,\n              viewDisplay: website.tenantMode,\n              span: 24,\n              props: {\n                label: \"tenantName\",\n                value: \"tenantId\"\n              },\n              hide: !website.tenantMode,\n              search: website.tenantMode,\n              rules: [{\n                required: true,\n                message: \"请输入所属租户\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"角色别名\",\n              prop: \"roleAlias\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色别名\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"上级角色\",\n              prop: \"parentId\",\n              dicData: [],\n              type: \"tree\",\n              hide: true,\n              span: 24,\n              props: {\n                label: \"title\"\n              },\n              rules: [\n                {\n                  required: false,\n                  message: \"请选择上级角色\",\n                  trigger: \"click\"\n                }\n              ]\n            },\n            {\n              label: \"角色排序\",\n              prop: \"sort\",\n              type: \"number\",\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色排序\",\n                  trigger: \"blur\"\n                }\n              ]\n            }\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.role_add, false),\n          viewBtn: this.vaildData(this.permission.role_view, false),\n          delBtn: this.vaildData(this.permission.role_delete, false),\n          editBtn: this.vaildData(this.permission.role_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n\n        });\n        return ids.join(\",\");\n      },\n      idsArray() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids;\n      }\n    },\n    methods: {\n      initData(roleId){\n        getRoleTreeById(roleId).then(res => {\n          const column = this.findObject(this.option.column, \"parentId\");\n          column.dicData = res.data.data;\n        });\n      },\n      submit() {\n        const menuList = this.$refs.treeMenu.getCheckedKeys();\n        const dataScopeList = this.$refs.treeDataScope.getCheckedKeys();\n        const apiScopeList = this.$refs.treeApiScope.getCheckedKeys();\n        grant(this.idsArray, menuList, dataScopeList, apiScopeList).then(() => {\n          this.box = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      beforeOpen(done, type) {\n        if ([\"add\", \"edit\"].includes(type)) {\n          this.initData(this.form.id);\n        }\n        done();\n      },\n      handleRole() {\n        if (this.selectionList.length !== 1) {\n          this.$message.warning(\"只能选择一条数据\");\n          return;\n        }\n        this.menuTreeObj = [];\n        this.dataScopeTreeObj = [];\n        this.apiScopeTreeObj = [];\n        grantTree()\n          .then(res => {\n            this.menuGrantList = res.data.data.menu;\n            this.dataScopeGrantList = res.data.data.dataScope;\n            this.apiScopeGrantList = res.data.data.apiScope;\n            getRole(this.ids).then(res => {\n              this.menuTreeObj = res.data.data.menu;\n              this.dataScopeTreeObj = res.data.data.dataScope;\n              this.apiScopeTreeObj = res.data.data.apiScope;\n              this.box = true;\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          this.data = res.data.data;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n",{"version":3,"sources":["role.vue"],"names":[],"mappings":";AAgFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"role.vue","sourceRoot":"src/views/authority","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   v-if=\"permission.role_delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n        <el-button size=\"small\"\n                   icon=\"el-icon-setting\"\n                   @click=\"handleRole\"\n                   v-if=\"userInfo.role_name.includes('admin')\"\n                   plain>权限设置\n        </el-button>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"角色权限配置\"\n               append-to-body\n               :visible.sync=\"box\"\n               width=\"345px\">\n      <el-tabs type=\"border-card\">\n        <el-tab-pane label=\"菜单权限\">\n          <el-tree :data=\"menuGrantList\"\n                   show-checkbox\n                   node-key=\"id\"\n                   ref=\"treeMenu\"\n                   :default-checked-keys=\"menuTreeObj\"\n                   :props=\"props\">\n          </el-tree>\n        </el-tab-pane>\n        <el-tab-pane label=\"数据权限\">\n          <el-tree :data=\"dataScopeGrantList\"\n                   show-checkbox\n                   node-key=\"id\"\n                   ref=\"treeDataScope\"\n                   :default-checked-keys=\"dataScopeTreeObj\"\n                   :props=\"props\">\n          </el-tree>\n        </el-tab-pane>\n        <el-tab-pane label=\"接口权限\">\n          <el-tree :data=\"apiScopeGrantList\"\n                   show-checkbox\n                   node-key=\"id\"\n                   ref=\"treeApiScope\"\n                   :default-checked-keys=\"apiScopeTreeObj\"\n                   :props=\"props\">\n          </el-tree>\n        </el-tab-pane>\n      </el-tabs>\n\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"box = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"submit\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {add, getList, getRole, getRoleTreeById, grant, grantTree, remove, update} from \"@/api/system/role\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n\n  export default {\n    data() {\n      return {\n        form: {},\n        box: false,\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        menuGrantList: [],\n        dataScopeGrantList: [],\n        apiScopeGrantList: [],\n        apiGrantList: [],\n        menuTreeObj: [],\n        dataScopeTreeObj: [],\n        apiScopeTreeObj: [],\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        option: {\n          tip: false,\n          simplePage: true,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tree: true,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          dialogWidth: 900,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"角色名称\",\n              prop: \"roleName\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色名称\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantId\",\n              type: \"tree\",\n              dicUrl: \"/api/blade-system/tenant/select\",\n              addDisplay: false,\n              editDisplay: false,\n              viewDisplay: website.tenantMode,\n              span: 24,\n              props: {\n                label: \"tenantName\",\n                value: \"tenantId\"\n              },\n              hide: !website.tenantMode,\n              search: website.tenantMode,\n              rules: [{\n                required: true,\n                message: \"请输入所属租户\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"角色别名\",\n              prop: \"roleAlias\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色别名\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"上级角色\",\n              prop: \"parentId\",\n              dicData: [],\n              type: \"tree\",\n              hide: true,\n              span: 24,\n              props: {\n                label: \"title\"\n              },\n              rules: [\n                {\n                  required: false,\n                  message: \"请选择上级角色\",\n                  trigger: \"click\"\n                }\n              ]\n            },\n            {\n              label: \"角色排序\",\n              prop: \"sort\",\n              type: \"number\",\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色排序\",\n                  trigger: \"blur\"\n                }\n              ]\n            }\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.role_add, false),\n          viewBtn: this.vaildData(this.permission.role_view, false),\n          delBtn: this.vaildData(this.permission.role_delete, false),\n          editBtn: this.vaildData(this.permission.role_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n\n        });\n        return ids.join(\",\");\n      },\n      idsArray() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids;\n      }\n    },\n    methods: {\n      initData(roleId){\n        getRoleTreeById(roleId).then(res => {\n          const column = this.findObject(this.option.column, \"parentId\");\n          column.dicData = res.data.data;\n        });\n      },\n      submit() {\n        const menuList = this.$refs.treeMenu.getCheckedKeys();\n        const dataScopeList = this.$refs.treeDataScope.getCheckedKeys();\n        const apiScopeList = this.$refs.treeApiScope.getCheckedKeys();\n        grant(this.idsArray, menuList, dataScopeList, apiScopeList).then(() => {\n          this.box = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      beforeOpen(done, type) {\n        if ([\"add\", \"edit\"].includes(type)) {\n          this.initData(this.form.id);\n        }\n        done();\n      },\n      handleRole() {\n        if (this.selectionList.length !== 1) {\n          this.$message.warning(\"只能选择一条数据\");\n          return;\n        }\n        this.menuTreeObj = [];\n        this.dataScopeTreeObj = [];\n        this.apiScopeTreeObj = [];\n        grantTree()\n          .then(res => {\n            this.menuGrantList = res.data.data.menu;\n            this.dataScopeGrantList = res.data.data.dataScope;\n            this.apiScopeGrantList = res.data.data.apiScope;\n            getRole(this.ids).then(res => {\n              this.menuTreeObj = res.data.data.menu;\n              this.dataScopeTreeObj = res.data.data.dataScope;\n              this.apiScopeTreeObj = res.data.data.apiScope;\n              this.box = true;\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          this.data = res.data.data;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n"]}]}