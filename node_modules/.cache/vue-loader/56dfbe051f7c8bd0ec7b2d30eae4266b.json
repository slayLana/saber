{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/flow/follow.vue?vue&type=style&index=0&id=3cad4288&lang=css&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/flow/follow.vue","mtime":1666151205538},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/css-loader/index.js","mtime":1666157452306},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1666157454418},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/postcss-loader/src/index.js","mtime":1666157453259},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n.none-border {\n  border: 0;\n  background-color: transparent !important;\n}\n",{"version":3,"sources":["follow.vue"],"names":[],"mappings":";AA4MA;AACA;AACA;AACA","file":"follow.vue","sourceRoot":"src/views/flow","sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :page.sync=\"page\"\n               :permission=\"permissionList\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot-scope=\"{row}\"\n                slot=\"suspensionState\">\n        <el-tag>{{row.suspensionState===1?'激活':'挂起'}}</el-tag>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"流程删除\"\n               append-to-body\n               :visible.sync=\"followBox\"\n               width=\"20%\">\n      <el-form :model=\"form\"\n               ref=\"form\"\n               label-width=\"80px\">\n        <el-form-item label=\"删除理由\">\n          <el-input v-model=\"deleteReason\"\n                    placeholder=\"请输入删除理由\" />\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"followBox = false\">关 闭</el-button>\n        <el-button type=\"primary\"\n                   @click=\"handleDelete\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {mapGetters} from \"vuex\";\n  import {followList, deleteProcessInstance} from \"@/api/flow/flow\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        selectionId: '',\n        processInstanceId: '',\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        followBox: false,\n        deleteReason: '',\n        option: {\n          height: 'auto',\n          calcHeight: 30,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          selection: true,\n          editBtn: false,\n          addBtn: false,\n          viewBtn: false,\n          dialogWidth: 900,\n          menuWidth: 100,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"执行id\",\n              prop: \"executionId\",\n              search: true,\n              width: 320,\n            },\n            {\n              label: \"流程key\",\n              prop: \"processDefinitionKey\",\n              search: true,\n            },\n            {\n              label: \"实例id\",\n              prop: \"processInstanceId\",\n              search: true,\n              width: 320,\n            },\n            {\n              label: \"状态\",\n              prop: \"suspensionState\",\n              slot: true,\n              width: 80,\n            },\n            {\n              label: \"发起人\",\n              prop: \"startUser\",\n              width: 100,\n            },\n            {\n              label: '开始时间',\n              prop: 'startTime',\n              width: 165,\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          delBtn: this.vaildData(this.permission.flow_follow_delete, false),\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      rowDel(row) {\n        this.followBox = true;\n        this.selectionId = row.id;\n        this.processInstanceId = row.processInstanceId;\n      },\n      handleDelete() {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return deleteProcessInstance({deleteReason: this.deleteReason, processInstanceId: this.processInstanceId});\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.followBox = false;\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        followList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n  .none-border {\n    border: 0;\n    background-color: transparent !important;\n  }\n</style>\n"]}]}