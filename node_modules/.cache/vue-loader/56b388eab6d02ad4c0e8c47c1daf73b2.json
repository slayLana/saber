{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/components/focus-input/main.vue?vue&type=style&index=0&id=776ae0fa&lang=scss&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/components/focus-input/main.vue","mtime":1668865005782},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/css-loader/index.js","mtime":1666157452306},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1666157454418},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/postcss-loader/src/index.js","mtime":1666157453259},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/sass-loader/dist/cjs.js","mtime":1666157452322},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n.basic-block {\n  opacity: 0;\n\n  box-sizing: border-box;\n  color: #fff;\n  animation: mymove 1s;\n  animation-fill-mode: forwards;\n  .box {\n    position: relative;\n    box-sizing: border-box;\n    padding: 15px;\n    width: 100%;\n    height: 100%;\n    transition: all 1s;\n    background-size: cover;\n    &:hover {\n      transform: rotateY(360deg);\n    }\n  }\n\n  a {\n    color: #fff;\n  }\n  span {\n    display: block;\n    font-size: 16px;\n  }\n  p {\n    width: 80%;\n    font-size: 10px;\n    color: #eee;\n    line-height: 22px;\n  }\n  i {\n    position: absolute;\n    bottom: 15px;\n    right: 15px;\n    font-size: 50px !important ;\n  }\n  @keyframes mymove {\n    from {\n      opacity: 0;\n      transform: scale(0);\n    }\n    to {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n}\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";AA8OA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.vue","sourceRoot":"src/components/focus-input","sourcesContent":["\n<template>\n  <div class=\"focus-input\" @dblclick=\"onDivClick\">\n    <!-- 默认状态 -->\n    <template v-if=\"getStatus()\"> \n      <!-- <span v-if=\"value\" class=\"focus-input__placeholder\">\n        {{ value }}\n      </span> -->\n      <component :is=\"commentOption.name\" v-if=\"value || value === 0\" class=\"focus-input__placeholder\"\n      :style=\"mystyle\"\n      @click=\"handleClick\"\n      :size=\"commentOption.size\"\n      :type=\"commentOption.type\" :icon=\"commentOption.icon\">\n      {{value}}\n      </component>\n      <span v-else class=\"focus-input__placeholder \" style=\"color:#ccc\">\n        {{placeholder}}\n      </span>\n      \n      <!-- <template v-else>\n        <slot name=\"default\" v-bind=\"currentOption\">\n          <span v-html=\"computedModelValue\"></span>\n        </slot>\n      </template> -->\n    </template>\n    <component\n      :is=\"inputType\"\n      v-if=\"openEdit && !getStatus()\"\n      ref=\"inputRef\"\n      v-bind=\"$attrs\"\n      :format=\"datePickOptions.format\"\n      :value-format=\"datePickOptions.format\"\n      :disabled=\"disabled\"\n      v-model=\"value\"\n      :clearable=\"clearable\"\n      :placeholder=\"placeholder\"\n      @blur=\"onBlur\"\n      @focus=\"onFocus\"\n      @keyup.enter.native=\"onEnter\"\n      @change=\"dateChange\"\n      @clear=\"clearInput\"\n    >\n    <template v-if=\"inputType == 'el-select'\">\n    <el-option\n                    @click.native=\"clickOption\"\n                    v-for=\"item in selectOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                  </template>\n    </component>\n  </div>\n</template>\n<script>\nimport {  nextTick } from \"vue\";\nexport default {\n  name: \"focusInput\",\n  props: {\n    commentOption:{\n      type:[Object],\n      default:() => ({\n        name:'span',\n        size:'small',\n        icon:null,\n        type:'text',\n        openCopy:false,\n        copySuccess:() => {}\n      })\n    },\n    mystyle:{\n      type:[Object],\n      default:()=>({\n        \n      })\n    },\n    clearable:{\n      type:Boolean,\n      default:true\n    },\n    openEdit:{\n      type: Boolean,\n      default: false,\n    },\n    //分割线\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    value:{\n      type: [String, Number],\n      default: null,\n    },\n    modelValue: {\n      type: [String, Number],\n      default: null,\n    },\n    selectOptions: {\n      type:[Object],\n      default:()=>({\n        \n      })\n    },\n    inputType: {\n      type: String,\n      default: \"el-input\",\n    },\n    placeholder: {\n      type: String,\n      default: null,\n    },\n    scoreInput: {\n      type: Boolean,\n      default: false,\n    },\n    datePickOptions:{\n      type:[Object],\n      default:()=>({})\n    },\n    isTextarea: {\n      type: String,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      focusing:false,\n      optionShow:false,\n      format:\"yyyy-MM-dd\",\n      oldValue:'',\n      tmpTimeout:null,\n    };\n  },\n  mounted(){\n  },\n  computed: {\n    isInput() {\n      return this.inputType == \"el-input\";\n    },\n    isDataPick(){\n      return this.inputType == \"el-date-picker\";\n    },\n    isSelect(){\n      return this.inputType == \"el-select\";\n    },\n    computedModelValue() {\n      if (this.isInput) {\n        return this.modelValue;\n      }\n      return null;\n    },\n  },\n  methods: {\n    onDivClick(event) {\n      if (!this.openEdit) {\n        return;\n      }\n      if (this.focusing) {\n        return;\n      }\n      this.focusing = true;\n      this.oldValue = this.value\n      // if (this.isInput || this.isSelect) {\n        nextTick(() => {\n          this.$refs.inputRef.focus();\n          this.$refs.inputRef.handleFocus &&\n          this.$refs.inputRef.handleFocus(event);\n          this.$emit('openEdit')\n        });\n      // }\n    },\n    onFocus(){\n      \n      \n    },\n    onBlur() {\n      // debugger\n      console.log(22222,this.oldValue,this.value)\n        this.tmpTimeout = setTimeout(()=>{\n        if(this.isInput || this.isSelect  || this.isDataPick){\n        if(this.oldValue != this.value){\n          this.$emit('myOnBlur',this.value,true) \n        }\n        else{\n          this.$emit('myOnBlur',this.value,false)\n        }\n          this.focusing = false;\n          this.tmpTimeout = null\n          return\n        }\n      },300)\n    },\n    clearInput(){\n      clearTimeout(this.tmpTimeout)\n      this.$emit('clear')\n      // this.$refs.inputRef.blur()\n      this.$refs.inputRef.focus()\n      // this.tmpTimeout = null;\n    },\n    onEnter(){\n      this.$refs.inputRef.blur();\n    },\n    getStatus() {\n      // return this.open;\n      if (this.scoreInput) {\n        return this.disabled;\n      } else {\n        return !this.focusing;\n      }\n    },\n    clickOption(bol){\n      console.log(\"111\",bol)\n      clearTimeout(this.tmpTimeout)\n      //bug，这里要重新失去焦点再获取，仅获取焦点的话，会导致之后blur事件不能正常触发\n      this.$refs.inputRef.blur()\n     this.$refs.inputRef.focus() \n      // @visible-change=\"clickOption\"\n      \n    },\n    dateChange(v){\n      console.log(v)\n    },\n\n    handleClick(){\n      this.$emit('myclick',this.value)\n    },\n    copySuccess(){\n      this.$message({\n        message: \"复制成功\",\n        type: \"success\",\n      })\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.basic-block {\n  opacity: 0;\n\n  box-sizing: border-box;\n  color: #fff;\n  animation: mymove 1s;\n  animation-fill-mode: forwards;\n  .box {\n    position: relative;\n    box-sizing: border-box;\n    padding: 15px;\n    width: 100%;\n    height: 100%;\n    transition: all 1s;\n    background-size: cover;\n    &:hover {\n      transform: rotateY(360deg);\n    }\n  }\n\n  a {\n    color: #fff;\n  }\n  span {\n    display: block;\n    font-size: 16px;\n  }\n  p {\n    width: 80%;\n    font-size: 10px;\n    color: #eee;\n    line-height: 22px;\n  }\n  i {\n    position: absolute;\n    bottom: 15px;\n    right: 15px;\n    font-size: 50px !important ;\n  }\n  @keyframes mymove {\n    from {\n      opacity: 0;\n      transform: scale(0);\n    }\n    to {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n}\n</style>\n"]}]}