{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/components/flow-design/main.vue?vue&type=style&index=0&id=3e8e204a&lang=scss&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/components/flow-design/main.vue","mtime":1666151205518},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/css-loader/index.js","mtime":1666157452306},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1666157454418},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/postcss-loader/src/index.js","mtime":1666157453259},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/sass-loader/dist/cjs.js","mtime":1666157452322},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\n.flow-design-dialog {\n  display: flex;\n  flex-direction: column;\n  margin: 0 !important;\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -40%);\n  max-height: calc(100% - 30px);\n  max-width: calc(100% - 30px);\n\n  .el-dialog__body {\n    flex: 1;\n    overflow: auto;\n  }\n}\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"main.vue","sourceRoot":"src/components/flow-design","sourcesContent":["<template>\n  <div>\n    <el-dialog v-if=\"isDialog\"\n               :visible.sync=\"visible\"\n               append-to-body\n               destroy-on-close\n               title=\"流程图展示\"\n               width=\"70%\"\n               custom-class=\"flow-design-dialog\">\n      <wf-design-base ref=\"bpmn\"\n                      style=\"height: 60vh;\"\n                      :options=\"option\"></wf-design-base>\n    </el-dialog>\n    <div v-else>\n      <wf-design-base v-if=\"visible\"\n                      ref=\"bpmn\"\n                      style=\"height: 60vh;\"\n                      :options=\"option\"></wf-design-base>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {modelView} from '@/api/flow/flow'\n\nexport default {\n  name: 'flowDesign',\n  props: {\n    isDialog: {\n      type: Boolean,\n      default: false\n    },\n    isDisplay: {\n      type: Boolean,\n      default: false\n    },\n    processInstanceId: String,\n    processDefinitionId: String,\n  },\n  data() {\n    return {\n      visible: false,\n      option: {\n        mode: 'view'\n      }\n    }\n  },\n  watch: {\n    isDisplay: {\n      handler(val) {\n        this.visible = val\n      },\n      immediate: true\n    },\n    visible: {\n      handler(val) {\n        this.$emit('update:is-display', val)\n      }\n    },\n    processInstanceId: {\n      handler(val) {\n        if (!val) return\n        this.getDetail({processInstanceId: this.processInstanceId})\n      },\n      immediate: true\n    },\n    processDefinitionId: {\n      handler(val) {\n        if (!val) return\n        this.getDetail({processDefinitionId: this.processDefinitionId})\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    getDetail(params) {\n      modelView(params).then(res => {\n        const data = res.data.data\n        const {xml, flow} = data\n        this.$set(this.option, 'xml', xml)\n        if (flow) {\n          const flows = []\n          flow.forEach(f => {\n            let {endTime} = f\n\n            const ff = {\n              id: f.historyActivityId,\n              class: (!endTime && f.historyActivityType !== 'candidate') ? 'nodePrimary' : ''\n            }\n\n            if (f.historyActivityType === 'sequenceFlow') ff.class = 'lineWarn'\n            else if (!ff.class && f.historyActivityType !== 'candidate') ff.class = 'nodeSuccess'\n\n            const index = flows.findIndex(fl => fl.id === f.historyActivityId)\n            if (index !== -1) flows.splice(index, 1, ff)\n            else flows.push(ff)\n          })\n          this.$set(this.option, 'flows', flows)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.flow-design-dialog {\n  display: flex;\n  flex-direction: column;\n  margin: 0 !important;\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -40%);\n  max-height: calc(100% - 30px);\n  max-width: calc(100% - 30px);\n\n  .el-dialog__body {\n    flex: 1;\n    overflow: auto;\n  }\n}\n</style>\n"]}]}