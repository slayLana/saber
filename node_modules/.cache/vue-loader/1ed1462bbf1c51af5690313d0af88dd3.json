{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/views/system/tenantpackage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/views/system/tenantpackage.vue","mtime":1666151205542},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["\nimport {getList, getDetail, add, update, remove} from \"@/api/system/tenantpackage\";\nimport {mapGetters} from \"vuex\";\nimport {getMenuTree} from \"@/api/system/menu\";\n\nexport default {\n  name: \"tenantPackage\",\n  data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogClickModal: false,\n        dialogWidth: 600,\n        column: [\n          {\n            label: \"产品包名\",\n            prop: \"packageName\",\n            search: true,\n            span: 24,\n            rules: [{\n              required: true,\n              message: \"请输入产品包名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"菜单列表\",\n            prop: \"menuId\",\n            span: 24,\n            type: \"tree\",\n            dicData: [],\n            hide: true,\n            multiple: true,\n            props: {\n              label: \"title\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择菜单\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"备注\",\n            prop: \"remark\",\n            span: 24\n          },\n        ]\n      },\n      data: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: true,\n        viewBtn: false,\n        delBtn: true,\n        editBtn: true\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    initData() {\n      getMenuTree().then(res => {\n        const column = this.findObject(this.option.column, \"menuId\");\n        column.dicData = res.data.data;\n      });\n    },\n    rowSave(row, done, loading) {\n      row.menuId = row.menuId.join(\",\");\n      add(row).then(() => {\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        loading();\n        window.console.log(error);\n      });\n    },\n    rowUpdate(row, index, done, loading) {\n      update(row).then(() => {\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        loading();\n        window.console.log(error);\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    beforeOpen(done, type) {\n      if ([\"add\", \"edit\"].includes(type)) {\n        this.initData();\n      }\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(res => {\n          this.form = res.data.data;\n        });\n      }\n      done();\n    },\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    }\n  }\n};\n",{"version":3,"sources":["tenantpackage.vue"],"names":[],"mappingsfile":"tenantpackage.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page.sync=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n    </avue-crud>\n</template>\n\n<script>\nimport {getList, getDetail, add, update, remove} from \"@/api/system/tenantpackage\";\nimport {mapGetters} from \"vuex\";\nimport {getMenuTree} from \"@/api/system/menu\";\n\nexport default {\n  name: \"tenantPackage\",\n  data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogClickModal: false,\n        dialogWidth: 600,\n        column: [\n          {\n            label: \"产品包名\",\n            prop: \"packageName\",\n            search: true,\n            span: 24,\n            rules: [{\n              required: true,\n              message: \"请输入产品包名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"菜单列表\",\n            prop: \"menuId\",\n            span: 24,\n            type: \"tree\",\n            dicData: [],\n            hide: true,\n            multiple: true,\n            props: {\n              label: \"title\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择菜单\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"备注\",\n            prop: \"remark\",\n            span: 24\n          },\n        ]\n      },\n      data: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: true,\n        viewBtn: false,\n        delBtn: true,\n        editBtn: true\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    initData() {\n      getMenuTree().then(res => {\n        const column = this.findObject(this.option.column, \"menuId\");\n        column.dicData = res.data.data;\n      });\n    },\n    rowSave(row, done, loading) {\n      row.menuId = row.menuId.join(\",\");\n      add(row).then(() => {\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        loading();\n        window.console.log(error);\n      });\n    },\n    rowUpdate(row, index, done, loading) {\n      update(row).then(() => {\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        loading();\n        window.console.log(error);\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    beforeOpen(done, type) {\n      if ([\"add\", \"edit\"].includes(type)) {\n        this.initData();\n      }\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(res => {\n          this.form = res.data.data;\n        });\n      }\n      done();\n    },\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}