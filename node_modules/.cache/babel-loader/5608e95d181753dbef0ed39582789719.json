{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/authority/apiscope.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/authority/apiscope.vue","mtime":1666151205537},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { add, remove, update, getLazyMenuList, getMenu } from \"@/api/system/menu\";\nimport { addApiScope, removeApiScope, updateApiScope, getListApiScope, getMenuApiScope } from \"@/api/system/scope\";\nimport { mapGetters } from \"vuex\";\nimport iconList from \"@/config/iconList\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      selectionList: [],\n      query: {},\n      loading: true,\n      parentId: 0,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      drawerVisible: false,\n      direction: 'rtl',\n      scopeLoading: false,\n      scopeMenuId: 0,\n      scopeMenuName: \"菜单\",\n      menu: true,\n      option: {\n        lazy: true,\n        tip: false,\n        simplePage: true,\n        searchShow: true,\n        searchMenuSpan: 6,\n        dialogWidth: \"60%\",\n        tree: true,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: false,\n        editBtn: false,\n        addBtn: false,\n        delBtn: false,\n        menuWidth: 150,\n        dialogClickModal: false,\n        column: [{\n          label: \"菜单名称\",\n          prop: \"name\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"路由地址\",\n          prop: \"path\",\n          rules: [{\n            required: true,\n            message: \"请输入路由地址\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"上级菜单\",\n          prop: \"parentId\",\n          type: \"tree\",\n          dicUrl: \"/api/blade-system/menu/tree\",\n          hide: true,\n          props: {\n            label: \"title\"\n          },\n          rules: [{\n            required: false,\n            message: \"请选择上级菜单\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"菜单图标\",\n          prop: \"source\",\n          type: \"icon\",\n          slot: true,\n          width: 80,\n          iconList: iconList,\n          rules: [{\n            required: true,\n            message: \"请输入菜单图标\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"菜单编号\",\n          prop: \"code\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单类型\",\n          prop: \"category\",\n          type: \"radio\",\n          dicData: [{\n            label: \"菜单\",\n            value: 1\n          }, {\n            label: \"按钮\",\n            value: 2\n          }],\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请选择菜单类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单别名\",\n          prop: \"alias\",\n          rules: [{\n            required: true,\n            message: \"请输入菜单别名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"按钮功能\",\n          prop: \"action\",\n          type: \"radio\",\n          dicData: [{\n            label: \"工具栏\",\n            value: 0\n          }, {\n            label: \"操作栏\",\n            value: 1\n          }, {\n            label: \"工具操作栏\",\n            value: 2\n          }],\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请选择按钮功能\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单排序\",\n          prop: \"sort\",\n          type: \"number\",\n          width: 80,\n          rules: [{\n            required: true,\n            message: \"请输入菜单排序\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"新窗口\",\n          prop: \"isOpen\",\n          type: \"radio\",\n          dicData: [{\n            label: \"否\",\n            value: 0\n          }, {\n            label: \"是\",\n            value: 1\n          }],\n          hide: true\n        }, {\n          label: \"菜单备注\",\n          prop: \"remark\",\n          type: \"textarea\",\n          span: 24,\n          minRows: 6,\n          hide: true\n        }]\n      },\n      data: [],\n      formScope: {},\n      selectionListScope: [],\n      pageScope: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      optionScope: {\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        menuWidth: 200,\n        dialogWidth: 900,\n        dialogClickModal: false,\n        column: [{\n          label: \"权限名称\",\n          prop: \"scopeName\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入权限名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"权限编号\",\n          prop: \"resourceCode\",\n          search: true,\n          width: 180,\n          rules: [{\n            required: true,\n            message: \"请输入权限编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"权限路径\",\n          prop: \"scopePath\",\n          width: 180,\n          rules: [{\n            required: true,\n            message: \"请输入权限编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"接口类型\",\n          type: \"select\",\n          dicUrl: \"/api/blade-system/dict/dictionary?code=api_scope_type\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          dataType: \"number\",\n          slot: true,\n          width: 100,\n          prop: \"scopeType\",\n          rules: [{\n            required: true,\n            message: \"请输入通知类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"备注\",\n          prop: \"remark\",\n          span: 24,\n          hide: true\n        }]\n      },\n      dataScope: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.menu_add, false),\n        viewBtn: this.vaildData(this.permission.menu_view, false),\n        delBtn: this.vaildData(this.permission.menu_delete, false),\n        editBtn: this.vaildData(this.permission.menu_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n    scopeIds: function scopeIds() {\n      var ids = [];\n      this.selectionListScope.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    // 菜单管理模块\n    rowSave: function rowSave(row, done, loading) {\n      var _this = this;\n\n      add(row).then(function () {\n        _this.onLoad(_this.page);\n\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this2 = this;\n\n      update(row).then(function () {\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this3 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.parentId = 0;\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.parentId = '';\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this4 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this4.ids);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this4.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this5 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getMenu(this.form.id).then(function (res) {\n          _this5.form = res.data.data;\n        });\n      }\n\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this6 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getLazyMenuList(this.parentId, Object.assign(params, this.query)).then(function (res) {\n        _this6.data = res.data.data;\n        _this6.loading = false;\n\n        _this6.selectionClear();\n      });\n    },\n    treeLoad: function treeLoad(tree, treeNode, resolve) {\n      var parentId = tree.id;\n      getLazyMenuList(parentId).then(function (res) {\n        resolve(res.data.data);\n      });\n    },\n    // 数据权限模块\n    handleDataScope: function handleDataScope(row) {\n      this.drawerVisible = true;\n      this.scopeMenuId = row.id;\n      this.scopeMenuName = row.name;\n      this.onLoadScope(this.pageScope);\n    },\n    handleDrawerClose: function handleDrawerClose(hide) {\n      hide();\n    },\n    rowSaveScope: function rowSaveScope(row, done, loading) {\n      var _this7 = this;\n\n      row = _objectSpread(_objectSpread({}, row), {}, {\n        menuId: this.scopeMenuId\n      });\n      addApiScope(row).then(function () {\n        _this7.onLoadScope(_this7.pageScope);\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdateScope: function rowUpdateScope(row, index, done, loading) {\n      var _this8 = this;\n\n      row = _objectSpread(_objectSpread({}, row), {}, {\n        menuId: this.scopeMenuId\n      });\n      updateApiScope(row).then(function () {\n        _this8.onLoadScope(_this8.pageScope);\n\n        _this8.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDelScope: function rowDelScope(row) {\n      var _this9 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return removeApiScope(row.id);\n      }).then(function () {\n        _this9.onLoadScope(_this9.pageScope);\n\n        _this9.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDeleteScope: function handleDeleteScope() {\n      var _this10 = this;\n\n      if (this.selectionListScope.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return removeApiScope(_this10.scopeIds);\n      }).then(function () {\n        _this10.onLoadScope(_this10.pageScope);\n\n        _this10.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this10.$refs.crudScope.toggleSelection();\n      });\n    },\n    beforeOpenScope: function beforeOpenScope(done, type) {\n      var _this11 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getMenuApiScope(this.formScope.id).then(function (res) {\n          _this11.formScope = res.data.data;\n        });\n      }\n\n      done();\n    },\n    searchResetScope: function searchResetScope() {\n      this.onLoadScope(this.pageScope);\n    },\n    searchChangeScope: function searchChangeScope(params, done) {\n      this.onLoadScope(this.pageScope, params);\n      done();\n    },\n    selectionChangeScope: function selectionChangeScope(list) {\n      this.selectionListScope = list;\n    },\n    currentChangeScope: function currentChangeScope(currentPage) {\n      this.pageScope.currentPage = currentPage;\n    },\n    sizeChangeScope: function sizeChangeScope(pageSize) {\n      this.pageScope.pageSize = pageSize;\n    },\n    onLoadScope: function onLoadScope(page) {\n      var _this12 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.scopeLoading = true;\n\n      var values = _objectSpread(_objectSpread({}, params), {}, {\n        menuId: this.scopeMenuId\n      });\n\n      getListApiScope(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this12.pageScope.total = data.total;\n        _this12.dataScope = data.records;\n        _this12.selectionListScope = [];\n        _this12.scopeLoading = false;\n      });\n    }\n  }\n};",{"version":3,"mappings":"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","names":["add","remove","update","getLazyMenuList","getMenu","addApiScope","removeApiScope","updateApiScope","getListApiScope","getMenuApiScope","data","form","selectionList","query","loading","parentId","page","pageSize","currentPage","total","drawerVisible","direction","scopeLoading","scopeMenuId","scopeMenuName","menu","option","lazy","tip","simplePage","searchShow","searchMenuSpan","dialogWidth","tree","border","index","selection","viewBtn","editBtn","addBtn","delBtn","menuWidth","dialogClickModal","column","label","prop","search","rules","required","message","trigger","type","dicUrl","hide","props","slot","width","iconList","dicData","value","span","minRows","formScope","selectionListScope","pageScope","optionScope","dataType","dataScope","computed","mapGetters","permissionList","ids","scopeIds","methods","rowSave","row","done","window","rowUpdate","rowDel","confirmButtonText","cancelButtonText","then","searchReset","searchChange","params","selectionChange","list","selectionClear","handleDelete","beforeOpen","currentChange","sizeChange","refreshChange","onLoad","treeLoad","treeNode","resolve","handleDataScope","handleDrawerClose","rowSaveScope","menuId","rowUpdateScope","rowDelScope","handleDeleteScope","beforeOpenScope","searchResetScope","searchChangeScope","selectionChangeScope","currentChangeScope","sizeChangeScope","onLoadScope"],"sourceRoot":"src/views/authority","sources":["apiscope.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\"\n               @tree-load=\"treeLoad\">\n      <template slot-scope=\"{row}\" slot=\"menu\">\n        <el-button type=\"text\"\n                   icon=\"el-icon-setting\"\n                   size=\"small\"\n                   v-if=\"permission.api_scope_setting\"\n                   plain\n                   style=\"border: 0;background-color: transparent !important;\"\n                   @click.stop=\"handleDataScope(row)\">权限配置\n        </el-button>\n      </template>\n      <template slot-scope=\"{row}\" slot=\"source\">\n        <div style=\"text-align:center\">\n          <i :class=\"row.source\"/>\n        </div>\n      </template>\n    </avue-crud>\n    <el-drawer :title=\"`[${scopeMenuName}] 接口权限配置`\" :visible.sync=\"drawerVisible\" :direction=\"direction\"\n               append-to-body\n               :before-close=\"handleDrawerClose\" size=\"1000px\">\n      <basic-container>\n        <avue-crud :option=\"optionScope\"\n                   :data=\"dataScope\"\n                   :page=\"pageScope\"\n                   v-model=\"formScope\"\n                   :table-loading=\"scopeLoading\"\n                   ref=\"crudScope\"\n                   @row-del=\"rowDelScope\"\n                   @row-update=\"rowUpdateScope\"\n                   @row-save=\"rowSaveScope\"\n                   :before-open=\"beforeOpenScope\"\n                   @search-change=\"searchChangeScope\"\n                   @search-reset=\"searchResetScope\"\n                   @selection-change=\"selectionChangeScope\"\n                   @current-change=\"currentChangeScope\"\n                   @size-change=\"sizeChangeScope\"\n                   @on-load=\"onLoadScope\">\n          <template slot=\"menuLeft\">\n            <el-button type=\"danger\"\n                       size=\"small\"\n                       icon=\"el-icon-delete\"\n                       plain\n                       @click=\"handleDeleteScope\">删 除\n            </el-button>\n          </template>\n          <template slot-scope=\"{row}\"\n                    slot=\"scopeType\">\n            <el-tag>{{row.scopeTypeName}}</el-tag>\n          </template>\n        </avue-crud>\n      </basic-container>\n    </el-drawer>\n  </basic-container>\n</template>\n\n<script>\n  import {\n    add,\n    remove,\n    update,\n    getLazyMenuList,\n    getMenu\n  } from \"@/api/system/menu\";\n  import {\n    addApiScope,\n    removeApiScope,\n    updateApiScope,\n    getListApiScope,\n    getMenuApiScope\n  } from \"@/api/system/scope\";\n  import {mapGetters} from \"vuex\";\n  import iconList from \"@/config/iconList\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        selectionList: [],\n        query: {},\n        loading: true,\n        parentId: 0,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        drawerVisible: false,\n        direction: 'rtl',\n        scopeLoading: false,\n        scopeMenuId: 0,\n        scopeMenuName: \"菜单\",\n        menu: true,\n        option: {\n          lazy: true,\n          tip: false,\n          simplePage: true,\n          searchShow: true,\n          searchMenuSpan: 6,\n          dialogWidth: \"60%\",\n          tree: true,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: false,\n          editBtn: false,\n          addBtn: false,\n          delBtn: false,\n          menuWidth: 150,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"菜单名称\",\n              prop: \"name\",\n              search: true,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入菜单名称\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"路由地址\",\n              prop: \"path\",\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入路由地址\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"上级菜单\",\n              prop: \"parentId\",\n              type: \"tree\",\n              dicUrl: \"/api/blade-system/menu/tree\",\n              hide: true,\n              props: {\n                label: \"title\"\n              },\n              rules: [\n                {\n                  required: false,\n                  message: \"请选择上级菜单\",\n                  trigger: \"click\"\n                }\n              ]\n            },\n            {\n              label: \"菜单图标\",\n              prop: \"source\",\n              type: \"icon\",\n              slot: true,\n              width: 80,\n              iconList: iconList,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入菜单图标\",\n                  trigger: \"click\"\n                }\n              ]\n            },\n            {\n              label: \"菜单编号\",\n              prop: \"code\",\n              search: true,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入菜单编号\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"菜单类型\",\n              prop: \"category\",\n              type: \"radio\",\n              dicData: [\n                {\n                  label: \"菜单\",\n                  value: 1\n                },\n                {\n                  label: \"按钮\",\n                  value: 2\n                }\n              ],\n              hide: true,\n              rules: [\n                {\n                  required: true,\n                  message: \"请选择菜单类型\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"菜单别名\",\n              prop: \"alias\",\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入菜单别名\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"按钮功能\",\n              prop: \"action\",\n              type: \"radio\",\n              dicData: [\n                {\n                  label: \"工具栏\",\n                  value: 0\n                },\n                {\n                  label: \"操作栏\",\n                  value: 1\n                },\n                {\n                  label: \"工具操作栏\",\n                  value: 2\n                }\n              ],\n              hide: true,\n              rules: [\n                {\n                  required: true,\n                  message: \"请选择按钮功能\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"菜单排序\",\n              prop: \"sort\",\n              type: \"number\",\n              width: 80,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入菜单排序\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"新窗口\",\n              prop: \"isOpen\",\n              type: \"radio\",\n              dicData: [\n                {\n                  label: \"否\",\n                  value: 0\n                },\n                {\n                  label: \"是\",\n                  value: 1\n                },\n              ],\n              hide: true\n            },\n            {\n              label: \"菜单备注\",\n              prop: \"remark\",\n              type: \"textarea\",\n              span: 24,\n              minRows: 6,\n              hide: true\n            }\n          ]\n        },\n        data: [],\n        formScope: {},\n        selectionListScope: [],\n        pageScope: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        optionScope: {\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          viewBtn: true,\n          selection: true,\n          menuWidth: 200,\n          dialogWidth: 900,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"权限名称\",\n              prop: \"scopeName\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入权限名称\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"权限编号\",\n              prop: \"resourceCode\",\n              search: true,\n              width: 180,\n              rules: [{\n                required: true,\n                message: \"请输入权限编号\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"权限路径\",\n              prop: \"scopePath\",\n              width: 180,\n              rules: [{\n                required: true,\n                message: \"请输入权限编号\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"接口类型\",\n              type: \"select\",\n              dicUrl: \"/api/blade-system/dict/dictionary?code=api_scope_type\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              dataType: \"number\",\n              slot: true,\n              width: 100,\n              prop: \"scopeType\",\n              rules: [{\n                required: true,\n                message: \"请输入通知类型\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"备注\",\n              prop: \"remark\",\n              span: 24,\n              hide: true,\n            },\n          ]\n        },\n        dataScope: []\n      };\n    },\n\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.menu_add, false),\n          viewBtn: this.vaildData(this.permission.menu_view, false),\n          delBtn: this.vaildData(this.permission.menu_delete, false),\n          editBtn: this.vaildData(this.permission.menu_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n      scopeIds() {\n        let ids = [];\n        this.selectionListScope.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      // 菜单管理模块\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.parentId = 0;\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.parentId = '';\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getMenu(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getLazyMenuList(this.parentId, Object.assign(params, this.query)).then(res => {\n          this.data = res.data.data;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      treeLoad(tree, treeNode, resolve) {\n        const parentId = tree.id;\n        getLazyMenuList(parentId).then(res => {\n          resolve(res.data.data);\n        });\n      },\n      // 数据权限模块\n      handleDataScope(row) {\n        this.drawerVisible = true;\n        this.scopeMenuId = row.id;\n        this.scopeMenuName = row.name;\n        this.onLoadScope(this.pageScope)\n      },\n      handleDrawerClose(hide) {\n        hide();\n      },\n      rowSaveScope(row, done, loading) {\n        row = {\n          ...row,\n          menuId: this.scopeMenuId,\n        };\n        addApiScope(row).then(() => {\n          this.onLoadScope(this.pageScope);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdateScope(row, index, done, loading) {\n        row = {\n          ...row,\n          menuId: this.scopeMenuId,\n        };\n        updateApiScope(row).then(() => {\n          this.onLoadScope(this.pageScope);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDelScope(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return removeApiScope(row.id);\n          })\n          .then(() => {\n            this.onLoadScope(this.pageScope);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDeleteScope() {\n        if (this.selectionListScope.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return removeApiScope(this.scopeIds);\n          })\n          .then(() => {\n            this.onLoadScope(this.pageScope);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crudScope.toggleSelection();\n          });\n      },\n      beforeOpenScope(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getMenuApiScope(this.formScope.id).then(res => {\n            this.formScope = res.data.data;\n          });\n        }\n        done();\n      },\n      searchResetScope() {\n        this.onLoadScope(this.pageScope);\n      },\n      searchChangeScope(params, done) {\n        this.onLoadScope(this.pageScope, params);\n        done();\n      },\n      selectionChangeScope(list) {\n        this.selectionListScope = list;\n      },\n      currentChangeScope(currentPage) {\n        this.pageScope.currentPage = currentPage;\n      },\n      sizeChangeScope(pageSize) {\n        this.pageScope.pageSize = pageSize;\n      },\n      onLoadScope(page, params = {}) {\n        this.scopeLoading = true;\n        const values = {\n          ...params,\n          menuId: this.scopeMenuId,\n        }\n        getListApiScope(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(res => {\n          const data = res.data.data;\n          this.pageScope.total = data.total;\n          this.dataScope = data.records;\n          this.selectionListScope = [];\n          this.scopeLoading = false;\n        });\n      },\n    }\n  };\n</script>\n"]}]}