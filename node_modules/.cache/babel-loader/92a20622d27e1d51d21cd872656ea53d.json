{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/goodsInfo/goodsInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/goodsInfo/goodsInfo.vue","mtime":1672808981435},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.string.link\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { getList, getDetail, update, remove } from \"@/api/goodsInfo/goodsInfo\"; // import request from \"@/router/axios\";\n\nimport option from \"@/const/goodsInfo/goodsInfo\";\nimport priceForm from \"./priceForm.vue\";\nimport addForm from \"./addForm.vue\";\nimport queryForm from \"./queryForm.vue\";\nimport focusInput from \"@/components/focus-input/main.vue\";\nimport tableDrawer from \"@/components/table-drawer/main.vue\";\nimport request from \"@/router/axios\";\nimport { mapGetters } from \"vuex\";\nimport store from \"../../store\";\nimport { exportBlob } from \"@/api/common\";\nimport { downloadXls, timeFormate } from \"@/util/util\";\nimport { getToken } from \"@/util/auth\";\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\nexport default {\n  components: {\n    \"focus-input\": focusInput,\n    \"table-drawer\": tableDrawer,\n    \"price-form\": priceForm,\n    \"add-form\": addForm,\n    \"query-form\": queryForm\n  },\n  data: function data() {\n    return {\n      expands: [],\n      //展开显示商链的列\n      goodsShopList: [],\n      //商链列表\n      goodsUrlForm: {},\n      //商链表单\n      visibleDrawer: false,\n      //表格列显引模块控制\n      request: {},\n      //算价模块结果\n      tmp: null,\n      //临时settimeout的tmp，用于控制单双击不冲突。\n      bindId: \"\",\n      exportGoodsCodes: \"\",\n      //导出条码\n      cityList: [],\n      excelBox: false,\n      //控制导入模块\n      rateOptions: null,\n      //商品进度的配置\n      excelForm: {},\n      excelOption: {\n        submitBtn: false,\n        emptyBtn: false,\n        column: [{\n          label: \"模板上传\",\n          prop: \"excelFile\",\n          type: \"upload\",\n          drag: true,\n          loadText: \"模板上传中，请稍等\",\n          span: 24,\n          propsHttp: {\n            res: \"data\"\n          },\n          tip: \"请上传 .xls,.xlsx 标准格式文件\",\n          action: \"/api/blade-goodsInfo/goodsInfo/import-goodsInfo\"\n        }, {\n          label: \"数据覆盖\",\n          prop: \"isCovered\",\n          type: \"switch\",\n          align: \"center\",\n          width: 80,\n          dicData: [{\n            label: \"否\",\n            value: 0\n          }, {\n            label: \"是\",\n            value: 1\n          }],\n          value: 0,\n          slot: true,\n          rules: [{\n            required: true,\n            message: \"请选择是否覆盖\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"模板下载\",\n          prop: \"excelTemplate\",\n          formslot: true,\n          span: 24\n        }]\n      },\n      // 弹框标题\n      title: \"\",\n      // 是否展示弹框\n      box: false,\n      priceBox: false,\n      // 是否显示查询\n      search: true,\n      // 加载中\n      loading: true,\n      loadingDailog: false,\n      // 是否为查看模式\n      view: false,\n      // 查询信息\n      query: {},\n      headers: {\n        \"Blade-Auth\": \"Bearer \" + store.getters.token\n      },\n      // 分页信息\n      page: {\n        currentPage: 1,\n        pageSize: 10,\n        total: 40\n      },\n      // 表单数据\n      form: {},\n      priceForm: {},\n      // 选择行\n      selectionList: [],\n      // 表单配置\n      option: option,\n      // 表单列表\n      data: [],\n      editCellOption: {}\n    };\n  },\n  watch: {\n    \"excelForm.isCovered\": function excelFormIsCovered() {\n      if (this.excelForm.isCovered !== \"\") {\n        var column = this.findObject(this.excelOption.column, \"excelFile\");\n        column.action = \"/api/blade-goodsInfo/goodsInfo/import-goodsInfo?isCovered=\".concat(this.excelForm.isCovered);\n      }\n    },\n    \"priceForm.goodsCount\": function priceFormGoodsCount() {\n      this.priceForm.weight = this.priceForm.goodsCount * this.priceForm.goodsWeightK / 1000;\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.onLoad(this.page);\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    init: function init() {\n      this.rateOptions = this.option.column.find(function (item) {\n        return item.prop == \"goodsRate\";\n      }).selectOptions;\n    },\n    bind_Id: function bind_Id(id) {\n      this.bindId = id;\n      console.log(this.bindId);\n    },\n    myFuction: function myFuction(fname, param) {\n      if (fname) {\n        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n\n        return this[fname].apply(this, [param].concat(args));\n      }\n    },\n    beforeUpload: function beforeUpload(file) {\n      var isLt2M = file.size / 1024 / 1024 < 1;\n\n      if (!isLt2M) {\n        this.$message.error(\"上传文件大小不能超过 1MB\");\n        return false;\n      }\n    },\n    uploadImage: function uploadImage(params) {\n      var _this = this;\n\n      this.loading = true;\n      var file = params.file;\n      var form = new FormData();\n\n      var imageConversion1 = require(\"image-conversion\");\n\n      imageConversion1.compressAccurately(file, 100).then(function (res) {\n        var resFile = new File([res], file.name);\n        form.append(\"file\", resFile);\n        request({\n          url: \"/api/blade-resource/oss/endpoint/put-file-attach\",\n          method: \"post\",\n          data: form\n        }).then(function (_ref) {\n          var data = _ref.data;\n\n          _this.imageSuccess(data);\n        }).catch(function () {\n          _this.loading = false;\n\n          _this.$message({\n            message: \"上传失败，请重试\",\n            type: \"error\"\n          });\n        });\n      });\n    },\n    openEdit: function openEdit(option) {\n      this.editCellOption = _objectSpread({}, option);\n      console.log(this.editCellOption);\n      option.width = option.width + 45;\n    },\n    handleOfferPrice: function handleOfferPrice(row) {\n      this.title = row.goodsName;\n      this.priceForm = {\n        goodsId: row.id,\n        profitRate: row.profitRate,\n        goodsCount: row.goodsCount || 200,\n        goodsWeightK: row.goodsWeightK,\n        buyingPrice: row.buyingPrice,\n        weight: row.goodsCount * row.goodsWeightK / 1000\n      };\n      this.request = {\n        primeCost1: row.primeCost1,\n        primeCost2: row.primeCost2,\n        freightFee1: row.freightFee1,\n        freightFee2: row.freightFee2\n      };\n      this.priceBox = true;\n    },\n    goodsRateStyle: function goodsRateStyle(row) {\n      var rateinfo = this.rateOptions.find(function (rate) {\n        return rate.value == row.goodsRate;\n      });\n\n      if (rateinfo) {\n        return {\n          color: rateinfo.color\n        };\n      } else return {};\n    },\n    styleButton: function styleButton() {\n      return {\n        color: \"#6c6e71\"\n      };\n    },\n    uploadAfter: function uploadAfter(res, done, loading, column) {\n      window.console.log(column);\n      this.excelBox = false;\n      this.onLoad(this.page);\n      done();\n    },\n    handleExport: function handleExport() {\n      if (this.exportGoodsCodes == \"\" && this.ids == \"\") {\n        this.$message({\n          type: \"error\",\n          message: \"请选择导出的数据或者输入导出条码。\"\n        });\n        return;\n      }\n\n      var form = {\n        exportGoodsCodes: this.exportGoodsCodes || \"99999\",\n        ids: this.ids\n      };\n      this.$confirm(\"是否导出商品信息数据?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        NProgress.start();\n        request({\n          url: \"/api/blade-goodsInfo/goodsInfo/export-goodsInfo\",\n          method: \"get\",\n          params: form,\n          responseType: \"blob\"\n        }).then(function (res) {\n          downloadXls(res.data, \"\\u5546\\u54C1\\u4FE1\\u606F\".concat(timeFormate(new Date()), \".xlsx\"));\n          NProgress.done();\n        });\n      });\n    },\n    handleSort: function handleSort(_ref2) {\n      var prop = _ref2.prop,\n          order = _ref2.order;\n      this.$delete(this.query, \"descs\");\n      this.$delete(this.query, \"ascs\");\n      var orderS = order == \"descending\" ? \"descs\" : \"ascs\";\n\n      if (order) {\n        prop = prop.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n        this.query = _objectSpread(_objectSpread({}, this.query), {}, _defineProperty({}, orderS, prop));\n      }\n\n      this.onLoad(this.page);\n    },\n    searchHide: function searchHide() {\n      this.search = !this.search;\n    },\n    searchChange: function searchChange() {\n      this.onLoad(this.page);\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.page.currentPage = 1;\n      this.onLoad(this.page);\n    },\n    handleTemplate: function handleTemplate() {\n      exportBlob(\"/api/blade-goodsInfo/goodsInfo/export-template?\".concat(this.website.tokenHeader, \"=\").concat(getToken())).then(function (res) {\n        downloadXls(res.data, \"\\u5546\\u54C1\\u4FE1\\u606F\\u6A21\\u677F.xlsx\");\n      });\n    },\n    handleImport: function handleImport() {\n      this.excelBox = true;\n    },\n    handleAdd: function handleAdd() {\n      this.title = \"新增\";\n      this.form.id = null;\n\n      if (!this.form.isSave) {\n        this.form = {\n          submissionDate: new Date()\n        };\n      }\n\n      this.box = true;\n    },\n    handleEdit: function handleEdit(row) {\n      var _this2 = this;\n\n      this.title = \"编辑\";\n      this.box = true;\n      getDetail(row.id).then(function (res) {\n        _this2.form = res.data.data;\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this3 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this3.ids);\n      }).then(function () {\n        _this3.selectionClear();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleAudit: function handleAudit(auditStatus) {\n      var _this4 = this;\n\n      var f = function f() {\n        if (_this4.selectionList.length === 0) {\n          _this4.$message.warning(\"请选择至少一条数据\");\n\n          return;\n        }\n\n        _this4.$confirm(\"确定将选择数据审核?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          var res = function res(ids, status) {\n            return request({\n              url: \"/api/blade-goodsInfo/goodsInfo/audit\",\n              method: \"post\",\n              params: {\n                ids: ids,\n                status: status\n              }\n            });\n          };\n\n          return res(_this4.ids, auditStatus);\n        }).then(function () {\n          _this4.selectionClear();\n\n          _this4.onLoad(_this4.page);\n\n          _this4.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n      };\n\n      return f;\n    },\n    rowDel: function rowDel(row) {\n      var _this5 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    tableRowStyle: function tableRowStyle(_ref3) {\n      var rowIndex = _ref3.rowIndex;\n\n      if (rowIndex % 2 != 0) {\n        return {\n          \"background-color\": \"#f6f6f6\"\n        };\n      }\n    },\n    handleDrawer: function handleDrawer() {\n      // debugger\n      console.log(this.visibleDrawer);\n      this.visibleDrawer = true;\n    },\n    handleOnBlur: function handleOnBlur(row, item, value, isChange) {\n      var _this6 = this;\n\n      var form = _defineProperty({\n        id: row.id\n      }, item.prop, value);\n\n      if (item.prop == \"profitRate\" && value) {\n        var tmp = +(value.replace(\"%\", \"\") / 100).toFixed(2);\n        form = _objectSpread(_objectSpread({}, form), {}, {\n          offerPrice: (row.primeCost2 * (1 + tmp)).toFixed(1)\n        });\n      }\n\n      item.width = this.editCellOption.width;\n\n      if (isChange) {\n        this.loading = true;\n        update(form).then(function () {\n          _this6.onLoad(_this6.page);\n\n          _this6.editCellOption = {};\n\n          _this6.$message({\n            type: \"success\",\n            message: \"更新成功!\"\n          });\n        });\n      }\n    },\n    copySuccess: function copySuccess() {\n      this.$message({\n        message: \"复制成功\",\n        type: \"success\"\n      });\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.table.clearSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n      this.onLoad(this.page);\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n      this.onLoad(this.page);\n    },\n    imageSuccess: function imageSuccess(res) {\n      var _this7 = this;\n\n      console.log(res); // this.onLoad(this.page);\n\n      var form = {\n        goodsImage: res.data.link,\n        id: this.bindId\n      };\n      update(form).then(function () {\n        _this7.loading = false;\n\n        _this7.onLoad(_this7.page);\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }).catch(function () {\n        _this7.loading = false;\n      });\n    },\n    copyInfo: function copyInfo(row, value) {\n      var _this8 = this;\n\n      if (!this.tmp) {\n        this.tmp = setTimeout(function () {\n          console.log(value); // 创建输入框元素\n\n          var oInput = document.createElement(\"input\"); // 将想要复制的值\n\n          oInput.value = value; // 页面底部追加输入框\n\n          document.body.appendChild(oInput); // 选中输入框\n\n          oInput.select(); // 执行浏览器复制命令\n\n          document.execCommand(\"Copy\"); // 弹出复制成功信息\n\n          _this8.$message.success(\"复制成功\"); // 复制后移除输入框\n\n\n          oInput.remove();\n          _this8.tmp = null;\n        }, 300);\n      } else {\n        clearTimeout(this.tmp);\n        this.tmp = null;\n      }\n    },\n    expandRow: function expandRow(row, value) {\n      var _this9 = this;\n\n      if (!this.tmp) {\n        this.tmp = setTimeout(function () {\n          console.log(value); // 创建输入框元素\n\n          var oInput = document.createElement(\"input\"); // 将想要复制的值\n\n          oInput.value = value; // 页面底部追加输入框\n\n          document.body.appendChild(oInput); // 选中输入框\n\n          oInput.select(); // 执行浏览器复制命令\n\n          document.execCommand(\"Copy\"); // 弹出复制成功信息\n\n          _this9.$message.success(\"复制成功\"); // 复制后移除输入框\n\n\n          oInput.remove();\n          _this9.tmp = null;\n        }, 250);\n      } else {\n        clearTimeout(this.tmp);\n        this.tmp = null;\n        this.goodsShopList = [];\n        this.goodsUrlForm = {};\n\n        if (this.expands.includes(row.id)) {\n          this.expands = this.expands.filter(function (val) {\n            return val !== row.id;\n          });\n        } else {\n          this.expands = [];\n          this.loadUrl(row.id).then(function (res) {\n            _this9.goodsShopList = res.data.data;\n\n            _this9.expands.push(row.id);\n\n            _this9.goodsUrlForm = {\n              goodsId: row.id\n            };\n          });\n        }\n      }\n    },\n    addShopRul: function addShopRul() {\n      var _this10 = this;\n\n      if (!this.goodsUrlForm.shopType || !this.goodsUrlForm.shopUrl) {\n        this.$message({\n          type: \"error\",\n          message: \"url或备注名不能为空\"\n        });\n        return;\n      }\n\n      if (!this.goodsUrlForm.shopUrl.startsWith(\"http://\") && !this.goodsUrlForm.shopUrl.startsWith(\"https://\")) {\n        this.$message({\n          type: \"error\",\n          message: \"url请已https//或http//开头\"\n        });\n        return;\n      }\n\n      request({\n        url: \"/api/blade-goodsShop/goodsShop/submit\",\n        method: \"post\",\n        data: this.goodsUrlForm\n      }).then(function () {\n        // this.goodsShopList.push(this.goodsUrlForm)\n        _this10.loadUrl(_this10.goodsUrlForm.goodsId).then(function (res) {\n          _this10.goodsShopList = res.data.data;\n          _this10.goodsUrlForm.shopType = \"\";\n          _this10.goodsUrlForm.shopUrl = \"\";\n        });\n      });\n    },\n    toUrl: function toUrl(url) {\n      window.open(url);\n    },\n    delShopRul: function delShopRul(id) {\n      var _this11 = this;\n\n      this.$confirm(\"是否删除商链该记录?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        request({\n          url: \"/api/blade-goodsShop/goodsShop/remove\",\n          method: \"post\",\n          params: {\n            ids: id\n          }\n        }).then(function () {\n          _this11.loadUrl(_this11.goodsUrlForm.goodsId).then(function (res) {\n            _this11.goodsShopList = res.data.data;\n          });\n        });\n      });\n    },\n    handleInput: function handleInput(v) {\n      // const re = /[u4E00-u9FA5]/g;\n      debugger;\n      var pattern = new RegExp(\"[\\u4E00-\\u9FA5]+\");\n      var res = v.replace(pattern, \"\").replaceAll(\" \", \",\").split(\",\");\n      res = res.filter(function (value, i) {\n        return value != \"\" || i != 0;\n      });\n      this.exportGoodsCodes = res.toString();\n    },\n    loadUrl: function loadUrl(goodsId) {\n      return request({\n        url: \"/api/blade-goodsShop/goodsShop/list\",\n        method: \"get\",\n        params: {\n          goodsId: goodsId\n        }\n      });\n    },\n    submitSuccess: function submitSuccess(value) {\n      this[value] = false;\n      this.onLoad(this.page);\n      this.$message({\n        type: \"success\",\n        message: \"操作成功!\"\n      });\n    },\n    clickMenu: function clickMenu(f) {\n      f();\n    },\n    // headerClick(column, event){\n    //   console.log(column,event)\n    //   if(column.property != 'goodsCode'){\n    //     return\n    //   }\n    //   const goodsCodes = this.data.map(i => i.goodsCode)\n    //   console.log(goodsCodes.toString())\n    //    // 创建输入框元素\n    //       let oInput = document.createElement(\"input\");\n    //       // 将想要复制的值\n    //       oInput.value = goodsCodes.toString();\n    //       // 页面底部追加输入框\n    //       document.body.appendChild(oInput);\n    //       // 选中输入框\n    //       oInput.select();\n    //       // 执行浏览器复制命令\n    //       document.execCommand(\"Copy\");\n    //       // 弹出复制成功信息\n    //       this.$message.success(\"复制成功\");\n    //       // 复制后移除输入框\n    //       oInput.remove();\n    // },\n    closeBox: function closeBox(value) {\n      this[value] = false;\n    },\n    onLoad: function onLoad(page) {\n      var _this12 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this12.page.total = data.total;\n        _this12.data = data.records;\n        _this12.loading = false;\n\n        _this12.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":"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","names":["components","data","expands","goodsShopList","goodsUrlForm","visibleDrawer","request","tmp","bindId","exportGoodsCodes","cityList","excelBox","rateOptions","excelForm","excelOption","submitBtn","emptyBtn","column","label","prop","type","drag","loadText","span","propsHttp","res","tip","action","align","width","dicData","value","slot","rules","required","message","trigger","formslot","title","box","priceBox","search","loading","loadingDailog","view","query","headers","page","currentPage","pageSize","total","form","priceForm","selectionList","option","editCellOption","watch","mounted","computed","mapGetters","ids","methods","init","selectOptions","bind_Id","id","console","myFuction","fname","param","args","beforeUpload","file","uploadImage","params","imageConversion1","url","method","then","catch","openEdit","handleOfferPrice","row","goodsId","profitRate","goodsCount","goodsWeightK","buyingPrice","weight","primeCost1","primeCost2","freightFee1","freightFee2","goodsRateStyle","color","styleButton","uploadAfter","done","window","handleExport","confirmButtonText","cancelButtonText","NProgress","responseType","downloadXls","handleSort","orderS","searchHide","searchChange","searchReset","handleTemplate","exportBlob","getToken","handleImport","handleAdd","submissionDate","handleEdit","getDetail","handleDelete","handleAudit","auditStatus","status","rowDel","tableRowStyle","handleDrawer","handleOnBlur","item","isChange","offerPrice","update","copySuccess","selectionChange","list","selectionClear","currentChange","sizeChange","imageSuccess","goodsImage","copyInfo","oInput","document","clearTimeout","expandRow","addShopRul","toUrl","delShopRul","handleInput","v","loadUrl","submitSuccess","clickMenu","f","closeBox","onLoad","getList","Object"],"sourceRoot":"src/views/goodsInfo","sources":["goodsInfo.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <div class=\"avue-crud\">\n      <!-- 查询模块 -->\n      <query-form\n        :rateOptions=\"rateOptions\"\n        :option=\"option\"\n        :query=\"query\"\n        :search=\"search\"\n        @searchReset=\"searchReset\"\n        @searchChange=\"searchChange\"\n      ></query-form>\n      <el-row>\n        <div class=\"avue-crud__menu\">\n          <!-- 头部左侧按钮模块 -->\n          <div class=\"avue-crud__left\">\n            <el-button\n              :size=\"option.size\"\n              type=\"primary\"\n              icon=\"el-icon-plus\"\n              @click=\"handleAdd\"\n              >新增</el-button\n            >\n            <el-button\n              :size=\"option.size\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete\"\n              plain\n              >删除\n            </el-button>\n            <el-button\n              :size=\"option.size\"\n              type=\"primary\"\n              @click=\"handleImport\"\n              plain\n              >导入\n            </el-button>\n            <el-dropdown @command=\"clickMenu\">\n              <el-button type=\"primary\" :size=\"option.size\">\n                批量审核<i class=\"el-icon-arrow-down el-icon--right\"></i>\n              </el-button>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item :command=\"handleAudit('Y')\"\n                  >Y</el-dropdown-item\n                >\n                <el-dropdown-item :command=\"handleAudit('N')\"\n                  >N</el-dropdown-item\n                >\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n          <!-- 头部右侧按钮模块 -->\n          <div class=\"avue-crud__right\">\n            <el-button\n              :size=\"option.size\"\n              icon=\"el-icon-refresh\"\n              @click=\"searchChange\"\n              circle\n            ></el-button>\n            <el-button\n              :size=\"option.size\"\n              icon=\"el-icon-s-operation\"\n              @click=\"handleDrawer\"\n              circle\n            ></el-button>\n            <el-button\n              :size=\"option.size\"\n              icon=\"el-icon-search\"\n              @click=\"searchHide\"\n              circle\n            ></el-button>\n          </div>\n        </div>\n      </el-row>\n      <el-row :gutter=\"10\">\n        <el-col :span=\"6\"\n          ><el-input\n            @input=\"handleInput\"\n            v-model=\"exportGoodsCodes\"\n            placeholder=\"请输入导出条码\"\n          ></el-input\n        ></el-col>\n        <el-col :span=\"8\"\n          ><el-button\n            :size=\"option.size\"\n            type=\"primary\"\n            @click=\"handleExport\"\n            plain\n            >导出\n          </el-button></el-col\n        >\n      </el-row>\n      <el-row>\n        <!-- 列表模块 -->\n        <el-table\n          :row-key=\"\n            (row) => {\n              return row.id;\n            }\n          \"\n          :expand-row-keys=\"expands\"\n          ref=\"table\"\n          v-loading=\"loading\"\n          :size=\"option.size\"\n          @selection-change=\"selectionChange\"\n          :data=\"data\"\n          style=\"width: 100%\"\n          :border=\"option.border\"\n          @sort-change=\"handleSort\"\n          :row-style=\"tableRowStyle\"\n        >\n          <el-table-column\n            type=\"selection\"\n            v-if=\"option.selection\"\n            width=\"55\"\n            align=\"center\"\n            fixed\n          ></el-table-column>\n\n          <template v-for=\"(item, index) in option.column\">\n            <!-- table字段 -->\n            <el-table-column\n              v-if=\"item.hide !== true\"\n              :prop=\"item.prop\"\n              :sortable=\"item.sortable\"\n              :label=\"item.label\"\n              :fixed=\"item.fixed\"\n              :width=\"item.width\"\n              :show-overflow-tooltip=\"item.showOverflowTooltip\"\n              :key=\"index\"\n              :max-height=\"5\"\n            >\n              <template slot-scope=\"{ row }\">\n                <template v-if=\"item.prop == 'goodsImage'\">\n                  <el-upload\n                    v-model=\"row.goodsImage\"\n                    :beforeUpload=\"beforeUpload\"\n                    accept=\".jpg,.jpeg,.png,\"\n                    :http-request=\"uploadImage\"\n                    :headers=\"headers\"\n                    class=\"avatar-uploader\"\n                    :show-file-list=\"false\"\n                    action=\"\"\n                  >\n                    <img\n                      v-if=\"row.goodsImage\"\n                      :src=\"row.goodsImage\"\n                      class=\"avatar\"\n                      style=\"width: 50px; height: 50px\"\n                      @click=\"bind_Id(row.id)\"\n                    />\n                    <i\n                      v-else\n                      class=\"el-icon-plus avatar-uploader-icon\"\n                      @click=\"bind_Id(row.id)\"\n                    ></i>\n                  </el-upload>\n                </template>\n                <template v-else>\n                  <!-- <div>test</div> -->\n                  <el-tooltip placement=\"top\" :disabled=\"!item.tooltip\">\n                    <div slot=\"content\" v-if=\"item.prop == 'offerPrice'\">\n                      数量：{{ row.goodsCount }}<br />\n                      运费1：{{ row.freightFee1 }}<br />成本1：{{\n                        row.primeCost1\n                      }}<br />\n                      运费2：{{ row.freightFee2 }}<br />成本2：{{\n                        row.primeCost2\n                      }}\n                    </div>\n                    <focus-input\n                      :openEdit=\"item.edit\"\n                      v-model=\"row[item.prop]\"\n                      :placeholder=\"item.label\"\n                      :clearable=\"item.clearable\"\n                      :selectOptions=\"item.selectOptions || {}\"\n                      :commentOption=\"item.comment\"\n                      :datePickOptions=\"item.datePickOptions\"\n                      :mystyle=\"\n                        myFuction(item.comment ? item.comment.style : null, row)\n                      \"\n                      @myclick=\"\n                        myFuction(\n                          item.comment ? item.comment.onclick : null,\n                          row,\n                          arguments[0]\n                        )\n                      \"\n                      @openEdit=\"openEdit(item)\"\n                      :inputType=\"item.inputType\"\n                      @myOnBlur=\"\n                        handleOnBlur(row, item, arguments[0], arguments[1])\n                      \"\n                    >\n                    </focus-input>\n                  </el-tooltip>\n                </template>\n              </template>\n            </el-table-column>\n          </template>\n\n          <!-- 操作栏模块 -->\n          <el-table-column prop=\"menu\" label=\"操作\" :width=\"180\" align=\"center\">\n            <template slot-scope=\"{ row }\">\n              <el-button\n                :size=\"option.size\"\n                type=\"text\"\n                icon=\"el-icon-edit\"\n                @click=\"handleEdit(row)\"\n                >编辑</el-button\n              >\n              <el-button\n                :size=\"option.size\"\n                type=\"text\"\n                icon=\"el-icon-delete\"\n                @click=\"rowDel(row)\"\n                >删除</el-button\n              >\n            </template>\n          </el-table-column>\n          <!-- 展开模块 -->\n          <el-table-column type=\"expand\" v-if=\"option.expand\" width=\"1\">\n            <template>\n              <div class=\"expand\">\n                <el-row>\n                  <el-col\n                    v-for=\"item in goodsShopList\"\n                    :key=\"item\"\n                    :span=\"2\"\n                    align=\"center\"\n                  >\n                    <el-tooltip placement=\"top\" :content=\"item.shopType\">\n                      <el-button\n                        icon=\"el-icon-link\"\n                        class=\"el-button--text\"\n                        style=\"\n                          font-size: 12px;\n                          font-weight: normal;\n                          padding-bottom: 0;\n                          width: fit-content;\n                          max-width: 80%;\n                          overflow: hidden;\n                          text-overflow: ellipsis;\n                        \"\n                        @click=\"toUrl(item.shopUrl)\"\n                        >{{ item.shopType }}</el-button\n                      >\n                    </el-tooltip>\n                    <el-button\n                      type=\"text\"\n                      icon=\"el-icon-remove-outline\"\n                      style=\"margin-left: 5px; color: red; padding-bottom: 0\"\n                      @click=\"delShopRul(item.id)\"\n                    ></el-button>\n                  </el-col>\n                  <el-col :span=\"3\" align=\"left\">\n                    <div class=\"el-empty\" v-if=\"goodsShopList.length == 0\">\n                      <div class=\"el-empty__description\">\n                        <p>暂无商链记录</p>\n                      </div>\n                    </div>\n                  </el-col>\n                </el-row>\n                <el-form\n                  :size=\"option.size\"\n                  ref=\"goodsUrlForm\"\n                  :model=\"goodsUrlForm\"\n                  label-width=\"80px\"\n                >\n                  <el-row gutter=\"10\">\n                    <el-col :span=\"4\">\n                      <el-form-item label=\"链接\" prop=\"shopUrl\">\n                        <el-input\n                          v-model=\"goodsUrlForm.shopUrl\"\n                          placeholder=\"请输入链接\"\n                        />\n                      </el-form-item>\n                    </el-col>\n                    <el-col :span=\"4\">\n                      <el-form-item label=\"备注名\" prop=\"shopType\">\n                        <el-input\n                          v-model=\"goodsUrlForm.shopType\"\n                          placeholder=\"备注名\"\n                        />\n                      </el-form-item>\n                    </el-col>\n                    <el-col :span=\"8\">\n                      <el-button type=\"primary\" size=\"small\" @click=\"addShopRul\"\n                        >添加</el-button\n                      >\n                    </el-col>\n                  </el-row>\n                </el-form>\n              </div>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-row>\n      <el-row>\n        <!-- 分页模块 -->\n        <el-pagination\n          align=\"right\"\n          background\n          @size-change=\"sizeChange\"\n          @current-change=\"currentChange\"\n          :current-page=\"page.currentPage\"\n          :page-sizes=\"[10, 20, 30, 40, 50, 100]\"\n          :page-size=\"page.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"page.total\"\n        >\n        </el-pagination>\n      </el-row>\n      <el-dialog\n        title=\"数据导入\"\n        append-to-body\n        :visible.sync=\"excelBox\"\n        width=\"555px\"\n      >\n        <avue-form\n          :option=\"excelOption\"\n          v-model=\"excelForm\"\n          :upload-after=\"uploadAfter\"\n        >\n          <template slot=\"excelTemplate\">\n            <el-button type=\"primary\" @click=\"handleTemplate\">\n              点击下载<i class=\"el-icon-download el-icon--right\"></i>\n            </el-button>\n          </template>\n        </avue-form>\n      </el-dialog>\n      <!-- 表单模块 -->\n      <add-form\n        :box.sync=\"box\"\n        :form=\"form\"\n        :title=\"title\"\n        :option=\"option\"\n        :rateOptions=\"rateOptions\"\n        @submitSuccess=\"submitSuccess\"\n        @closeBox=\"closeBox\"\n      ></add-form>\n\n      <!-- 算价模块 -->\n      <price-form\n        :title=\"title\"\n        :priceBox.sync=\"priceBox\"\n        :priceForm=\"priceForm\"\n        :option=\"option\"\n        :request=\"request\"\n        @submitSuccess=\"submitSuccess\"\n        @closeBox=\"closeBox\"\n      ></price-form>\n\n      <table-drawer\n        :visible.sync=\"visibleDrawer\"\n        :option=\"option\"\n      ></table-drawer>\n    </div>\n  </basic-container>\n</template>\n\n<script>\nimport { getList, getDetail, update, remove } from \"@/api/goodsInfo/goodsInfo\";\n// import request from \"@/router/axios\";\nimport option from \"@/const/goodsInfo/goodsInfo\";\nimport priceForm from \"./priceForm.vue\";\nimport addForm from \"./addForm.vue\";\nimport queryForm from \"./queryForm.vue\";\nimport focusInput from \"@/components/focus-input/main.vue\";\nimport tableDrawer from \"@/components/table-drawer/main.vue\";\nimport request from \"@/router/axios\";\nimport { mapGetters } from \"vuex\";\nimport store from \"../../store\";\nimport { exportBlob } from \"@/api/common\";\nimport { downloadXls, timeFormate } from \"@/util/util\";\nimport { getToken } from \"@/util/auth\";\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\n\nexport default {\n  components: {\n    \"focus-input\": focusInput,\n    \"table-drawer\": tableDrawer,\n    \"price-form\": priceForm,\n    \"add-form\": addForm,\n    \"query-form\": queryForm,\n  },\n  data() {\n    return {\n      expands: [], //展开显示商链的列\n      goodsShopList: [], //商链列表\n      goodsUrlForm: {}, //商链表单\n      visibleDrawer: false, //表格列显引模块控制\n      request: {}, //算价模块结果\n      tmp: null, //临时settimeout的tmp，用于控制单双击不冲突。\n      bindId: \"\",\n      exportGoodsCodes: \"\", //导出条码\n      cityList: [],\n      excelBox: false, //控制导入模块\n      rateOptions: null, //商品进度的配置\n      excelForm: {},\n      excelOption: {\n        submitBtn: false,\n        emptyBtn: false,\n        column: [\n          {\n            label: \"模板上传\",\n            prop: \"excelFile\",\n            type: \"upload\",\n            drag: true,\n            loadText: \"模板上传中，请稍等\",\n            span: 24,\n            propsHttp: {\n              res: \"data\",\n            },\n            tip: \"请上传 .xls,.xlsx 标准格式文件\",\n            action: \"/api/blade-goodsInfo/goodsInfo/import-goodsInfo\",\n          },\n          {\n            label: \"数据覆盖\",\n            prop: \"isCovered\",\n            type: \"switch\",\n            align: \"center\",\n            width: 80,\n            dicData: [\n              {\n                label: \"否\",\n                value: 0,\n              },\n              {\n                label: \"是\",\n                value: 1,\n              },\n            ],\n            value: 0,\n            slot: true,\n            rules: [\n              {\n                required: true,\n                message: \"请选择是否覆盖\",\n                trigger: \"blur\",\n              },\n            ],\n          },\n          {\n            label: \"模板下载\",\n            prop: \"excelTemplate\",\n            formslot: true,\n            span: 24,\n          },\n        ],\n      },\n      // 弹框标题\n      title: \"\",\n      // 是否展示弹框\n      box: false,\n      priceBox: false,\n      // 是否显示查询\n      search: true,\n      // 加载中\n      loading: true,\n      loadingDailog: false,\n      // 是否为查看模式\n      view: false,\n      // 查询信息\n      query: {},\n      headers: {\n        \"Blade-Auth\": \"Bearer \" + store.getters.token,\n      },\n      // 分页信息\n      page: {\n        currentPage: 1,\n        pageSize: 10,\n        total: 40,\n      },\n      // 表单数据\n      form: {},\n      priceForm: {},\n      // 选择行\n      selectionList: [],\n      // 表单配置\n      option: option,\n      // 表单列表\n      data: [],\n      editCellOption: {},\n    };\n  },\n  watch: {\n    \"excelForm.isCovered\"() {\n      if (this.excelForm.isCovered !== \"\") {\n        const column = this.findObject(this.excelOption.column, \"excelFile\");\n        column.action = `/api/blade-goodsInfo/goodsInfo/import-goodsInfo?isCovered=${this.excelForm.isCovered}`;\n      }\n    },\n    \"priceForm.goodsCount\"() {\n      this.priceForm.weight =\n        (this.priceForm.goodsCount * this.priceForm.goodsWeightK) / 1000;\n    },\n  },\n  mounted() {\n    this.init();\n    this.onLoad(this.page);\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    ids() {\n      let ids = [];\n      this.selectionList.forEach((ele) => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n  },\n  methods: {\n    init() {\n      this.rateOptions = this.option.column.find(\n        (item) => item.prop == \"goodsRate\"\n      ).selectOptions;\n    },\n    bind_Id(id) {\n      this.bindId = id;\n      console.log(this.bindId);\n    },\n    myFuction(fname, param, ...args) {\n      if (fname) {\n        return this[fname](param, ...args);\n      }\n    },\n    beforeUpload(file) {\n      const isLt2M = file.size / 1024 / 1024 < 1;\n\n      if (!isLt2M) {\n        this.$message.error(\"上传文件大小不能超过 1MB\");\n        return false;\n      }\n    },\n    uploadImage(params) {\n      this.loading = true;\n      let file = params.file;\n      const form = new FormData();\n\n      const imageConversion1 = require(\"image-conversion\");\n      imageConversion1.compressAccurately(file, 100).then((res) => {\n        let resFile = new File([res], file.name);\n        form.append(\"file\", resFile);\n        request({\n          url: \"/api/blade-resource/oss/endpoint/put-file-attach\",\n          method: \"post\",\n          data: form,\n        })\n          .then(({ data }) => {\n            this.imageSuccess(data);\n          })\n          .catch(() => {\n            this.loading = false;\n            this.$message({\n              message: \"上传失败，请重试\",\n              type: \"error\",\n            });\n          });\n      });\n    },\n    openEdit(option) {\n      this.editCellOption = { ...option };\n      console.log(this.editCellOption);\n      option.width = option.width + 45;\n    },\n    handleOfferPrice(row) {\n      this.title = row.goodsName;\n      this.priceForm = {\n        goodsId: row.id,\n        profitRate: row.profitRate,\n        goodsCount: row.goodsCount || 200,\n        goodsWeightK: row.goodsWeightK,\n        buyingPrice: row.buyingPrice,\n        weight: (row.goodsCount * row.goodsWeightK) / 1000,\n      };\n      this.request = {\n        primeCost1: row.primeCost1,\n        primeCost2: row.primeCost2,\n        freightFee1: row.freightFee1,\n        freightFee2: row.freightFee2,\n      };\n      this.priceBox = true;\n    },\n    goodsRateStyle(row) {\n      const rateinfo = this.rateOptions.find(\n        (rate) => rate.value == row.goodsRate\n      );\n      if (rateinfo) {\n        return {\n          color: rateinfo.color,\n        };\n      } else return {};\n    },\n    styleButton() {\n      return { color: \"#6c6e71\" };\n    },\n    uploadAfter(res, done, loading, column) {\n      window.console.log(column);\n      this.excelBox = false;\n      this.onLoad(this.page);\n      done();\n    },\n    handleExport() {\n      if (this.exportGoodsCodes == \"\" && this.ids == \"\") {\n        this.$message({\n          type: \"error\",\n          message: \"请选择导出的数据或者输入导出条码。\",\n        });\n        return;\n      }\n      const form = {\n        exportGoodsCodes: this.exportGoodsCodes || \"99999\",\n        ids: this.ids,\n      };\n      this.$confirm(\"是否导出商品信息数据?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      }).then(() => {\n        NProgress.start();\n        request({\n          url: \"/api/blade-goodsInfo/goodsInfo/export-goodsInfo\",\n          method: \"get\",\n          params: form,\n          responseType: \"blob\",\n        }).then((res) => {\n          downloadXls(res.data, `商品信息${timeFormate(new Date())}.xlsx`);\n          NProgress.done();\n        });\n      });\n    },\n    handleSort({ prop, order }) {\n      this.$delete(this.query, \"descs\");\n      this.$delete(this.query, \"ascs\");\n      const orderS = order == \"descending\" ? \"descs\" : \"ascs\";\n      if (order) {\n        prop = prop.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n        this.query = {\n          ...this.query,\n          [orderS]: prop,\n        };\n      }\n      this.onLoad(this.page);\n    },\n    searchHide() {\n      this.search = !this.search;\n    },\n    searchChange() {\n      this.onLoad(this.page);\n    },\n    searchReset() {\n      this.query = {};\n      this.page.currentPage = 1;\n      this.onLoad(this.page);\n    },\n    handleTemplate() {\n      exportBlob(\n        `/api/blade-goodsInfo/goodsInfo/export-template?${\n          this.website.tokenHeader\n        }=${getToken()}`\n      ).then((res) => {\n        downloadXls(res.data, `商品信息模板.xlsx`);\n      });\n    },\n    handleImport() {\n      this.excelBox = true;\n    },\n    handleAdd() {\n      this.title = \"新增\";\n      this.form.id = null;\n      if (!this.form.isSave) {\n        this.form = {\n          submissionDate: new Date(),\n        };\n      }\n      this.box = true;\n    },\n    handleEdit(row) {\n      this.title = \"编辑\";\n      this.box = true;\n      getDetail(row.id).then((res) => {\n        this.form = res.data.data;\n      });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.selectionClear();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\",\n          });\n        });\n    },\n    handleAudit(auditStatus) {\n     const f = () =>{ if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据审核?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          const res = (ids, status) =>\n            request({\n              url: \"/api/blade-goodsInfo/goodsInfo/audit\",\n              method: \"post\",\n              params: { ids, status },\n            });\n          return res(this.ids, auditStatus);\n        })\n        .then(() => {\n          this.selectionClear();\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\",\n          });\n        });\n     }\n     return f;\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\",\n          });\n        });\n    },\n    tableRowStyle({ rowIndex }) {\n      if (rowIndex % 2 != 0) {\n        return {\n          \"background-color\": \"#f6f6f6\",\n        };\n      }\n    },\n    handleDrawer() {\n      // debugger\n      console.log(this.visibleDrawer);\n      this.visibleDrawer = true;\n    },\n    handleOnBlur(row, item, value, isChange) {\n      let form = {\n        id: row.id,\n        [item.prop]: value,\n      };\n      if (item.prop == \"profitRate\" && value) {\n        let tmp = +(value.replace(\"%\", \"\") / 100).toFixed(2);\n        form = {\n          ...form,\n          offerPrice: (row.primeCost2 * (1 + tmp)).toFixed(1),\n        };\n      }\n      item.width = this.editCellOption.width;\n      if (isChange) {\n        this.loading = true;\n        update(form).then(() => {\n          this.onLoad(this.page);\n          this.editCellOption = {};\n          this.$message({\n            type: \"success\",\n            message: \"更新成功!\",\n          });\n        });\n      }\n    },\n\n    copySuccess() {\n      this.$message({\n        message: \"复制成功\",\n        type: \"success\",\n      });\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.table.clearSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n      this.onLoad(this.page);\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n      this.onLoad(this.page);\n    },\n    imageSuccess(res) {\n      console.log(res);\n      // this.onLoad(this.page);\n      const form = {\n        goodsImage: res.data.link,\n        id: this.bindId,\n      };\n      update(form)\n        .then(() => {\n          this.loading = false;\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\",\n          });\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    copyInfo(row, value) {\n      if (!this.tmp) {\n        this.tmp = setTimeout(() => {\n          console.log(value);\n          // 创建输入框元素\n          let oInput = document.createElement(\"input\");\n          // 将想要复制的值\n          oInput.value = value;\n          // 页面底部追加输入框\n          document.body.appendChild(oInput);\n          // 选中输入框\n          oInput.select();\n          // 执行浏览器复制命令\n          document.execCommand(\"Copy\");\n          // 弹出复制成功信息\n          this.$message.success(\"复制成功\");\n          // 复制后移除输入框\n          oInput.remove();\n          this.tmp = null;\n        }, 300);\n      } else {\n        clearTimeout(this.tmp);\n        this.tmp = null;\n      }\n    },\n    expandRow(row, value) {\n      if (!this.tmp) {\n        this.tmp = setTimeout(() => {\n          console.log(value);\n          // 创建输入框元素\n          let oInput = document.createElement(\"input\");\n          // 将想要复制的值\n          oInput.value = value;\n          // 页面底部追加输入框\n          document.body.appendChild(oInput);\n          // 选中输入框\n          oInput.select();\n          // 执行浏览器复制命令\n          document.execCommand(\"Copy\");\n          // 弹出复制成功信息\n          this.$message.success(\"复制成功\");\n          // 复制后移除输入框\n          oInput.remove();\n          this.tmp = null;\n        }, 250);\n      } else {\n        clearTimeout(this.tmp);\n        this.tmp = null;\n        this.goodsShopList = [];\n        this.goodsUrlForm = {};\n        if (this.expands.includes(row.id)) {\n          this.expands = this.expands.filter((val) => val !== row.id);\n        } else {\n          this.expands = [];\n          this.loadUrl(row.id).then((res) => {\n            this.goodsShopList = res.data.data;\n            this.expands.push(row.id);\n            this.goodsUrlForm = { goodsId: row.id };\n          });\n        }\n      }\n    },\n    addShopRul() {\n      if (!this.goodsUrlForm.shopType || !this.goodsUrlForm.shopUrl) {\n        this.$message({\n          type: \"error\",\n          message: \"url或备注名不能为空\",\n        });\n        return;\n      }\n      if (\n        !this.goodsUrlForm.shopUrl.startsWith(\"http://\") &&\n        !this.goodsUrlForm.shopUrl.startsWith(\"https://\")\n      ) {\n        this.$message({\n          type: \"error\",\n          message: \"url请已https//或http//开头\",\n        });\n        return;\n      }\n      request({\n        url: \"/api/blade-goodsShop/goodsShop/submit\",\n        method: \"post\",\n        data: this.goodsUrlForm,\n      }).then(() => {\n        // this.goodsShopList.push(this.goodsUrlForm)\n        this.loadUrl(this.goodsUrlForm.goodsId).then((res) => {\n          this.goodsShopList = res.data.data;\n          this.goodsUrlForm.shopType = \"\";\n          this.goodsUrlForm.shopUrl = \"\";\n        });\n      });\n    },\n    toUrl(url) {\n      window.open(url);\n    },\n    delShopRul(id) {\n      this.$confirm(\"是否删除商链该记录?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      }).then(() => {\n        request({\n          url: \"/api/blade-goodsShop/goodsShop/remove\",\n          method: \"post\",\n          params: {\n            ids: id,\n          },\n        }).then(() => {\n          this.loadUrl(this.goodsUrlForm.goodsId).then((res) => {\n            this.goodsShopList = res.data.data;\n          });\n        });\n      });\n    },\n    handleInput(v) {\n      // const re = /[u4E00-u9FA5]/g;\n      debugger;\n      const pattern = new RegExp(\"[\\u4E00-\\u9FA5]+\");\n      let res = v.replace(pattern, \"\").replaceAll(\" \", \",\").split(\",\");\n      res = res.filter((value, i) => value != \"\" || i != 0);\n      this.exportGoodsCodes = res.toString();\n    },\n    loadUrl(goodsId) {\n      return request({\n        url: \"/api/blade-goodsShop/goodsShop/list\",\n        method: \"get\",\n        params: { goodsId },\n      });\n    },\n    submitSuccess(value) {\n      this[value] = false;\n      this.onLoad(this.page);\n      this.$message({\n        type: \"success\",\n        message: \"操作成功!\",\n      });\n    },\n    clickMenu(f){\n      f()\n    },\n    // headerClick(column, event){\n    //   console.log(column,event)\n    //   if(column.property != 'goodsCode'){\n    //     return\n    //   }\n    //   const goodsCodes = this.data.map(i => i.goodsCode)\n    //   console.log(goodsCodes.toString())\n    //    // 创建输入框元素\n    //       let oInput = document.createElement(\"input\");\n    //       // 将想要复制的值\n    //       oInput.value = goodsCodes.toString();\n    //       // 页面底部追加输入框\n    //       document.body.appendChild(oInput);\n    //       // 选中输入框\n    //       oInput.select();\n    //       // 执行浏览器复制命令\n    //       document.execCommand(\"Copy\");\n    //       // 弹出复制成功信息\n    //       this.$message.success(\"复制成功\");\n    //       // 复制后移除输入框\n    //       oInput.remove();\n    // },\n    closeBox(value) {\n      this[value] = false;\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(\n        page.currentPage,\n        page.pageSize,\n        Object.assign(params, this.query)\n      ).then((res) => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.form-item .el-form-item__content {\n  width: 90px;\n}\n.el-table__expand-icon {\n  display: unset !important;\n}\n.avue-crud .el-table .el-form-item__label {\n  position: unset !important;\n}\n\n.el-table__cell.el-table__expanded-cell .el-empty {\n  height: 1px;\n  padding: 20px;\n  .el-empty__description {\n    margin-top: 0px;\n  }\n}\n.el-table__body-wrapper {\n  .el-table__expanded-cell {\n    z-index: 100;\n    padding: 0;\n  }\n}\n.el-table__fixed,\n.el-table__fixed-right {\n  .el-table__expanded-cell {\n    visibility: hidden;\n    padding: 0;\n  }\n}\n.expand {\n  width: 100%;\n  padding-left: 2rem;\n  /* padding: 20px; */\n  background-color: #dcdfe6 !important; //盖住fixed产生的阴影\n  font-size: 12px;\n\n  .el-form-item__label {\n    font-size: 12px !important;\n  }\n  .el-input__inner {\n    font-size: 12px !important;\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.el-pagination {\n  margin-top: 20px;\n}\n\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  text-align: center;\n}\n.avatar {\n  display: block;\n}\n</style>\n"]}]}