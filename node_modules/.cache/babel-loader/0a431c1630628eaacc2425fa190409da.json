{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/page/logs/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/page/logs/index.vue","mtime":1666151205528},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"errLogs\",\n  data: function data() {\n    return {\n      option: {\n        menu: false,\n        addBtn: false,\n        page: false,\n        border: true,\n        expand: true,\n        refreshBtn: false,\n        headerAlign: \"center\",\n        column: [{\n          label: \"类型\",\n          prop: \"type\",\n          width: 80,\n          align: \"center\",\n          slot: true,\n          dicData: [{\n            label: \"bug\",\n            value: \"error\"\n          }]\n        }, {\n          label: \"地址\",\n          width: 200,\n          prop: \"url\",\n          overHidden: true\n        }, {\n          label: \"内容\",\n          prop: \"message\",\n          overHidden: true\n        }, {\n          label: \"错误堆栈\",\n          prop: \"stack\",\n          hide: true\n        }, {\n          label: \"时间\",\n          align: \"center\",\n          prop: \"time\",\n          width: 200\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  computed: _objectSpread({}, mapGetters([\"logsList\"])),\n  props: [],\n  methods: {\n    send: function send() {\n      var _this = this;\n\n      this.$confirm(\"确定上传本地日志到服务器?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this.$store.dispatch(\"SendLogs\").then(function () {\n          _this.$parent.$parent.box = false;\n\n          _this.$message({\n            type: \"success\",\n            message: \"发送成功!\"\n          });\n        });\n      }).catch(function () {});\n    },\n    clear: function clear() {\n      var _this2 = this;\n\n      this.$confirm(\"确定清空本地日志记录?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this2.$store.commit(\"CLEAR_LOGS\");\n\n        window.console.log(_this2);\n        _this2.$parent.$parent.box = false;\n\n        _this2.$message({\n          type: \"success\",\n          message: \"清空成功!\"\n        });\n      }).catch(function () {});\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;AA4BA;AACA;EACAA,eADA;EAEAC,IAFA,kBAEA;IACA;MACAC;QACAC,WADA;QAEAC,aAFA;QAGAC,WAHA;QAIAC,YAJA;QAKAC,YALA;QAMAC,iBANA;QAOAC,qBAPA;QAQAC,SACA;UACAC,WADA;UAEAC,YAFA;UAGAC,SAHA;UAIAC,eAJA;UAKAC,UALA;UAMAC,UACA;YACAL,YADA;YAEAM;UAFA,CADA;QANA,CADA,EAcA;UACAN,WADA;UAEAE,UAFA;UAGAD,WAHA;UAIAM;QAJA,CAdA,EAoBA;UACAP,WADA;UAEAC,eAFA;UAGAM;QAHA,CApBA,EAyBA;UACAP,aADA;UAEAC,aAFA;UAGAO;QAHA,CAzBA,EA8BA;UACAR,WADA;UAEAG,eAFA;UAGAF,YAHA;UAIAC;QAJA,CA9BA;MARA;IADA;EAgDA,CAnDA;EAoDAO,OApDA,qBAoDA,EApDA;EAqDAC,OArDA,qBAqDA,EArDA;EAsDAC,4BACAC,wBADA,CAtDA;EAyDAC,SAzDA;EA0DAC;IACAC,IADA,kBACA;MAAA;;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAKAC,IALA,CAKA;QACA;UACA;;UACA;YACAD,eADA;YAEAE;UAFA;QAIA,CANA;MAOA,CAbA,EAcAC,KAdA,CAcA,cAdA;IAeA,CAjBA;IAkBAC,KAlBA,mBAkBA;MAAA;;MACA;QACAN,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAKAC,IALA,CAKA;QACA;;QACAI;QACA;;QACA;UACAL,eADA;UAEAE;QAFA;MAIA,CAbA,EAcAC,KAdA,CAcA,cAdA;IAeA;EAlCA;AA1DA","names":["name","data","option","menu","addBtn","page","border","expand","refreshBtn","headerAlign","column","label","prop","width","align","slot","dicData","value","overHidden","hide","created","mounted","computed","mapGetters","props","methods","send","confirmButtonText","cancelButtonText","type","then","message","catch","clear","window"],"sourceRoot":"src/page/logs","sources":["index.vue"],"sourcesContent":["<template>\n  <avue-crud :data=\"logsList\"\n             :option=\"option\">\n    <template slot=\"menuLeft\">\n      <el-button type=\"primary\"\n                 size=\"small\"\n                 icon=\"el-icon-upload\"\n                 @click=\"send\">上传服务器</el-button>\n      <el-button type=\"danger\"\n                 size=\"small\"\n                 icon=\"el-icon-delete\"\n                 @click=\"clear\">清空本地日志</el-button>\n    </template>\n    <template slot-scope=\"scope\"\n              slot=\"type\">\n      <el-tag type=\"danger\"\n              size=\"small\">{{scope.label}}</el-tag>\n    </template>\n    <template slot-scope=\"props\"\n              slot=\"expand\">\n      <pre class=\"code\">\n        {{props.row.stack}}\n      </pre>\n    </template>\n  </avue-crud>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"errLogs\",\n  data() {\n    return {\n      option: {\n        menu: false,\n        addBtn: false,\n        page: false,\n        border: true,\n        expand: true,\n        refreshBtn: false,\n        headerAlign: \"center\",\n        column: [\n          {\n            label: \"类型\",\n            prop: \"type\",\n            width: 80,\n            align: \"center\",\n            slot: true,\n            dicData: [\n              {\n                label: \"bug\",\n                value: \"error\"\n              }\n            ]\n          },\n          {\n            label: \"地址\",\n            width: 200,\n            prop: \"url\",\n            overHidden: true\n          },\n          {\n            label: \"内容\",\n            prop: \"message\",\n            overHidden: true\n          },\n          {\n            label: \"错误堆栈\",\n            prop: \"stack\",\n            hide: true\n          },\n          {\n            label: \"时间\",\n            align: \"center\",\n            prop: \"time\",\n            width: 200\n          }\n        ]\n      }\n    };\n  },\n  created() {},\n  mounted() {},\n  computed: {\n    ...mapGetters([\"logsList\"])\n  },\n  props: [],\n  methods: {\n    send() {\n      this.$confirm(\"确定上传本地日志到服务器?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          this.$store.dispatch(\"SendLogs\").then(() => {\n            this.$parent.$parent.box = false;\n            this.$message({\n              type: \"success\",\n              message: \"发送成功!\"\n            });\n          });\n        })\n        .catch(() => {});\n    },\n    clear() {\n      this.$confirm(\"确定清空本地日志记录?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          this.$store.commit(\"CLEAR_LOGS\");\n          window.console.log(this);\n          this.$parent.$parent.box = false;\n          this.$message({\n            type: \"success\",\n            message: \"清空成功!\"\n          });\n        })\n        .catch(() => {});\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.code {\n  font-size: 12px;\n  display: block;\n  font-family: monospace;\n  white-space: pre;\n  margin: 1em 0px;\n}\n</style>\n"]}]}