{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/views/flow/manager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/views/flow/manager.vue","mtime":1666151205539},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mapGetters } from \"vuex\";\nimport { managerList, changeState, deleteDeployment } from \"@/api/flow/flow\";\nimport { flowCategory } from \"@/util/flow\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      mode: '1',\n      selectionId: '',\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      processDefinitionId: '',\n      flowBox: false,\n      stateBox: false,\n      flowState: '',\n      stateOptions: [{\n        value: 'active',\n        label: '激活'\n      }, {\n        value: 'suspend',\n        label: '挂起'\n      }],\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        editBtn: false,\n        addBtn: false,\n        viewBtn: false,\n        delBtn: false,\n        dialogWidth: 900,\n        menuWidth: 250,\n        dialogClickModal: false,\n        column: [{\n          label: '租户编号',\n          prop: 'tenantId',\n          slot: true,\n          width: 120\n        }, {\n          label: '流程主键',\n          prop: 'id'\n        }, {\n          label: '流程标识',\n          prop: 'key',\n          search: true,\n          width: 150\n        }, {\n          label: '流程名称',\n          prop: 'name',\n          width: 150\n        }, {\n          label: \"流程分类\",\n          type: \"select\",\n          row: true,\n          dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          dataType: \"number\",\n          slot: true,\n          prop: \"category\",\n          search: true,\n          width: 100\n        }, {\n          label: '流程版本',\n          prop: 'version',\n          slot: true,\n          width: 80\n        }, {\n          label: '状态',\n          prop: 'suspensionState',\n          slot: true,\n          width: 80\n        }, {\n          label: '部署时间',\n          prop: 'deploymentTime',\n          width: 165\n        }]\n      },\n      data: []\n    };\n  },\n  watch: {\n    'mode': function mode() {\n      this.onLoad(this.page);\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        delBtn: this.vaildData(this.permission.flow_manager_remove, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n    deploymentIds: function deploymentIds() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.deploymentId);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return deleteDeployment(_this.deploymentIds);\n      }).then(function () {\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this.$refs.crud.toggleSelection();\n\n        _this.onLoad(_this.page);\n      });\n    },\n    handleSlotDelete: function handleSlotDelete(row) {\n      var _this2 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return deleteDeployment(row.deploymentId);\n      }).then(function () {\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this2.$refs.crud.toggleSelection();\n\n        _this2.onLoad(_this2.page);\n      });\n    },\n    handleState: function handleState(row) {\n      this.stateBox = true;\n      this.selectionId = row.id;\n    },\n    handleDoState: function handleDoState() {\n      var _this3 = this;\n\n      if (!this.flowState) {\n        this.$message({\n          type: \"warn\",\n          message: \"请先选择流程状态!\"\n        });\n        return;\n      }\n\n      changeState({\n        processId: this.selectionId,\n        state: this.flowState\n      }).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this3.$message({\n            type: \"success\",\n            message: data.msg\n          });\n\n          _this3.stateBox = false;\n\n          _this3.onLoad(_this3.page);\n        } else {\n          _this3.$message({\n            type: \"warn\",\n            message: data.msg\n          });\n        }\n      });\n    },\n    handleImage: function handleImage(row) {\n      this.processDefinitionId = row.id;\n      this.flowBox = true;\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this4 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var values = _objectSpread(_objectSpread({}, params), {}, {\n        category: params.category ? flowCategory(params.category) : null,\n        mode: this.mode\n      });\n\n      this.loading = true;\n      managerList(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this4.page.total = data.total;\n        _this4.data = data.records;\n        _this4.loading = false;\n\n        _this4.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":"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","names":["data","form","mode","selectionId","selectionList","query","loading","page","pageSize","currentPage","total","processDefinitionId","flowBox","stateBox","flowState","stateOptions","value","label","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","selection","editBtn","addBtn","viewBtn","delBtn","dialogWidth","menuWidth","dialogClickModal","column","prop","slot","width","search","type","row","dicUrl","props","dataType","watch","computed","mapGetters","permissionList","ids","deploymentIds","methods","searchReset","searchChange","params","done","selectionChange","list","selectionClear","handleDelete","confirmButtonText","cancelButtonText","then","message","handleSlotDelete","handleState","handleDoState","changeState","processId","state","handleImage","currentChange","sizeChange","refreshChange","onLoad","category","managerList"],"sourceRoot":"src/views/flow","sources":["manager.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :page.sync=\"page\"\n               :permission=\"permissionList\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-radio-group v-model=\"mode\" size=\"small\">\n          <el-radio-button label=\"1\">通用流程</el-radio-button>\n          <el-radio-button label=\"2\">定制流程</el-radio-button>\n        </el-radio-group>\n      </template>\n      <template slot-scope=\"scope\" slot=\"menu\">\n        <el-button type=\"text\"\n                   size=\"small\"\n                   icon=\"el-icon-refresh\"\n                   v-if=\"permission.flow_manager_state\"\n                   @click.stop=\"handleState(scope.row,scope.index)\">变更状态\n        </el-button>\n        <el-button type=\"text\"\n                   size=\"small\"\n                   icon=\"el-icon-search\"\n                   v-if=\"permission.flow_manager_image\"\n                   @click.stop=\"handleImage(scope.row,scope.index)\">流程图\n        </el-button>\n        <el-button type=\"text\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   v-if=\"permission.flow_manager_remove\"\n                   @click.stop=\"handleSlotDelete(scope.row,scope.index)\">删除\n        </el-button>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"tenantId\">\n        <el-tag>{{row.tenantId===''?'通用':row.tenantId}}</el-tag>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"version\">\n        <el-tag>v{{row.version}}</el-tag>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"suspensionState\">\n        <el-tag>{{row.suspensionState===1?'激活':'挂起'}}</el-tag>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"category\">\n        <el-tag>{{row.categoryName}}</el-tag>\n      </template>\n    </avue-crud>\n    <flow-design is-dialog :is-display.sync=\"flowBox\" :process-definition-id=\"processDefinitionId\"></flow-design>\n    <el-dialog title=\"流程变更\"\n               append-to-body\n               :visible.sync=\"stateBox\"\n               width=\"20%\">\n      <el-form :model=\"form\"\n               ref=\"form\"\n               label-width=\"80px\">\n        <el-form-item label=\"流程状态\">\n          <el-select v-model=\"flowState\" placeholder=\"请选择\" value=\"\">\n            <el-option\n              v-for=\"item in stateOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"stateBox = false\">关 闭</el-button>\n        <el-button type=\"primary\"\n                   @click=\"handleDoState\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {mapGetters} from \"vuex\";\n  import {managerList, changeState, deleteDeployment} from \"@/api/flow/flow\";\n  import {flowCategory} from \"@/util/flow\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        mode: '1',\n        selectionId: '',\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        processDefinitionId: '',\n        flowBox: false,\n        stateBox: false,\n        flowState: '',\n        stateOptions: [{\n          value: 'active',\n          label: '激活'\n        }, {\n          value: 'suspend',\n          label: '挂起'\n        }],\n        option: {\n          height: 'auto',\n          calcHeight: 30,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          selection: true,\n          editBtn: false,\n          addBtn: false,\n          viewBtn: false,\n          delBtn: false,\n          dialogWidth: 900,\n          menuWidth: 250,\n          dialogClickModal: false,\n          column: [\n            {\n              label: '租户编号',\n              prop: 'tenantId',\n              slot: true,\n              width: 120,\n            },\n            {\n              label: '流程主键',\n              prop: 'id',\n            },\n            {\n              label: '流程标识',\n              prop: 'key',\n              search: true,\n              width: 150,\n            },\n            {\n              label: '流程名称',\n              prop: 'name',\n              width: 150,\n            },\n            {\n              label: \"流程分类\",\n              type: \"select\",\n              row: true,\n              dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              dataType: \"number\",\n              slot: true,\n              prop: \"category\",\n              search: true,\n              width: 100,\n            },\n            {\n              label: '流程版本',\n              prop: 'version',\n              slot: true,\n              width: 80,\n            },\n            {\n              label: '状态',\n              prop: 'suspensionState',\n              slot: true,\n              width: 80,\n            },\n            {\n              label: '部署时间',\n              prop: 'deploymentTime',\n              width: 165,\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    watch: {\n      'mode'() {\n        this.onLoad(this.page);\n      }\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          delBtn: this.vaildData(this.permission.flow_manager_remove, false),\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n      deploymentIds() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.deploymentId);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return deleteDeployment(this.deploymentIds);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n            this.onLoad(this.page);\n          });\n      },\n      handleSlotDelete(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return deleteDeployment(row.deploymentId);\n          })\n          .then(() => {\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n            this.onLoad(this.page);\n          });\n      },\n      handleState(row) {\n        this.stateBox = true;\n        this.selectionId = row.id;\n      },\n      handleDoState() {\n        if (!this.flowState) {\n          this.$message({\n            type: \"warn\",\n            message: \"请先选择流程状态!\"\n          });\n          return;\n        }\n        changeState({processId: this.selectionId, state: this.flowState}).then(res => {\n          const data = res.data;\n          if (data.success) {\n            this.$message({\n              type: \"success\",\n              message: data.msg\n            });\n            this.stateBox = false;\n            this.onLoad(this.page);\n          } else {\n            this.$message({\n              type: \"warn\",\n              message: data.msg\n            });\n          }\n        })\n      },\n      handleImage(row) {\n        this.processDefinitionId = row.id;\n        this.flowBox = true;\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        const values = {\n          ...params,\n          category: (params.category) ? flowCategory(params.category) : null,\n          mode: this.mode\n        };\n        this.loading = true;\n        managerList(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n"]}]}