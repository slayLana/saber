{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/views/report/reportlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/views/report/reportlist.vue","mtime":1666151205540},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { getList, remove } from \"@/api/report/report\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        dialogClickModal: false,\n        column: [{\n          label: \"文件名\",\n          prop: \"name\",\n          search: true,\n          slot: true\n        }, {\n          label: \"创建时间\",\n          prop: \"createTime\"\n        }, {\n          label: \"更新时间\",\n          prop: \"updateTime\"\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"userInfo\", \"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: false,\n        viewBtn: false,\n        delBtn: true,\n        editBtn: false\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    handlePreview: function handlePreview(name) {\n      this.$router.push({\n        path: \"/myiframe/urlPath?name=preview-\".concat(name, \"&src=\").concat(this.website.reportUrl, \"/preview?_u=blade-\").concat(name)\n      });\n    },\n    handleDesign: function handleDesign(name) {\n      this.$router.push({\n        path: \"/myiframe/urlPath?name=designer-\".concat(name, \"&src=\").concat(this.website.reportUrl, \"/designer?_u=blade-\").concat(name)\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this.onLoad(_this.page);\n\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this2 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this2.ids);\n      }).then(function () {\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this2.$refs.crud.toggleSelection();\n      });\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this3 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this3.page.total = data.total;\n        _this3.data = data.records;\n        _this3.loading = false;\n\n        _this3.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;AAmDA;AACA;AAEA;EACAA,IADA,kBACA;IACA;MACAC,QADA;MAEAC,iBAFA;MAGAC,SAHA;MAIAC,aAJA;MAKAC;QACAC,YADA;QAEAC,cAFA;QAGAC;MAHA,CALA;MAUAC;QACAC,cADA;QAEAC,cAFA;QAGAC,UAHA;QAIAC,gBAJA;QAKAC,iBALA;QAMAC,YANA;QAOAC,WAPA;QAQAC,eARA;QASAC,aATA;QAUAC,uBAVA;QAWAC,SACA;UACAC,YADA;UAEAC,YAFA;UAGAC,YAHA;UAIAC;QAJA,CADA,EAOA;UACAH,aADA;UAEAC;QAFA,CAPA,EAWA;UACAD,aADA;UAEAC;QAFA,CAXA;MAXA,CAVA;MAsCAtB;IAtCA;EAwCA,CA1CA;EA2CAyB,0CACAC,sCADA;IAEAC,cAFA,4BAEA;MACA;QACAC,aADA;QAEAV,cAFA;QAGAW,YAHA;QAIAC;MAJA;IAMA,CATA;IAUAC,GAVA,iBAUA;MACA;MACA;QACAA;MACA,CAFA;MAGA;IACA;EAhBA,EA3CA;EA6DAC;IACAC,aADA,yBACAC,IADA,EACA;MACA;QAAAC;MAAA;IACA,CAHA;IAIAC,YAJA,wBAIAF,IAJA,EAIA;MACA;QAAAC;MAAA;IACA,CANA;IAOAE,MAPA,kBAOAC,GAPA,EAOA;MAAA;;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAKAC,IALA,CAKA;QACA;MACA,CAPA,EAQAA,IARA,CAQA;QACA;;QACA;UACAD,eADA;UAEAE;QAFA;MAIA,CAdA;IAeA,CAvBA;IAwBAC,WAxBA,yBAwBA;MACA;MACA;IACA,CA3BA;IA4BAC,YA5BA,wBA4BAC,MA5BA,EA4BAC,IA5BA,EA4BA;MACA;MACA;MACA;MACAA;IACA,CAjCA;IAkCAC,eAlCA,2BAkCAC,IAlCA,EAkCA;MACA;IACA,CApCA;IAqCAC,cArCA,4BAqCA;MACA;MACA;IACA,CAxCA;IAyCAC,YAzCA,0BAyCA;MAAA;;MACA;QACA;QACA;MACA;;MACA;QACAZ,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAKAC,IALA,CAKA;QACA;MACA,CAPA,EAQAA,IARA,CAQA;QACA;;QACA;UACAD,eADA;UAEAE;QAFA;;QAIA;MACA,CAfA;IAgBA,CA9DA;IA+DAS,aA/DA,yBA+DA7C,WA/DA,EA+DA;MACA;IACA,CAjEA;IAkEA8C,UAlEA,sBAkEA/C,QAlEA,EAkEA;MACA;IACA,CApEA;IAqEAgD,aArEA,2BAqEA;MACA;IACA,CAvEA;IAwEAC,MAxEA,kBAwEAlD,IAxEA,EAwEA;MAAA;;MAAA;MACA;MACAmD;QACA;QACA;QACA;QACA;;QACA;MACA,CANA;IAOA;EAjFA;AA7DA","names":["data","form","selectionList","query","loading","page","pageSize","currentPage","total","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","selection","viewBtn","dialogClickModal","column","label","prop","search","slot","computed","mapGetters","permissionList","addBtn","delBtn","editBtn","ids","methods","handlePreview","name","path","handleDesign","rowDel","row","confirmButtonText","cancelButtonText","type","then","message","searchReset","searchChange","params","done","selectionChange","list","selectionClear","handleDelete","currentChange","sizeChange","refreshChange","onLoad","getList"],"sourceRoot":"src/views/report","sources":["reportlist.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :page.sync=\"page\"\n               :permission=\"permissionList\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template slot-scope=\"scope\" slot=\"menu\">\n        <el-button\n          type=\"text\"\n          icon=\"el-icon-edit-outline\"\n          size=\"small\"\n          @click.stop=\"handleDesign(scope.row.name)\"\n          v-if=\"userInfo.role_name.includes('admin')\"\n        >设计\n        </el-button>\n        <el-button\n          type=\"text\"\n          icon=\"el-icon-view\"\n          size=\"small\"\n          @click.stop=\"handlePreview(scope.row.name)\"\n          v-if=\"userInfo.role_name.includes('admin')\"\n        >预览\n        </el-button>\n      </template>\n      <template slot-scope=\"{row}\" slot=\"name\">\n        <el-tag style=\"cursor:pointer\" @click=\"handlePreview(row.name)\">{{ row.name }}</el-tag>\n      </template>\n    </avue-crud>\n  </basic-container>\n</template>\n\n<script>\nimport {getList, remove} from \"@/api/report/report\";\nimport {mapGetters} from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      form: {},\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        dialogClickModal: false,\n        column: [\n          {\n            label: \"文件名\",\n            prop: \"name\",\n            search: true,\n            slot: true,\n          },\n          {\n            label: \"创建时间\",\n            prop: \"createTime\",\n          },\n          {\n            label: \"更新时间\",\n            prop: \"updateTime\",\n          }\n        ]\n      },\n      data: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"userInfo\", \"permission\"]),\n    permissionList() {\n      return {\n        addBtn: false,\n        viewBtn: false,\n        delBtn: true,\n        editBtn: false\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    handlePreview(name) {\n      this.$router.push({path: `/myiframe/urlPath?name=preview-${name}&src=${this.website.reportUrl}/preview?_u=blade-${name}`});\n    },\n    handleDesign(name) {\n      this.$router.push({path: `/myiframe/urlPath?name=designer-${name}&src=${this.website.reportUrl}/designer?_u=blade-${name}`});\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}