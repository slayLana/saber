{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/util/demo/dictbiz.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/util/demo/dictbiz.vue","mtime":1666151205545},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { getParentList, getChildList, remove, update, add, getDict, getDictTree } from \"@/api/system/dictbiz\";\nimport { optionParent, optionChild } from \"@/option/system/dictbiz\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      dictValue: '暂无',\n      parentId: -1,\n      formParent: {},\n      formChild: {},\n      selectionList: [],\n      query: {},\n      loading: true,\n      loadingChild: true,\n      pageParent: {\n        pageSize: 10,\n        pageSizes: [10, 30, 50, 100, 200],\n        currentPage: 1,\n        total: 0\n      },\n      pageChild: {\n        pageSize: 10,\n        pageSizes: [10, 30, 50, 100, 200],\n        currentPage: 1,\n        total: 0\n      },\n      dataParent: [],\n      dataChild: [],\n      optionParent: optionParent,\n      optionChild: optionChild\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"userInfo\", \"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.dictbiz_add, false),\n        delBtn: this.vaildData(this.permission.dictbiz_delete, false),\n        editBtn: this.vaildData(this.permission.dictbiz_edit, false),\n        viewBtn: false\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  mounted: function mounted() {\n    this.initData();\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      getDictTree().then(function (res) {\n        var column = _this.findObject(_this.optionChild.column, \"parentId\");\n\n        column.dicData = res.data.data;\n      });\n    },\n    handleAdd: function handleAdd(row) {\n      this.$refs.crudChild.value.parentId = row.id;\n      this.$refs.crudChild.option.column.filter(function (item) {\n        if (item.prop === \"parentId\") {\n          item.value = row.id;\n        }\n      });\n      this.$refs.crudChild.rowAdd();\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n\n      var form = _objectSpread(_objectSpread({}, row), {}, {\n        dictKey: -1\n      });\n\n      add(form).then(function () {\n        _this2.onLoadParent(_this2.pageParent);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n\n      update(row).then(function () {\n        _this3.onLoadParent(_this3.pageParent);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoadParent(_this4.pageParent);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleRowClick: function handleRowClick(row) {\n      this.query = {};\n      this.parentId = row.id;\n      this.dictValue = row.dictValue;\n      this.$refs.crudChild.value.code = row.code;\n      this.$refs.crudChild.value.parentId = row.id;\n      this.$refs.crudChild.option.column.filter(function (item) {\n        if (item.prop === \"code\") {\n          item.value = row.code;\n        }\n\n        if (item.prop === \"parentId\") {\n          item.value = row.id;\n        }\n      });\n      this.onLoadChild(this.pageChild);\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoadParent(this.pageParent);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.pageParent.currentPage = 1;\n      this.onLoadParent(this.pageParent, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this5.ids);\n      }).then(function () {\n        _this5.onLoadParent(_this5.pageParent);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this5.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this6 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDict(this.formParent.id).then(function (res) {\n          _this6.formParent = res.data.data;\n        });\n      }\n\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.pageParent.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.pageParent.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoadParent(this.pageParent, this.query);\n    },\n    rowSaveChild: function rowSaveChild(row, done, loading) {\n      var _this7 = this;\n\n      add(row).then(function () {\n        _this7.onLoadChild(_this7.pageChild);\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdateChild: function rowUpdateChild(row, index, done, loading) {\n      var _this8 = this;\n\n      update(row).then(function () {\n        _this8.onLoadChild(_this8.pageChild);\n\n        _this8.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDelChild: function rowDelChild(row) {\n      var _this9 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this9.onLoadChild(_this9.pageChild);\n\n        _this9.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchResetChild: function searchResetChild() {\n      this.query = {};\n      this.onLoadChild(this.pageChild);\n    },\n    searchChangeChild: function searchChangeChild(params, done) {\n      this.query = params;\n      this.pageChild.currentPage = 1;\n      this.onLoadChild(this.pageChild, params);\n      done();\n    },\n    selectionChangeChild: function selectionChangeChild(list) {\n      this.selectionList = list;\n    },\n    selectionClearChild: function selectionClearChild() {\n      this.selectionList = [];\n      this.$refs.crudChild.toggleSelection();\n    },\n    handleDeleteChild: function handleDeleteChild() {\n      var _this10 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this10.ids);\n      }).then(function () {\n        _this10.onLoadChild(_this10.pageChild);\n\n        _this10.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this10.$refs.crudChild.toggleSelection();\n      });\n    },\n    beforeOpenChild: function beforeOpenChild(done, type) {\n      var _this11 = this;\n\n      if ([\"add\", \"edit\"].includes(type)) {\n        this.initData();\n      }\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDict(this.formChild.id).then(function (res) {\n          _this11.formChild = res.data.data;\n        });\n      }\n\n      done();\n    },\n    beforeCloseChild: function beforeCloseChild(done) {\n      var _this12 = this;\n\n      this.$refs.crudChild.value.parentId = this.parentId;\n      this.$refs.crudChild.option.column.filter(function (item) {\n        if (item.prop === \"parentId\") {\n          item.value = _this12.parentId;\n        }\n      });\n      done();\n    },\n    currentChangeChild: function currentChangeChild(currentPage) {\n      this.pageChild.currentPage = currentPage;\n    },\n    sizeChangeChild: function sizeChangeChild(pageSize) {\n      this.pageChild.pageSize = pageSize;\n    },\n    refreshChangeChild: function refreshChangeChild() {\n      this.onLoadChild(this.pageChild, this.query);\n    },\n    onLoadParent: function onLoadParent(page) {\n      var _this13 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getParentList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this13.pageParent.total = data.total;\n        _this13.dataParent = data.records;\n        _this13.loading = false;\n\n        _this13.selectionClear();\n      });\n    },\n    onLoadChild: function onLoadChild(page) {\n      var _this14 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loadingChild = true;\n      getChildList(page.currentPage, page.pageSize, this.parentId, Object.assign(params, this.query)).then(function (res) {\n        _this14.dataChild = res.data.data;\n        _this14.loadingChild = false;\n\n        _this14.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":"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","names":["getParentList","getChildList","remove","update","add","getDict","getDictTree","data","dictValue","parentId","formParent","formChild","selectionList","query","loading","loadingChild","pageParent","pageSize","pageSizes","currentPage","total","pageChild","dataParent","dataChild","optionParent","optionChild","computed","mapGetters","permissionList","addBtn","delBtn","editBtn","viewBtn","ids","mounted","methods","initData","column","handleAdd","row","item","rowSave","done","dictKey","type","message","window","rowUpdate","index","rowDel","confirmButtonText","cancelButtonText","then","handleRowClick","searchReset","searchChange","params","selectionChange","list","selectionClear","handleDelete","beforeOpen","currentChange","sizeChange","refreshChange","rowSaveChild","rowUpdateChild","rowDelChild","searchResetChild","searchChangeChild","selectionChangeChild","selectionClearChild","handleDeleteChild","beforeOpenChild","beforeCloseChild","currentChangeChild","sizeChangeChild","refreshChangeChild","onLoadParent","page","Object","onLoadChild"],"sourceRoot":"src/views/util/demo","sources":["dictbiz.vue"],"sourcesContent":["<template>\n  <el-row>\n    <el-col :span=\"11\">\n      <basic-container>\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>业务字典列表</span>\n          </div>\n          <div class=\"clearfix\">\n            <avue-crud\n              :option=\"optionParent\"\n              :table-loading=\"loading\"\n              :data=\"dataParent\"\n              :page=\"pageParent\"\n              ref=\"crud\"\n              v-model=\"formParent\"\n              :permission=\"permissionList\"\n              :before-open=\"beforeOpen\"\n              @row-del=\"rowDel\"\n              @row-update=\"rowUpdate\"\n              @row-save=\"rowSave\"\n              @row-click=\"handleRowClick\"\n              @search-change=\"searchChange\"\n              @search-reset=\"searchReset\"\n              @selection-change=\"selectionChange\"\n              @current-change=\"currentChange\"\n              @size-change=\"sizeChange\"\n              @refresh-change=\"refreshChange\"\n              @on-load=\"onLoadParent\"\n            >\n              <template slot=\"menuLeft\">\n                <el-button\n                  type=\"danger\"\n                  size=\"small\"\n                  icon=\"el-icon-delete\"\n                  v-if=\"permission.dict_delete\"\n                  plain\n                  @click=\"handleDelete\"\n                >删 除\n                </el-button>\n              </template>\n              <template slot-scope=\"{row}\" slot=\"isSealed\">\n                <el-tag>{{row.isSealed===0?'否':'是'}}</el-tag>\n              </template>\n            </avue-crud>\n          </div>\n        </el-card>\n      </basic-container>\n    </el-col>\n    <el-col :span=\"13\">\n      <basic-container>\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>[{{dictValue}}] 业务字典详情</span>\n          </div>\n          <div class=\"clearfix\">\n            <avue-crud\n              :option=\"optionChild\"\n              :table-loading=\"loadingChild\"\n              :data=\"dataChild\"\n              ref=\"crudChild\"\n              v-model=\"formChild\"\n              :permission=\"permissionList\"\n              :before-open=\"beforeOpenChild\"\n              :before-close=\"beforeCloseChild\"\n              @row-del=\"rowDelChild\"\n              @row-update=\"rowUpdateChild\"\n              @row-save=\"rowSaveChild\"\n              @search-change=\"searchChangeChild\"\n              @search-reset=\"searchResetChild\"\n              @selection-change=\"selectionChangeChild\"\n              @current-change=\"currentChangeChild\"\n              @size-change=\"sizeChangeChild\"\n              @refresh-change=\"refreshChangeChild\"\n              @on-load=\"onLoadChild\"\n            >\n              <template slot=\"menuLeft\">\n                <el-button\n                  type=\"danger\"\n                  size=\"small\"\n                  icon=\"el-icon-delete\"\n                  v-if=\"permission.dict_delete\"\n                  plain\n                  @click=\"handleDelete\"\n                >删 除\n                </el-button>\n              </template>\n              <template slot-scope=\"scope\" slot=\"menu\">\n                <el-button\n                  type=\"text\"\n                  icon=\"el-icon-circle-plus-outline\"\n                  size=\"small\"\n                  @click.stop=\"handleAdd(scope.row,scope.index)\"\n                  v-if=\"userInfo.role_name.includes('admin')\"\n                >新增子项\n                </el-button>\n              </template>\n              <template slot-scope=\"{row}\" slot=\"isSealed\">\n                <el-tag>{{row.isSealed===0?'否':'是'}}</el-tag>\n              </template>\n            </avue-crud>\n          </div>\n        </el-card>\n      </basic-container>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n  import {\n    getParentList,\n    getChildList,\n    remove,\n    update,\n    add,\n    getDict,\n    getDictTree\n  } from \"@/api/system/dictbiz\";\n  import {optionParent, optionChild} from \"@/option/system/dictbiz\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        dictValue: '暂无',\n        parentId: -1,\n        formParent: {},\n        formChild: {},\n        selectionList: [],\n        query: {},\n        loading: true,\n        loadingChild: true,\n        pageParent: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        pageChild: {\n          pageSize: 10,\n          pageSizes: [10, 30, 50, 100, 200],\n          currentPage: 1,\n          total: 0\n        },\n        dataParent: [],\n        dataChild: [],\n        optionParent: optionParent,\n        optionChild: optionChild,\n      };\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.dictbiz_add, false),\n          delBtn: this.vaildData(this.permission.dictbiz_delete, false),\n          editBtn: this.vaildData(this.permission.dictbiz_edit, false),\n          viewBtn: false,\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    mounted() {\n      this.initData();\n    },\n    methods: {\n      initData() {\n        getDictTree().then(res => {\n          const column = this.findObject(this.optionChild.column, \"parentId\");\n          column.dicData = res.data.data;\n        });\n      },\n      handleAdd(row) {\n        this.$refs.crudChild.value.parentId = row.id;\n        this.$refs.crudChild.option.column.filter(item => {\n          if (item.prop === \"parentId\") {\n            item.value = row.id;\n          }\n        });\n        this.$refs.crudChild.rowAdd();\n      },\n      rowSave(row, done, loading) {\n        const form = {\n          ...row,\n          dictKey: -1,\n        };\n        add(form).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadParent(this.pageParent);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleRowClick(row) {\n        this.query = {};\n        this.parentId = row.id;\n        this.dictValue = row.dictValue;\n        this.$refs.crudChild.value.code = row.code;\n        this.$refs.crudChild.value.parentId = row.id;\n        this.$refs.crudChild.option.column.filter(item => {\n          if (item.prop === \"code\") {\n            item.value = row.code;\n          }\n          if (item.prop === \"parentId\") {\n            item.value = row.id;\n          }\n        });\n        this.onLoadChild(this.pageChild);\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoadParent(this.pageParent);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.pageParent.currentPage = 1;\n        this.onLoadParent(this.pageParent, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadParent(this.pageParent);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formParent.id).then(res => {\n            this.formParent = res.data.data;\n          });\n        }\n        done();\n      },\n      currentChange(currentPage) {\n        this.pageParent.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.pageParent.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoadParent(this.pageParent, this.query);\n      },\n      rowSaveChild(row, done, loading) {\n        add(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdateChild(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoadChild(this.pageChild);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDelChild(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchResetChild() {\n        this.query = {};\n        this.onLoadChild(this.pageChild);\n      },\n      searchChangeChild(params, done) {\n        this.query = params;\n        this.pageChild.currentPage = 1;\n        this.onLoadChild(this.pageChild, params);\n        done();\n      },\n      selectionChangeChild(list) {\n        this.selectionList = list;\n      },\n      selectionClearChild() {\n        this.selectionList = [];\n        this.$refs.crudChild.toggleSelection();\n      },\n      handleDeleteChild() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoadChild(this.pageChild);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crudChild.toggleSelection();\n          });\n      },\n      beforeOpenChild(done, type) {\n        if ([\"add\", \"edit\"].includes(type)) {\n          this.initData();\n        }\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDict(this.formChild.id).then(res => {\n            this.formChild = res.data.data;\n          });\n        }\n        done();\n      },\n      beforeCloseChild(done) {\n        this.$refs.crudChild.value.parentId = this.parentId;\n        this.$refs.crudChild.option.column.filter(item => {\n          if (item.prop === \"parentId\") {\n            item.value = this.parentId;\n          }\n        });\n        done();\n      },\n      currentChangeChild(currentPage) {\n        this.pageChild.currentPage = currentPage;\n      },\n      sizeChangeChild(pageSize) {\n        this.pageChild.pageSize = pageSize;\n      },\n      refreshChangeChild() {\n        this.onLoadChild(this.pageChild, this.query);\n      },\n      onLoadParent(page, params = {}) {\n        this.loading = true;\n        getParentList(\n          page.currentPage,\n          page.pageSize,\n          Object.assign(params, this.query)\n        ).then(res => {\n          const data = res.data.data;\n          this.pageParent.total = data.total;\n          this.dataParent = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      },\n      onLoadChild(page, params = {}) {\n        this.loadingChild = true;\n        getChildList(\n          page.currentPage,\n          page.pageSize,\n          this.parentId,\n          Object.assign(params, this.query)\n        ).then(res => {\n          this.dataChild = res.data.data;\n          this.loadingChild = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n"]}]}