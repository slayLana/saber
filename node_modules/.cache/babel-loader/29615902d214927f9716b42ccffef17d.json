{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/system/tenantpackage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/system/tenantpackage.vue","mtime":1666151205542},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { getList, getDetail, add, update, remove } from \"@/api/system/tenantpackage\";\nimport { mapGetters } from \"vuex\";\nimport { getMenuTree } from \"@/api/system/menu\";\nexport default {\n  name: \"tenantPackage\",\n  data: function data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogClickModal: false,\n        dialogWidth: 600,\n        column: [{\n          label: \"产品包名\",\n          prop: \"packageName\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入产品包名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单列表\",\n          prop: \"menuId\",\n          span: 24,\n          type: \"tree\",\n          dicData: [],\n          hide: true,\n          multiple: true,\n          props: {\n            label: \"title\"\n          },\n          rules: [{\n            required: true,\n            message: \"请选择菜单\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"备注\",\n          prop: \"remark\",\n          span: 24\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: true,\n        viewBtn: false,\n        delBtn: true,\n        editBtn: true\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      getMenuTree().then(function (res) {\n        var column = _this.findObject(_this.option.column, \"menuId\");\n\n        column.dicData = res.data.data;\n      });\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n\n      row.menuId = row.menuId.join(\",\");\n      add(row).then(function () {\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        loading();\n        window.console.log(error);\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n\n      update(row).then(function () {\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        loading();\n        window.console.log(error);\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this5.ids);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this5.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this6 = this;\n\n      if ([\"add\", \"edit\"].includes(type)) {\n        this.initData();\n      }\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          _this6.form = res.data.data;\n        });\n      }\n\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this7 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this7.page.total = data.total;\n        _this7.data = data.records;\n        _this7.loading = false;\n\n        _this7.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":"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","names":["name","data","form","query","loading","page","pageSize","currentPage","total","selectionList","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","viewBtn","selection","dialogClickModal","dialogWidth","column","label","prop","search","span","rules","required","message","trigger","type","dicData","hide","multiple","props","computed","mapGetters","permissionList","addBtn","delBtn","editBtn","ids","methods","initData","getMenuTree","rowSave","row","done","add","window","rowUpdate","update","rowDel","confirmButtonText","cancelButtonText","then","handleDelete","beforeOpen","getDetail","searchReset","searchChange","params","selectionChange","list","selectionClear","currentChange","sizeChange","refreshChange","onLoad","getList"],"sourceRoot":"src/views/system","sources":["tenantpackage.vue"],"sourcesContent":["<template>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page.sync=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n    </avue-crud>\n</template>\n\n<script>\nimport {getList, getDetail, add, update, remove} from \"@/api/system/tenantpackage\";\nimport {mapGetters} from \"vuex\";\nimport {getMenuTree} from \"@/api/system/menu\";\n\nexport default {\n  name: \"tenantPackage\",\n  data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogClickModal: false,\n        dialogWidth: 600,\n        column: [\n          {\n            label: \"产品包名\",\n            prop: \"packageName\",\n            search: true,\n            span: 24,\n            rules: [{\n              required: true,\n              message: \"请输入产品包名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"菜单列表\",\n            prop: \"menuId\",\n            span: 24,\n            type: \"tree\",\n            dicData: [],\n            hide: true,\n            multiple: true,\n            props: {\n              label: \"title\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择菜单\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"备注\",\n            prop: \"remark\",\n            span: 24\n          },\n        ]\n      },\n      data: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: true,\n        viewBtn: false,\n        delBtn: true,\n        editBtn: true\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    initData() {\n      getMenuTree().then(res => {\n        const column = this.findObject(this.option.column, \"menuId\");\n        column.dicData = res.data.data;\n      });\n    },\n    rowSave(row, done, loading) {\n      row.menuId = row.menuId.join(\",\");\n      add(row).then(() => {\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        loading();\n        window.console.log(error);\n      });\n    },\n    rowUpdate(row, index, done, loading) {\n      update(row).then(() => {\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        loading();\n        window.console.log(error);\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    beforeOpen(done, type) {\n      if ([\"add\", \"edit\"].includes(type)) {\n        this.initData();\n      }\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(res => {\n          this.form = res.data.data;\n        });\n      }\n      done();\n    },\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}