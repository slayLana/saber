{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/eslint-loader/index.js??ref--13-0!/Users/jiang/WorkSpace/code/bladex/saber/src/store/modules/logs.js","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/store/modules/logs.js","mtime":1666151205530},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/eslint-loader/index.js","mtime":1666157452476}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport { setStore, getStore } from '@/util/store';\nimport { dateFormat } from '@/util/date';\nimport { sendLogs } from '@/api/user';\nvar logs = {\n  state: {\n    logsList: getStore({\n      name: 'logsList'\n    }) || []\n  },\n  actions: {\n    SendLogs: function SendLogs(_ref) {\n      var state = _ref.state,\n          commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        sendLogs(state.logsList).then(function () {\n          commit('CLEAR_LOGS');\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    }\n  },\n  mutations: {\n    ADD_LOGS: function ADD_LOGS(state, _ref2) {\n      var type = _ref2.type,\n          message = _ref2.message,\n          stack = _ref2.stack,\n          info = _ref2.info;\n      state.logsList.push(Object.assign({\n        url: window.location.href,\n        time: dateFormat(new Date())\n      }, {\n        type: type,\n        message: message,\n        stack: stack,\n        info: info.toString()\n      }));\n      setStore({\n        name: 'logsList',\n        content: state.logsList\n      });\n    },\n    CLEAR_LOGS: function CLEAR_LOGS(state) {\n      state.logsList = [];\n      setStore({\n        name: 'logsList',\n        content: state.logsList\n      });\n    }\n  }\n};\nexport default logs;",{"version":3,"names":["setStore","getStore","dateFormat","sendLogs","logs","state","logsList","name","actions","SendLogs","commit","Promise","resolve","reject","then","catch","error","mutations","ADD_LOGS","type","message","stack","info","push","Object","assign","url","window","location","href","time","Date","toString","content","CLEAR_LOGS"],"sources":["/Users/jiang/WorkSpace/code/bladex/saber/src/store/modules/logs.js"],"sourcesContent":["import {setStore, getStore} from '@/util/store'\nimport {dateFormat} from '@/util/date'\nimport {sendLogs} from '@/api/user'\n\nconst logs = {\n  state: {\n    logsList: getStore({name: 'logsList'}) || [],\n  },\n  actions: {\n    SendLogs({state, commit}) {\n      return new Promise((resolve, reject) => {\n        sendLogs(state.logsList).then(() => {\n          commit('CLEAR_LOGS');\n          resolve();\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n  },\n  mutations: {\n    ADD_LOGS: (state, {type, message, stack, info}) => {\n      state.logsList.push(Object.assign({\n        url: window.location.href,\n        time: dateFormat(new Date())\n      }, {\n        type,\n        message,\n        stack,\n        info: info.toString()\n      }))\n      setStore({name: 'logsList', content: state.logsList})\n    },\n    CLEAR_LOGS: (state) => {\n      state.logsList = [];\n      setStore({name: 'logsList', content: state.logsList})\n    }\n  }\n\n};\n\nexport default logs;\n"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,QAAlB,QAAiC,cAAjC;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AAEA,IAAMC,IAAI,GAAG;EACXC,KAAK,EAAE;IACLC,QAAQ,EAAEL,QAAQ,CAAC;MAACM,IAAI,EAAE;IAAP,CAAD,CAAR,IAAgC;EADrC,CADI;EAIXC,OAAO,EAAE;IACPC,QADO,0BACmB;MAAA,IAAhBJ,KAAgB,QAAhBA,KAAgB;MAAA,IAATK,MAAS,QAATA,MAAS;MACxB,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;QACtCV,QAAQ,CAACE,KAAK,CAACC,QAAP,CAAR,CAAyBQ,IAAzB,CAA8B,YAAM;UAClCJ,MAAM,CAAC,YAAD,CAAN;UACAE,OAAO;QACR,CAHD,EAGGG,KAHH,CAGS,UAAAC,KAAK,EAAI;UAChBH,MAAM,CAACG,KAAD,CAAN;QACD,CALD;MAMD,CAPM,CAAP;IAQD;EAVM,CAJE;EAgBXC,SAAS,EAAE;IACTC,QAAQ,EAAE,kBAACb,KAAD,SAAyC;MAAA,IAAhCc,IAAgC,SAAhCA,IAAgC;MAAA,IAA1BC,OAA0B,SAA1BA,OAA0B;MAAA,IAAjBC,KAAiB,SAAjBA,KAAiB;MAAA,IAAVC,IAAU,SAAVA,IAAU;MACjDjB,KAAK,CAACC,QAAN,CAAeiB,IAAf,CAAoBC,MAAM,CAACC,MAAP,CAAc;QAChCC,GAAG,EAAEC,MAAM,CAACC,QAAP,CAAgBC,IADW;QAEhCC,IAAI,EAAE5B,UAAU,CAAC,IAAI6B,IAAJ,EAAD;MAFgB,CAAd,EAGjB;QACDZ,IAAI,EAAJA,IADC;QAEDC,OAAO,EAAPA,OAFC;QAGDC,KAAK,EAALA,KAHC;QAIDC,IAAI,EAAEA,IAAI,CAACU,QAAL;MAJL,CAHiB,CAApB;MASAhC,QAAQ,CAAC;QAACO,IAAI,EAAE,UAAP;QAAmB0B,OAAO,EAAE5B,KAAK,CAACC;MAAlC,CAAD,CAAR;IACD,CAZQ;IAaT4B,UAAU,EAAE,oBAAC7B,KAAD,EAAW;MACrBA,KAAK,CAACC,QAAN,GAAiB,EAAjB;MACAN,QAAQ,CAAC;QAACO,IAAI,EAAE,UAAP;QAAmB0B,OAAO,EAAE5B,KAAK,CAACC;MAAlC,CAAD,CAAR;IACD;EAhBQ;AAhBA,CAAb;AAqCA,eAAeF,IAAf"}]}