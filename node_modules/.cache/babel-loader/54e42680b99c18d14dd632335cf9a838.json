{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/page/index/top/top-search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/page/index/top/top-search.vue","mtime":1666151205527},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport config from \"../sidebar/config.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      config: config,\n      value: \"\",\n      menuList: []\n    };\n  },\n  created: function created() {\n    this.getMenuList();\n  },\n  watch: {\n    menu: function menu() {\n      this.getMenuList();\n    }\n  },\n  computed: _objectSpread({\n    labelKey: function labelKey() {\n      return this.website.menu.props.label || this.config.propsDefault.label;\n    },\n    pathKey: function pathKey() {\n      return this.website.menu.props.path || this.config.propsDefault.path;\n    },\n    iconKey: function iconKey() {\n      return this.website.menu.props.icon || this.config.propsDefault.icon;\n    },\n    childrenKey: function childrenKey() {\n      return this.website.menu.props.children || this.config.propsDefault.children;\n    }\n  }, mapGetters([\"menu\", \"website\"])),\n  methods: {\n    getMenuList: function getMenuList() {\n      var _this = this;\n\n      var findMenu = function findMenu(list) {\n        for (var i = 0; i < list.length; i++) {\n          var ele = Object.assign({}, list[i]);\n\n          if (_this.validatenull(ele[_this.childrenKey])) {\n            _this.menuList.push(ele);\n          } else {\n            findMenu(ele[_this.childrenKey]);\n          }\n        }\n      };\n\n      this.menuList = [];\n      findMenu(this.menu);\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var restaurants = this.menuList;\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants; // 调用 callback 返回建议列表的数据\n\n      cb(results);\n    },\n    createFilter: function createFilter(queryString) {\n      return function (restaurant) {\n        return restaurant.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect: function handleSelect(item) {\n      this.value = \"\";\n      this.$router.push({\n        path: this.$router.$avueRouter.getPath({\n          name: item[this.labelKey],\n          src: item[this.pathKey]\n        }, item.meta),\n        query: item.query\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;AAiBA;AACA;AAEA;EACAA,IADA,kBACA;IACA;MACAC,cADA;MAEAC,SAFA;MAGAC;IAHA;EAKA,CAPA;EAQAC,OARA,qBAQA;IACA;EACA,CAVA;EAYAC;IACAC,IADA,kBACA;MACA;IACA;EAHA,CAZA;EAiBAC;IACAC,QADA,sBACA;MACA;IACA,CAHA;IAIAC,OAJA,qBAIA;MACA;IACA,CANA;IAOAC,OAPA,qBAOA;MACA;IACA,CATA;IAUAC,WAVA,yBAUA;MACA,OACA,qEADA;IAGA;EAdA,GAeAC,+BAfA,CAjBA;EAkCAC;IACAC,WADA,yBACA;MAAA;;MACA;QACA;UACA;;UACA;YACA;UACA,CAFA,MAEA;YACAC;UACA;QACA;MACA,CATA;;MAUA;MACAA;IACA,CAdA;IAeAC,WAfA,uBAeAC,WAfA,EAeAC,EAfA,EAeA;MACA;MACA,4BACAC,kDADA,GAEAA,WAFA,CAFA,CAKA;;MACAD;IACA,CAtBA;IAuBAE,YAvBA,wBAuBAH,WAvBA,EAuBA;MACA;QACA,OACAI,qEACA,CAFA;MAIA,CALA;IAMA,CA9BA;IA+BAC,YA/BA,wBA+BAC,IA/BA,EA+BA;MACA;MACA;QACAC;UACAC,yBADA;UAEAC;QAFA,GAGAH,SAHA,CADA;QAKAI;MALA;IAOA;EAxCA;AAlCA","names":["data","config","value","menuList","created","watch","menu","computed","labelKey","pathKey","iconKey","childrenKey","mapGetters","methods","getMenuList","findMenu","querySearch","queryString","cb","restaurants","createFilter","restaurant","handleSelect","item","path","name","src","query"],"sourceRoot":"src/page/index/top","sources":["top-search.vue"],"sourcesContent":["<template>\n  <el-autocomplete class=\"top-search\"\n                   popper-class=\"my-autocomplete\"\n                   v-model=\"value\"\n                   :fetch-suggestions=\"querySearch\"\n                   :placeholder=\"$t('search')\"\n                   @select=\"handleSelect\">\n\n    <template slot-scope=\"{ item }\">\n      <i :class=\"[item[iconKey],'icon']\"></i>\n      <div class=\"name\">{{ item[labelKey] }}</div>\n      <div class=\"addr\">{{ item[pathKey] }}</div>\n    </template>\n  </el-autocomplete>\n</template>\n\n<script>\n  import config from \"../sidebar/config.js\";\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    data() {\n      return {\n        config: config,\n        value: \"\",\n        menuList: []\n      };\n    },\n    created() {\n      this.getMenuList();\n    },\n\n    watch: {\n      menu() {\n        this.getMenuList();\n      }\n    },\n    computed: {\n      labelKey() {\n        return this.website.menu.props.label || this.config.propsDefault.label;\n      },\n      pathKey() {\n        return this.website.menu.props.path || this.config.propsDefault.path;\n      },\n      iconKey() {\n        return this.website.menu.props.icon || this.config.propsDefault.icon;\n      },\n      childrenKey() {\n        return (\n          this.website.menu.props.children || this.config.propsDefault.children\n        );\n      },\n      ...mapGetters([\"menu\", \"website\"])\n    },\n    methods: {\n      getMenuList() {\n        const findMenu = list => {\n          for (let i = 0; i < list.length; i++) {\n            const ele = Object.assign({}, list[i]);\n            if (this.validatenull(ele[this.childrenKey])) {\n              this.menuList.push(ele);\n            } else {\n              findMenu(ele[this.childrenKey]);\n            }\n          }\n        };\n        this.menuList = [];\n        findMenu(this.menu);\n      },\n      querySearch(queryString, cb) {\n        var restaurants = this.menuList;\n        var results = queryString\n          ? restaurants.filter(this.createFilter(queryString))\n          : restaurants;\n        // 调用 callback 返回建议列表的数据\n        cb(results);\n      },\n      createFilter(queryString) {\n        return restaurant => {\n          return (\n            restaurant.name.toLowerCase().indexOf(queryString.toLowerCase()) ===\n            0\n          );\n        };\n      },\n      handleSelect(item) {\n        this.value = \"\";\n        this.$router.push({\n          path: this.$router.$avueRouter.getPath({\n            name: item[this.labelKey],\n            src: item[this.pathKey]\n          }, item.meta),\n          query: item.query\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\">\n  .my-autocomplete {\n    li {\n      line-height: normal;\n      padding: 7px;\n\n      .icon {\n        margin-right: 5px;\n        display: inline-block;\n        vertical-align: middle;\n      }\n\n      .name {\n        display: inline-block;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        vertical-align: middle;\n      }\n\n      .addr {\n        padding-top: 5px;\n        width: 100%;\n        font-size: 12px;\n        color: #b4b4b4;\n      }\n\n      .highlighted .addr {\n        color: #ddd;\n      }\n    }\n  }\n</style>\n"]}]}