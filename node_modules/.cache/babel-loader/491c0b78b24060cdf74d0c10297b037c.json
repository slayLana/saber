{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/page/index/top/top-lang.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/page/index/top/top-lang.vue","mtime":1666151205526},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"top-lang\",\n  data: function data() {\n    return {};\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  computed: _objectSpread({}, mapGetters([\"language\", \"tag\"])),\n  props: [],\n  methods: {\n    handleSetLanguage: function handleSetLanguage(lang) {\n      this.$i18n.locale = lang;\n      this.$store.commit(\"SET_LANGUAGE\", lang);\n      var tag = this.tag;\n      var title = this.$router.$avueRouter.generateTitle(tag.label, (tag.meta || {}).i18n); //根据当前的标签也获取label的值动态设置浏览器标题\n\n      this.$router.$avueRouter.setTitle(title);\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;AAgBA;AAEA;EACAA,gBADA;EAEAC,IAFA,kBAEA;IACA;EACA,CAJA;EAKAC,OALA,qBAKA,CACA,CANA;EAOAC,OAPA,qBAOA,CACA,CARA;EASAC,4BACAC,+BADA,CATA;EAYAC,SAZA;EAaAC;IACAC,iBADA,6BACAC,IADA,EACA;MACA;MACA;MACA;MACA,mDACAC,SADA,EAEA,qBAFA,EAJA,CAQA;;MACA;IACA;EAXA;AAbA","names":["name","data","created","mounted","computed","mapGetters","props","methods","handleSetLanguage","lang","tag"],"sourceRoot":"src/page/index/top","sources":["top-lang.vue"],"sourcesContent":["<template>\n  <el-dropdown trigger=\"click\"\n               @command=\"handleSetLanguage\">\n    <i class=\"icon-zhongyingwen\"></i>\n    <el-dropdown-menu slot=\"dropdown\">\n      <el-dropdown-item :disabled=\"language==='zh'\"\n                        command=\"zh\">中文\n      </el-dropdown-item>\n      <el-dropdown-item :disabled=\"language==='en'\"\n                        command=\"en\">English\n      </el-dropdown-item>\n    </el-dropdown-menu>\n  </el-dropdown>\n</template>\n\n<script>\n  import {mapGetters} from \"vuex\";\n\n  export default {\n    name: \"top-lang\",\n    data() {\n      return {};\n    },\n    created() {\n    },\n    mounted() {\n    },\n    computed: {\n      ...mapGetters([\"language\", \"tag\"])\n    },\n    props: [],\n    methods: {\n      handleSetLanguage(lang) {\n        this.$i18n.locale = lang;\n        this.$store.commit(\"SET_LANGUAGE\", lang);\n        let tag = this.tag;\n        let title = this.$router.$avueRouter.generateTitle(\n          tag.label,\n          (tag.meta || {}).i18n\n        );\n        //根据当前的标签也获取label的值动态设置浏览器标题\n        this.$router.$avueRouter.setTitle(title);\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n"]}]}