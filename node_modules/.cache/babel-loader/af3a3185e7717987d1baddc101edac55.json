{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/eslint-loader/index.js??ref--13-0!/Users/jiang/WorkSpace/code/bladex/saber/src/util/validate.js","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/util/validate.js","mtime":1666151205536},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/eslint-loader/index.js","mtime":1666157452476}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n\n/**\n * Created by jiachenpan on 16/11/18.\n */\nexport function isvalidUsername(str) {\n  var valid_map = ['admin', 'editor'];\n  return valid_map.indexOf(str.trim()) >= 0;\n}\n/* 合法uri*/\n\nexport function validateURL(textval) {\n  var urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n  return urlregex.test(textval);\n}\n/**\n * 邮箱\n * @param {*} s\n */\n\nexport function isEmail(s) {\n  return /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(s);\n}\n/**\n * 手机号码\n * @param {*} s\n */\n\nexport function isMobile(s) {\n  return /^1[0-9]{10}$/.test(s);\n}\n/**\n * 电话号码\n * @param {*} s\n */\n\nexport function isPhone(s) {\n  return /^([0-9]{3,4}-)?[0-9]{7,8}$/.test(s);\n}\n/**\n * URL地址\n * @param {*} s\n */\n\nexport function isURL(s) {\n  return /^http[s]?:\\/\\/.*/.test(s);\n}\n/* 小写字母*/\n\nexport function validateLowerCase(str) {\n  var reg = /^[a-z]+$/;\n  return reg.test(str);\n}\n/* 大写字母*/\n\nexport function validateUpperCase(str) {\n  var reg = /^[A-Z]+$/;\n  return reg.test(str);\n}\n/* 大小写字母*/\n\nexport function validatAlphabets(str) {\n  var reg = /^[A-Za-z]+$/;\n  return reg.test(str);\n}\n/*验证pad还是pc*/\n\nexport var vaildatePc = function vaildatePc() {\n  var userAgentInfo = navigator.userAgent;\n  var Agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n  var flag = true;\n\n  for (var v = 0; v < Agents.length; v++) {\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\n      flag = false;\n      break;\n    }\n  }\n\n  return flag;\n};\n/**\n * validate email\n * @param email\n * @returns {boolean}\n */\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n/**\n * 判断身份证号码\n */\n\nexport function cardid(code) {\n  var list = [];\n  var result = true;\n  var msg = '';\n  var city = {\n    11: \"北京\",\n    12: \"天津\",\n    13: \"河北\",\n    14: \"山西\",\n    15: \"内蒙古\",\n    21: \"辽宁\",\n    22: \"吉林\",\n    23: \"黑龙江 \",\n    31: \"上海\",\n    32: \"江苏\",\n    33: \"浙江\",\n    34: \"安徽\",\n    35: \"福建\",\n    36: \"江西\",\n    37: \"山东\",\n    41: \"河南\",\n    42: \"湖北 \",\n    43: \"湖南\",\n    44: \"广东\",\n    45: \"广西\",\n    46: \"海南\",\n    50: \"重庆\",\n    51: \"四川\",\n    52: \"贵州\",\n    53: \"云南\",\n    54: \"西藏 \",\n    61: \"陕西\",\n    62: \"甘肃\",\n    63: \"青海\",\n    64: \"宁夏\",\n    65: \"新疆\",\n    71: \"台湾\",\n    81: \"香港\",\n    82: \"澳门\",\n    91: \"国外 \"\n  };\n\n  if (!validatenull(code)) {\n    if (code.length == 18) {\n      if (!code || !/(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(code)) {\n        msg = \"证件号码格式错误\";\n      } else if (!city[code.substr(0, 2)]) {\n        msg = \"地址编码错误\";\n      } else {\n        //18位身份证需要验证最后一位校验位\n        code = code.split(''); //∑(ai×Wi)(mod 11)\n        //加权因子\n\n        var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]; //校验位\n\n        var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2, 'x'];\n        var sum = 0;\n        var ai = 0;\n        var wi = 0;\n\n        for (var i = 0; i < 17; i++) {\n          ai = code[i];\n          wi = factor[i];\n          sum += ai * wi;\n        }\n\n        if (parity[sum % 11] != code[17]) {\n          msg = \"证件号码校验位错误\";\n        } else {\n          result = false;\n        }\n      }\n    } else {\n      msg = \"证件号码长度不为18位\";\n    }\n  } else {\n    msg = \"证件号码不能为空\";\n  }\n\n  list.push(result);\n  list.push(msg);\n  return list;\n}\n/**\n * 判断手机号码是否正确\n */\n\nexport function isvalidatemobile(phone) {\n  var list = [];\n  var result = true;\n  var msg = '';\n  var isPhone = /^0\\d{2,3}-?\\d{7,8}$/; //增加134 减少|1349[0-9]{7}，增加181,增加145，增加17[678]  \n\n  if (!validatenull(phone)) {\n    if (phone.length == 11) {\n      if (isPhone.test(phone)) {\n        msg = '手机号码格式不正确';\n      } else {\n        result = false;\n      }\n    } else {\n      msg = '手机号码长度不为11位';\n    }\n  } else {\n    msg = '手机号码不能为空';\n  }\n\n  list.push(result);\n  list.push(msg);\n  return list;\n}\n/**\n * 判断姓名是否正确\n */\n\nexport function validatename(name) {\n  var regName = /^[\\u4e00-\\u9fa5]{2,4}$/;\n  if (!regName.test(name)) return false;\n  return true;\n}\n/**\n * 判断是否为整数\n */\n\nexport function validatenum(num, type) {\n  var regName = /[^\\d.]/g;\n\n  if (type == 1) {\n    if (!regName.test(num)) return false;\n  } else if (type == 2) {\n    regName = /[^\\d]/g;\n    if (!regName.test(num)) return false;\n  }\n\n  return true;\n}\n/**\n * 判断是否为小数\n */\n\nexport function validatenumord(num, type) {\n  var regName = /[^\\d.]/g;\n\n  if (type == 1) {\n    if (!regName.test(num)) return false;\n  } else if (type == 2) {\n    regName = /[^\\d.]/g;\n    if (!regName.test(num)) return false;\n  }\n\n  return true;\n}\n/**\n * 判断是否为空\n */\n\nexport function validatenull(val) {\n  if (typeof val == 'boolean') {\n    return false;\n  }\n\n  if (typeof val == 'number') {\n    return false;\n  }\n\n  if (val instanceof Array) {\n    if (val.length == 0) return true;\n  } else if (val instanceof Object) {\n    if (JSON.stringify(val) === '{}') return true;\n  } else {\n    if (val == 'null' || val == null || val == 'undefined' || val == undefined || val == '') return true;\n    return false;\n  }\n\n  return false;\n}",{"version":3,"names":["isvalidUsername","str","valid_map","indexOf","trim","validateURL","textval","urlregex","test","isEmail","s","isMobile","isPhone","isURL","validateLowerCase","reg","validateUpperCase","validatAlphabets","vaildatePc","userAgentInfo","navigator","userAgent","Agents","flag","v","length","validateEmail","email","re","cardid","code","list","result","msg","city","validatenull","substr","split","factor","parity","sum","ai","wi","i","push","isvalidatemobile","phone","validatename","name","regName","validatenum","num","type","validatenumord","val","Array","Object","JSON","stringify","undefined"],"sources":["/Users/jiang/WorkSpace/code/bladex/saber/src/util/validate.js"],"sourcesContent":["/**\n * Created by jiachenpan on 16/11/18.\n */\n\nexport function isvalidUsername(str) {\n    const valid_map = ['admin', 'editor']\n    return valid_map.indexOf(str.trim()) >= 0\n}\n\n/* 合法uri*/\nexport function validateURL(textval) {\n    const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/\n    return urlregex.test(textval)\n}\n/**\n * 邮箱\n * @param {*} s\n */\nexport function isEmail(s) {\n    return /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(s)\n}\n\n/**\n * 手机号码\n * @param {*} s\n */\nexport function isMobile(s) {\n    return /^1[0-9]{10}$/.test(s)\n}\n\n/**\n * 电话号码\n * @param {*} s\n */\nexport function isPhone(s) {\n    return /^([0-9]{3,4}-)?[0-9]{7,8}$/.test(s)\n}\n\n/**\n * URL地址\n * @param {*} s\n */\nexport function isURL(s) {\n    return /^http[s]?:\\/\\/.*/.test(s)\n}\n\n/* 小写字母*/\nexport function validateLowerCase(str) {\n    const reg = /^[a-z]+$/\n    return reg.test(str)\n}\n\n/* 大写字母*/\nexport function validateUpperCase(str) {\n    const reg = /^[A-Z]+$/\n    return reg.test(str)\n}\n\n/* 大小写字母*/\nexport function validatAlphabets(str) {\n    const reg = /^[A-Za-z]+$/\n    return reg.test(str)\n}\n/*验证pad还是pc*/\nexport const vaildatePc = function() {\n        const userAgentInfo = navigator.userAgent;\n        const Agents = [\"Android\", \"iPhone\",\n            \"SymbianOS\", \"Windows Phone\",\n            \"iPad\", \"iPod\"\n        ];\n        let flag = true;\n        for (var v = 0; v < Agents.length; v++) {\n            if (userAgentInfo.indexOf(Agents[v]) > 0) {\n                flag = false;\n                break;\n            }\n        }\n        return flag;\n    }\n    /**\n     * validate email\n     * @param email\n     * @returns {boolean}\n     */\nexport function validateEmail(email) {\n    const re = /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return re.test(email)\n}\n\n/**\n * 判断身份证号码\n */\nexport function cardid(code) {\n    let list = [];\n    let result = true;\n    let msg = '';\n    var city = {\n        11: \"北京\",\n        12: \"天津\",\n        13: \"河北\",\n        14: \"山西\",\n        15: \"内蒙古\",\n        21: \"辽宁\",\n        22: \"吉林\",\n        23: \"黑龙江 \",\n        31: \"上海\",\n        32: \"江苏\",\n        33: \"浙江\",\n        34: \"安徽\",\n        35: \"福建\",\n        36: \"江西\",\n        37: \"山东\",\n        41: \"河南\",\n        42: \"湖北 \",\n        43: \"湖南\",\n        44: \"广东\",\n        45: \"广西\",\n        46: \"海南\",\n        50: \"重庆\",\n        51: \"四川\",\n        52: \"贵州\",\n        53: \"云南\",\n        54: \"西藏 \",\n        61: \"陕西\",\n        62: \"甘肃\",\n        63: \"青海\",\n        64: \"宁夏\",\n        65: \"新疆\",\n        71: \"台湾\",\n        81: \"香港\",\n        82: \"澳门\",\n        91: \"国外 \"\n    };\n    if (!validatenull(code)) {\n        if (code.length == 18) {\n            if (!code || !/(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(code)) {\n                msg = \"证件号码格式错误\";\n            } else if (!city[code.substr(0, 2)]) {\n                msg = \"地址编码错误\";\n            } else {\n                //18位身份证需要验证最后一位校验位\n                code = code.split('');\n                //∑(ai×Wi)(mod 11)\n                //加权因子\n                var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n                //校验位\n                var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2, 'x'];\n                var sum = 0;\n                var ai = 0;\n                var wi = 0;\n                for (var i = 0; i < 17; i++) {\n                    ai = code[i];\n                    wi = factor[i];\n                    sum += ai * wi;\n                }\n                if (parity[sum % 11] != code[17]) {\n                    msg = \"证件号码校验位错误\";\n                } else {\n                    result = false;\n                }\n\n            }\n        } else {\n            msg = \"证件号码长度不为18位\";\n        }\n\n    } else {\n        msg = \"证件号码不能为空\";\n    }\n    list.push(result);\n    list.push(msg);\n    return list;\n}\n/**\n * 判断手机号码是否正确\n */\nexport function isvalidatemobile(phone) {\n    let list = [];\n    let result = true;\n    let msg = '';\n    var isPhone = /^0\\d{2,3}-?\\d{7,8}$/;\n    //增加134 减少|1349[0-9]{7}，增加181,增加145，增加17[678]  \n    if (!validatenull(phone)) {\n        if (phone.length == 11) {\n            if (isPhone.test(phone)) {\n                msg = '手机号码格式不正确';\n            } else {\n                result = false;\n            }\n        } else {\n            msg = '手机号码长度不为11位';\n        }\n    } else {\n        msg = '手机号码不能为空';\n    }\n    list.push(result);\n    list.push(msg);\n    return list;\n}\n/**\n * 判断姓名是否正确\n */\nexport function validatename(name) {\n    var regName = /^[\\u4e00-\\u9fa5]{2,4}$/;\n    if (!regName.test(name)) return false;\n    return true;\n}\n/**\n * 判断是否为整数\n */\nexport function validatenum(num, type) {\n    let regName = /[^\\d.]/g;\n    if (type == 1) {\n        if (!regName.test(num)) return false;\n    } else if (type == 2) {\n        regName = /[^\\d]/g;\n        if (!regName.test(num)) return false;\n    }\n    return true;\n}\n/**\n * 判断是否为小数\n */\nexport function validatenumord(num, type) {\n    let regName = /[^\\d.]/g;\n    if (type == 1) {\n        if (!regName.test(num)) return false;\n    } else if (type == 2) {\n        regName = /[^\\d.]/g;\n        if (!regName.test(num)) return false;\n    }\n    return true;\n}\n/**\n * 判断是否为空\n */\nexport function validatenull(val) {\n    if (typeof val == 'boolean') {\n        return false;\n    }\n    if (typeof val == 'number') {\n        return false;\n    }\n    if (val instanceof Array) {\n        if (val.length == 0) return true;\n    } else if (val instanceof Object) {\n        if (JSON.stringify(val) === '{}') return true;\n    } else {\n        if (val == 'null' || val == null || val == 'undefined' || val == undefined || val == '') return true;\n        return false;\n    }\n    return false;\n}"],"mappings":"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"}]}