{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/flow/deploy.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/flow/deploy.vue","mtime":1666151205538},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import { deployUpload } from \"@/api/flow/flow\";\nimport { flowCategory } from \"@/util/flow\";\nexport default {\n  data: function data() {\n    return {\n      form: {\n        flowCategory: '',\n        tenantId: '',\n        flowFile: [],\n        file: {}\n      },\n      option: {\n        labelWidth: 120,\n        menuBtn: false,\n        column: [{\n          label: '流程类型',\n          prop: 'flowCategory',\n          type: 'select',\n          dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          row: true,\n          span: 12,\n          dataType: \"number\",\n          rules: [{\n            required: true,\n            message: '请选择流程类型',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"流程模式\",\n          prop: \"flowMode\",\n          type: \"radio\",\n          dicData: [{\n            label: \"通用流程\",\n            value: 1\n          }, {\n            label: \"定制流程\",\n            value: 2\n          }],\n          value: 1,\n          row: true,\n          span: 12,\n          rules: [{\n            required: true,\n            message: '请选择流程模式',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          multiple: true,\n          dicUrl: \"/api/blade-system/tenant/select\",\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          display: false,\n          row: true,\n          span: 12,\n          rules: [{\n            required: true,\n            message: '请选择所属租户',\n            trigger: 'blur'\n          }]\n        }, {\n          label: '附件上传',\n          prop: 'flowFile',\n          type: 'upload',\n          loadText: '附件上传中，请稍等',\n          span: 24,\n          propsHttp: {\n            res: 'data'\n          },\n          tip: '请上传 bpmn20.xml 标准格式文件',\n          action: '/api/blade-flow/manager/check-upload'\n        }]\n      }\n    };\n  },\n  watch: {\n    'form.flowMode': function formFlowMode() {\n      var _this = this;\n\n      this.$refs.form.option.column.filter(function (item) {\n        if (item.prop === \"tenantId\") {\n          item.display = _this.form.flowMode === 2;\n        }\n      });\n    }\n  },\n  methods: {\n    uploadBefore: function uploadBefore(file, done) {\n      this.$message.success('部署开始');\n      this.file = file;\n      done();\n    },\n    uploadAfter: function uploadAfter(res, done, loading) {\n      var _this2 = this;\n\n      if (!this.form.flowCategory) {\n        this.$message.warning('清先选择流程类型');\n        loading();\n        return false;\n      }\n\n      if (this.form.flowMode === 2 && !this.form.tenantId) {\n        this.$message.warning('清先选择对应租户');\n        loading();\n        return false;\n      }\n\n      if (res.success) {\n        deployUpload(flowCategory(this.form.flowCategory), this.form.tenantId ? this.form.tenantId.join(\",\") : \"\", [this.file]).then(function (res) {\n          var data = res.data;\n\n          if (data.success) {\n            done();\n          } else {\n            _this2.$message.error(data.msg);\n\n            loading();\n          }\n        });\n      } else {\n        this.$message.warning('请上传 bpmn20.xml 标准格式文件');\n        loading();\n        return false;\n      }\n    }\n  }\n};",{"version":3,"mappings":"AAOA;AACA;AAEA;EACAA,IADA,kBACA;IACA;MACAC;QACAC,gBADA;QAEAC,YAFA;QAGAC,YAHA;QAIAC;MAJA,CADA;MAOAC;QACAC,eADA;QAEAC,cAFA;QAGAC,SACA;UACAC,aADA;UAEAC,oBAFA;UAGAC,cAHA;UAIAC,qDAJA;UAKAC;YACAJ,kBADA;YAEAK;UAFA,CALA;UASAC,SATA;UAUAC,QAVA;UAWAC,kBAXA;UAYAC,QACA;YACAC,cADA;YAEAC,kBAFA;YAGAC;UAHA,CADA;QAZA,CADA,EAqBA;UACAZ,aADA;UAEAC,gBAFA;UAGAC,aAHA;UAIAW,UACA;YACAb,aADA;YAEAK;UAFA,CADA,EAKA;YACAL,aADA;YAEAK;UAFA,CALA,CAJA;UAcAA,QAdA;UAeAC,SAfA;UAgBAC,QAhBA;UAiBAE,QACA;YACAC,cADA;YAEAC,kBAFA;YAGAC;UAHA,CADA;QAjBA,CArBA,EA8CA;UACAZ,aADA;UAEAC,gBAFA;UAGAC,YAHA;UAIAY,cAJA;UAKAX,yCALA;UAMAC;YACAJ,mBADA;YAEAK;UAFA,CANA;UAUAU,cAVA;UAWAT,SAXA;UAYAC,QAZA;UAaAE,QACA;YACAC,cADA;YAEAC,kBAFA;YAGAC;UAHA,CADA;QAbA,CA9CA,EAmEA;UACAZ,aADA;UAEAC,gBAFA;UAGAC,cAHA;UAIAc,qBAJA;UAKAT,QALA;UAMAU;YACAC;UADA,CANA;UASAC,4BATA;UAUAC;QAVA,CAnEA;MAHA;IAPA;EA4FA,CA9FA;EA+FAC;IACA,eADA,0BACA;MAAA;;MACA;QACA;UACAC;QACA;MACA,CAJA;IAKA;EAPA,CA/FA;EAwGAC;IACAC,YADA,wBACA7B,IADA,EACA8B,IADA,EACA;MACA;MACA;MACAA;IACA,CALA;IAMAC,WANA,uBAMAR,GANA,EAMAO,IANA,EAMAE,OANA,EAMA;MAAA;;MACA;QACA;QACAA;QACA;MACA;;MACA;QACA;QACAA;QACA;MACA;;MACA;QACAC,aACApC,oCADA,EAEA,sDAFA,EAGA,WAHA,EAIAqC,IAJA,CAIA;UACA;;UACA;YACAJ;UACA,CAFA,MAEA;YACA;;YACAE;UACA;QACA,CAZA;MAaA,CAdA,MAcA;QACA;QACAA;QACA;MACA;IACA;EApCA;AAxGA","names":["data","form","flowCategory","tenantId","flowFile","file","option","labelWidth","menuBtn","column","label","prop","type","dicUrl","props","value","row","span","dataType","rules","required","message","trigger","dicData","multiple","display","loadText","propsHttp","res","tip","action","watch","item","methods","uploadBefore","done","uploadAfter","loading","deployUpload","then"],"sourceRoot":"src/views/flow","sources":["deploy.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-form ref=\"form\" :option=\"option\" v-model=\"form\" :upload-before=\"uploadBefore\" :upload-after=\"uploadAfter\"/>\n  </basic-container>\n</template>\n\n<script>\n  import {deployUpload} from \"@/api/flow/flow\";\n  import {flowCategory} from \"@/util/flow\";\n\n  export default {\n    data() {\n      return {\n        form: {\n          flowCategory: '',\n          tenantId: '',\n          flowFile: [],\n          file: {},\n        },\n        option: {\n          labelWidth: 120,\n          menuBtn: false,\n          column: [\n            {\n              label: '流程类型',\n              prop: 'flowCategory',\n              type: 'select',\n              dicUrl: `/api/blade-system/dict/dictionary?code=flow`,\n              props: {\n                label: \"dictValue\",\n                value: \"dictKey\"\n              },\n              row: true,\n              span: 12,\n              dataType: \"number\",\n              rules: [\n                {\n                  required: true,\n                  message: '请选择流程类型',\n                  trigger: 'blur'\n                }\n              ]\n            },\n            {\n              label: \"流程模式\",\n              prop: \"flowMode\",\n              type: \"radio\",\n              dicData: [\n                {\n                  label: \"通用流程\",\n                  value: 1\n                },\n                {\n                  label: \"定制流程\",\n                  value: 2\n                }\n              ],\n              value: 1,\n              row: true,\n              span: 12,\n              rules: [\n                {\n                  required: true,\n                  message: '请选择流程模式',\n                  trigger: 'blur'\n                }\n              ],\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantId\",\n              type: \"tree\",\n              multiple: true,\n              dicUrl: \"/api/blade-system/tenant/select\",\n              props: {\n                label: \"tenantName\",\n                value: \"tenantId\"\n              },\n              display: false,\n              row: true,\n              span: 12,\n              rules: [\n                {\n                  required: true,\n                  message: '请选择所属租户',\n                  trigger: 'blur'\n                }\n              ],\n            },\n            {\n              label: '附件上传',\n              prop: 'flowFile',\n              type: 'upload',\n              loadText: '附件上传中，请稍等',\n              span: 24,\n              propsHttp: {\n                res: 'data'\n              },\n              tip: '请上传 bpmn20.xml 标准格式文件',\n              action: '/api/blade-flow/manager/check-upload'\n            },\n          ]\n        }\n      }\n    },\n    watch: {\n      'form.flowMode'() {\n        this.$refs.form.option.column.filter(item => {\n          if (item.prop === \"tenantId\") {\n            item.display = this.form.flowMode === 2;\n          }\n        });\n      }\n    },\n    methods: {\n      uploadBefore(file, done) {\n        this.$message.success('部署开始');\n        this.file = file;\n        done()\n      },\n      uploadAfter(res, done, loading) {\n        if (!this.form.flowCategory) {\n          this.$message.warning('清先选择流程类型');\n          loading()\n          return false;\n        }\n        if (this.form.flowMode === 2 && !this.form.tenantId) {\n          this.$message.warning('清先选择对应租户');\n          loading();\n          return false;\n        }\n        if (res.success) {\n          deployUpload(\n            flowCategory(this.form.flowCategory),\n            (this.form.tenantId) ? this.form.tenantId.join(\",\") : \"\",\n            [this.file]\n          ).then(res => {\n            const data = res.data;\n            if (data.success) {\n              done()\n            } else {\n              this.$message.error(data.msg);\n              loading()\n            }\n          })\n        } else {\n          this.$message.warning('请上传 bpmn20.xml 标准格式文件');\n          loading()\n          return false;\n        }\n      },\n    }\n  }\n</script>\n"]}]}