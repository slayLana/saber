{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/page/index/top/top-theme.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/page/index/top/top-theme.vue","mtime":1666151205527},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { setTheme } from \"@/util/util\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      box: false,\n      text: \"\",\n      list: [{\n        name: \"默认主题\",\n        value: \"default\"\n      }, {\n        name: \"白色主题\",\n        value: \"theme-white\"\n      }, {\n        name: \"黑色主题\",\n        value: \"theme-dark\"\n      }, {\n        name: \"炫彩主题\",\n        value: \"theme-star\"\n      }, {\n        name: \"智能主题\",\n        value: \"theme-bule\"\n      }, {\n        name: \"iview主题\",\n        value: \"theme-iview\"\n      }, {\n        name: \"vip主题\",\n        value: \"theme-vip\"\n      }, {\n        name: \"cool主题\",\n        value: \"theme-cool\"\n      }, {\n        name: \"d2主题\",\n        value: \"theme-d2\"\n      }, {\n        name: \"hey主题\",\n        value: \"theme-hey\"\n      }, {\n        name: \"lte主题\",\n        value: \"theme-lte\"\n      }]\n    };\n  },\n  watch: {\n    text: function text(val) {\n      this.$store.commit(\"SET_THEME_NAME\", val);\n      setTheme(val);\n    }\n  },\n  computed: _objectSpread({}, mapGetters([\"themeName\"])),\n  mounted: function mounted() {\n    this.text = this.themeName;\n\n    if (!this.text) {\n      this.text = \"\";\n    }\n  },\n  methods: {\n    open: function open() {\n      this.box = true;\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;AA4BA;AACA;AACA;EACAA,IADA,kBACA;IACA;MACAC,UADA;MAEAC,QAFA;MAGAC,OACA;QACAC,YADA;QAEAC;MAFA,CADA,EAKA;QACAD,YADA;QAEAC;MAFA,CALA,EASA;QACAD,YADA;QAEAC;MAFA,CATA,EAaA;QACAD,YADA;QAEAC;MAFA,CAbA,EAiBA;QACAD,YADA;QAEAC;MAFA,CAjBA,EAqBA;QACAD,eADA;QAEAC;MAFA,CArBA,EAyBA;QACAD,aADA;QAEAC;MAFA,CAzBA,EA6BA;QACAD,cADA;QAEAC;MAFA,CA7BA,EAiCA;QACAD,YADA;QAEAC;MAFA,CAjCA,EAqCA;QACAD,aADA;QAEAC;MAFA,CArCA,EAyCA;QACAD,aADA;QAEAC;MAFA,CAzCA;IAHA;EAkDA,CApDA;EAqDAC;IACAJ;MACA;MACAK;IACA;EAJA,CArDA;EA2DAC,4BACAC,yBADA,CA3DA;EA8DAC,OA9DA,qBA8DA;IACA;;IACA;MACA;IACA;EACA,CAnEA;EAoEAC;IACAC,IADA,kBACA;MACA;IACA;EAHA;AApEA","names":["data","box","text","list","name","value","watch","setTheme","computed","mapGetters","mounted","methods","open"],"sourceRoot":"src/page/index/top","sources":["top-theme.vue"],"sourcesContent":["<template>\n  <div>\n    <el-dialog title=\"选择\"\n               append-to-body\n               :visible.sync=\"box\"\n               width=\"50%\">\n      <el-radio-group v-model=\"text\"\n                      class=\"list\">\n        <el-row :span=\"24\">\n          <el-col v-for=\"(item,index) in list\"\n                  :key=\"index\"\n                  :md=\"4\"\n                  :xs=\"12\"\n                  :sm=\"4\">\n            <el-radio :label=\"item.value\">{{item.name}}</el-radio>\n          </el-col>\n        </el-row>\n      </el-radio-group>\n    </el-dialog>\n\n    <span>\n      <i class=\"icon-zhuti\"\n         @click=\"open\"></i>\n    </span>\n  </div>\n</template>\n\n<script>\nimport { setTheme } from \"@/util/util\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data () {\n    return {\n      box: false,\n      text: \"\",\n      list: [\n        {\n          name: \"默认主题\",\n          value: \"default\"\n        },\n        {\n          name: \"白色主题\",\n          value: \"theme-white\"\n        },\n        {\n          name: \"黑色主题\",\n          value: \"theme-dark\"\n        },\n        {\n          name: \"炫彩主题\",\n          value: \"theme-star\"\n        },\n        {\n          name: \"智能主题\",\n          value: \"theme-bule\"\n        },\n        {\n          name: \"iview主题\",\n          value: \"theme-iview\"\n        },\n        {\n          name: \"vip主题\",\n          value: \"theme-vip\"\n        },\n        {\n          name: \"cool主题\",\n          value: \"theme-cool\"\n        },\n        {\n          name: \"d2主题\",\n          value: \"theme-d2\"\n        },\n        {\n          name: \"hey主题\",\n          value: \"theme-hey\"\n        },\n        {\n          name: \"lte主题\",\n          value: \"theme-lte\"\n        }\n      ]\n    };\n  },\n  watch: {\n    text: function (val) {\n      this.$store.commit(\"SET_THEME_NAME\", val);\n      setTheme(val);\n    }\n  },\n  computed: {\n    ...mapGetters([\"themeName\"])\n  },\n  mounted () {\n    this.text = this.themeName;\n    if (!this.text) {\n      this.text = \"\";\n    }\n  },\n  methods: {\n    open () {\n      this.box = true;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.list {\n  width: 100%;\n}\n</style>\n\n"]}]}