{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/work/process/leave/handle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/work/process/leave/handle.vue","mtime":1666151205548},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import { historyFlowList, leaveDetail } from \"@/api/work/process\";\nimport { completeTask } from \"@/api/work/work\";\nexport default {\n  data: function data() {\n    return {\n      taskId: '',\n      businessId: '',\n      processInstanceId: '',\n      src: '',\n      flowList: [],\n      form: {\n        flow: {\n          assigneeName: ''\n        },\n        startTime: '',\n        endTime: '',\n        reason: '',\n        comment: ''\n      }\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(to, from, next) {\n    // 在当前路由改变，但是该组件被复用时调用\n    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候\n    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用\n    // 可以访问组件实例 `this`\n    if (to.fullPath !== from.fullPath) {\n      next();\n      this.init();\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.taskId = this.$route.params.taskId;\n      this.processInstanceId = this.$route.params.processInstanceId;\n      this.businessId = this.$route.params.businessId;\n      historyFlowList(this.processInstanceId).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this.flowList = data.data;\n        }\n      });\n      leaveDetail(this.businessId).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this.form = data.data;\n        }\n      });\n    },\n    handleAgree: function handleAgree() {\n      var _this2 = this;\n\n      if (!this.form.comment) {\n        this.$message.warning('请先填写批复意见');\n        return;\n      }\n\n      var params = {\n        taskId: this.taskId,\n        processInstanceId: this.processInstanceId,\n        flag: 'ok',\n        comment: this.form.comment\n      };\n      completeTask(params).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this2.$message.success(data.msg);\n\n          _this2.$router.$avueRouter.closeTag();\n\n          _this2.$router.push({\n            path: \"/work/start\"\n          });\n        } else {\n          _this2.$message.error(data.msg || '提交失败');\n        }\n      });\n    },\n    handleDisagree: function handleDisagree() {\n      var _this3 = this;\n\n      if (!this.form.comment) {\n        this.$message.warning('请先填写批复意见');\n        return;\n      }\n\n      var params = {\n        taskId: this.taskId,\n        processInstanceId: this.processInstanceId,\n        comment: this.form.comment\n      };\n      completeTask(params).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this3.$message.success(data.msg);\n\n          _this3.$router.$avueRouter.closeTag();\n\n          _this3.$router.push({\n            path: \"/work/start\"\n          });\n        } else {\n          _this3.$message.error(data.msg || '提交失败');\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.$router.$avueRouter.closeTag();\n      this.$router.push({\n        path: \"/work/start\"\n      });\n    }\n  }\n};",{"version":3,"mappings":"AAkEA;AACA;AAEA;EACAA,IADA,kBACA;IACA;MACAC,UADA;MAEAC,cAFA;MAGAC,qBAHA;MAIAC,OAJA;MAKAC,YALA;MAMAC;QACAC;UACAC;QADA,CADA;QAIAC,aAJA;QAKAC,WALA;QAMAC,UANA;QAOAC;MAPA;IANA;EAgBA,CAlBA;EAmBAC,OAnBA,qBAmBA;IACA;EACA,CArBA;EAsBAC,iBAtBA,6BAsBAC,EAtBA,EAsBAC,IAtBA,EAsBAC,IAtBA,EAsBA;IACA;IACA;IACA;IACA;IACA;MACAA;MACA;IACA;EACA,CA/BA;EAgCAC;IACAC,IADA,kBACA;MAAA;;MACA;MACA;MACA;MACAC;QACA;;QACA;UACA;QACA;MACA,CALA;MAMAC;QACA;;QACA;UACA;QACA;MACA,CALA;IAMA,CAjBA;IAkBAC,WAlBA,yBAkBA;MAAA;;MACA;QACA;QACA;MACA;;MACA;QACArB,mBADA;QAEAE,yCAFA;QAGAoB,UAHA;QAIAX;MAJA;MAMAY;QACA;;QACA;UACA;;UACA;;UACA;YAAAC;UAAA;QACA,CAJA,MAIA;UACA;QACA;MACA,CATA;IAUA,CAvCA;IAwCAC,cAxCA,4BAwCA;MAAA;;MACA;QACA;QACA;MACA;;MACA;QACAzB,mBADA;QAEAE,yCAFA;QAGAS;MAHA;MAKAY;QACA;;QACA;UACA;;UACA;;UACA;YAAAC;UAAA;QACA,CAJA,MAIA;UACA;QACA;MACA,CATA;IAUA,CA5DA;IA6DAE,YA7DA,0BA6DA;MACA;MACA;QAAAF;MAAA;IACA;EAhEA;AAhCA","names":["data","taskId","businessId","processInstanceId","src","flowList","form","flow","assigneeName","startTime","endTime","reason","comment","created","beforeRouteUpdate","to","from","next","methods","init","historyFlowList","leaveDetail","handleAgree","flag","completeTask","path","handleDisagree","handleCancel"],"sourceRoot":"src/views/work/process/leave","sources":["handle.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n      <el-row type=\"flex\" class=\"row-bg\" justify=\"end\">\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleAgree\">同意</el-button>\n          <el-button type=\"danger\" @click=\"handleDisagree\">驳回</el-button>\n          <el-button @click=\"handleCancel\">关闭</el-button>\n        </el-form-item>\n      </el-row>\n      <el-card shadow=\"hover\">\n        <div slot=\"header\">\n          <span>审批信息</span>\n        </div>\n        <el-form-item label=\"申请人\">\n          <el-input :disabled=\"true\" v-model=\"form.flow.assigneeName\"/>\n        </el-form-item>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"开始时间\">\n              <el-input :disabled=\"true\" v-model=\"form.startTime\"/>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"结束时间\">\n              <el-input :disabled=\"true\" v-model=\"form.endTime\"/>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-form-item label=\"请假理由\">\n          <el-input :disabled=\"true\" type=\"textarea\" v-model=\"form.reason\"/>\n        </el-form-item>\n        <el-form-item label=\"批复意见\">\n          <el-input type=\"textarea\" v-model=\"form.comment\"/>\n        </el-form-item>\n      </el-card>\n      <el-card shadow=\"hover\">\n        <div slot=\"header\">\n          <span>流程信息</span>\n        </div>\n        <el-row type=\"flex\" class=\"row-bg\">\n          <el-timeline>\n            <el-timeline-item :key=\"flow.id\" :timestamp=\"flow.createTime\" v-for=\"flow in flowList\" placement=\"top\">\n              <el-card shadow=\"hover\">\n                <p>{{flow.assigneeName}} 在 [{{flow.createTime}}] 开始处理 [{{flow.historyActivityName}}] 环节</p>\n                <p v-if=\"flow.historyActivityDurationTime!==''\">任务历时 [{{flow.historyActivityDurationTime}}]</p>\n                <p v-if=\"flow.comment!==''\">批复意见: [{{flow.comment}}]</p>\n                <p v-if=\"flow.endTime!==''\">结束时间: [{{flow.endTime}}]</p>\n              </el-card>\n            </el-timeline-item>\n          </el-timeline>\n        </el-row>\n      </el-card>\n      <el-card shadow=\"hover\">\n        <div slot=\"header\">\n          <span>流程跟踪</span>\n        </div>\n        <el-row class=\"row-bg\">\n          <flow-design :is-display=\"true\" :process-instance-id=\"processInstanceId\"></flow-design>\n        </el-row>\n      </el-card>\n    </el-form>\n  </basic-container>\n</template>\n\n<script>\n  import {historyFlowList, leaveDetail} from \"@/api/work/process\";\n  import {completeTask} from \"@/api/work/work\";\n\n  export default {\n    data() {\n      return {\n        taskId: '',\n        businessId: '',\n        processInstanceId: '',\n        src: '',\n        flowList: [],\n        form: {\n          flow: {\n            assigneeName: '',\n          },\n          startTime: '',\n          endTime: '',\n          reason: '',\n          comment: '',\n        },\n      }\n    },\n    created() {\n      this.init();\n    },\n    beforeRouteUpdate(to, from, next) {\n      // 在当前路由改变，但是该组件被复用时调用\n      // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候\n      // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用\n      // 可以访问组件实例 `this`\n      if (to.fullPath !== from.fullPath) {\n        next();\n        this.init();\n      }\n    },\n    methods: {\n      init() {\n        this.taskId = this.$route.params.taskId;\n        this.processInstanceId = this.$route.params.processInstanceId;\n        this.businessId = this.$route.params.businessId;\n        historyFlowList(this.processInstanceId).then(res => {\n          const data = res.data;\n          if (data.success) {\n            this.flowList = data.data;\n          }\n        })\n        leaveDetail(this.businessId).then(res => {\n          const data = res.data;\n          if (data.success) {\n            this.form = data.data;\n          }\n        })\n      },\n      handleAgree() {\n        if (!this.form.comment) {\n          this.$message.warning('请先填写批复意见');\n          return;\n        }\n        const params = {\n          taskId: this.taskId,\n          processInstanceId: this.processInstanceId,\n          flag: 'ok',\n          comment: this.form.comment,\n        };\n        completeTask(params).then(res => {\n          const data = res.data;\n          if (data.success) {\n            this.$message.success(data.msg);\n            this.$router.$avueRouter.closeTag();\n            this.$router.push({path: `/work/start`});\n          } else {\n            this.$message.error(data.msg || '提交失败');\n          }\n        })\n      },\n      handleDisagree() {\n        if (!this.form.comment) {\n          this.$message.warning('请先填写批复意见');\n          return;\n        }\n        const params = {\n          taskId: this.taskId,\n          processInstanceId: this.processInstanceId,\n          comment: this.form.comment,\n        };\n        completeTask(params).then(res => {\n          const data = res.data;\n          if (data.success) {\n            this.$message.success(data.msg);\n            this.$router.$avueRouter.closeTag();\n            this.$router.push({path: `/work/start`});\n          } else {\n            this.$message.error(data.msg || '提交失败');\n          }\n        })\n      },\n      handleCancel() {\n        this.$router.$avueRouter.closeTag();\n        this.$router.push({path: `/work/start`});\n      }\n    }\n  }\n</script>\n"]}]}