{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/eslint-loader/index.js??ref--13-0!/Users/jiang/WorkSpace/code/bladex/saber/src/api/flow/flow.js","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/api/flow/flow.js","mtime":1666151205513},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/eslint-loader/index.js","mtime":1666157452476}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport request from '@/router/axios';\nexport var modelList = function modelList(current, size, params) {\n  return request({\n    url: '/api/blade-flow/model/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var managerList = function managerList(current, size, params) {\n  return request({\n    url: '/api/blade-flow/manager/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var followList = function followList(current, size, params) {\n  return request({\n    url: '/api/blade-flow/follow/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var removeModel = function removeModel(ids) {\n  return request({\n    url: '/api/blade-flow/model/remove',\n    method: 'post',\n    params: {\n      ids: ids\n    }\n  });\n};\nexport var deployModel = function deployModel(params) {\n  return request({\n    url: '/api/blade-flow/model/deploy',\n    method: 'post',\n    params: params\n  });\n};\nexport var changeState = function changeState(params) {\n  return request({\n    url: '/api/blade-flow/manager/change-state',\n    method: 'post',\n    params: params\n  });\n};\nexport var deployUpload = function deployUpload(category, tenantIds, files) {\n  var formData = new FormData();\n  formData.append('category', category);\n  formData.append('tenantIds', tenantIds);\n  files.forEach(function (file) {\n    formData.append('files', file);\n  });\n  return request({\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    url: '/api/blade-flow/manager/deploy-upload',\n    method: 'post',\n    data: formData\n  });\n};\nexport var deleteDeployment = function deleteDeployment(deploymentIds) {\n  return request({\n    url: '/api/blade-flow/manager/delete-deployment',\n    method: 'post',\n    params: {\n      deploymentIds: deploymentIds\n    }\n  });\n};\nexport var deleteProcessInstance = function deleteProcessInstance(params) {\n  return request({\n    url: '/api/blade-flow/follow/delete-process-instance',\n    method: 'post',\n    params: params\n  });\n};\nexport var submitModel = function submitModel(data) {\n  return request({\n    url: '/api/blade-flow/model/submit',\n    method: 'post',\n    data: data\n  });\n};\nexport var detail = function detail(params) {\n  return request({\n    url: '/api/blade-flow/model/detail',\n    method: 'get',\n    params: params\n  });\n};\nexport var modelView = function modelView(params) {\n  return request({\n    url: '/api/blade-flow/process/model-view',\n    method: 'get',\n    params: params\n  });\n};",{"version":3,"names":["request","modelList","current","size","params","url","method","managerList","followList","removeModel","ids","deployModel","changeState","deployUpload","category","tenantIds","files","formData","FormData","append","forEach","file","headers","data","deleteDeployment","deploymentIds","deleteProcessInstance","submitModel","detail","modelView"],"sources":["/Users/jiang/WorkSpace/code/bladex/saber/src/api/flow/flow.js"],"sourcesContent":["import request from '@/router/axios';\n\nexport const modelList = (current, size, params) => {\n  return request({\n    url: '/api/blade-flow/model/list',\n    method: 'get',\n    params: {\n      ...params,\n      current,\n      size,\n    }\n  })\n}\n\nexport const managerList = (current, size, params) => {\n  return request({\n    url: '/api/blade-flow/manager/list',\n    method: 'get',\n    params: {\n      ...params,\n      current,\n      size,\n    }\n  })\n}\n\nexport const followList = (current, size, params) => {\n  return request({\n    url: '/api/blade-flow/follow/list',\n    method: 'get',\n    params: {\n      ...params,\n      current,\n      size,\n    }\n  })\n}\n\n\nexport const removeModel = (ids) => {\n  return request({\n    url: '/api/blade-flow/model/remove',\n    method: 'post',\n    params: {\n      ids,\n    }\n  })\n}\n\nexport const deployModel = (params) => {\n  return request({\n    url: '/api/blade-flow/model/deploy',\n    method: 'post',\n    params\n  })\n}\n\nexport const changeState = (params) => {\n  return request({\n    url: '/api/blade-flow/manager/change-state',\n    method: 'post',\n    params\n  })\n}\n\nexport const deployUpload = (category, tenantIds, files) => {\n  const formData = new FormData();\n  formData.append('category', category);\n  formData.append('tenantIds', tenantIds);\n  files.forEach(file => {\n    formData.append('files', file);\n  });\n  return request({\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    url: '/api/blade-flow/manager/deploy-upload',\n    method: 'post',\n    data: formData\n  })\n}\n\nexport const deleteDeployment = (deploymentIds) => {\n  return request({\n    url: '/api/blade-flow/manager/delete-deployment',\n    method: 'post',\n    params: {\n      deploymentIds,\n    }\n  })\n}\n\nexport const deleteProcessInstance = (params) => {\n  return request({\n    url: '/api/blade-flow/follow/delete-process-instance',\n    method: 'post',\n    params\n  })\n}\n\nexport const submitModel = (data) => {\n  return request({\n    url: '/api/blade-flow/model/submit',\n    method: 'post',\n    data\n  })\n}\n\nexport const detail = (params) => {\n  return request({\n    url: '/api/blade-flow/model/detail',\n    method: 'get',\n    params\n  })\n}\n\nexport const modelView = (params) => {\n  return request({\n    url: '/api/blade-flow/process/model-view',\n    method: 'get',\n    params\n  })\n}\n"],"mappings":"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"}]}