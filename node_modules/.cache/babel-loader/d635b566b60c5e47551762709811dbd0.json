{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/system/topmenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/system/topmenu.vue","mtime":1666151205543},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { getList, getDetail, add, update, remove, grant, grantTree, getTopTree } from \"@/api/system/topmenu\";\nimport { mapGetters } from \"vuex\";\nimport iconList from \"@/config/iconList\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      box: false,\n      query: {},\n      loading: true,\n      props: {\n        label: \"title\",\n        value: \"key\"\n      },\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      menuGrantList: [],\n      menuTreeObj: [],\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogWidth: 900,\n        dialogClickModal: false,\n        column: [{\n          label: \"菜单名\",\n          prop: \"name\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单图标\",\n          prop: \"source\",\n          type: \"icon\",\n          slot: true,\n          iconList: iconList,\n          rules: [{\n            required: true,\n            message: \"请输入菜单图标\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"菜单编号\",\n          prop: \"code\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单排序\",\n          prop: \"sort\",\n          type: \"number\",\n          slot: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单排序\",\n            trigger: \"blur\"\n          }]\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.topmenu_add, false),\n        viewBtn: this.vaildData(this.permission.topmenu_view, false),\n        delBtn: this.vaildData(this.permission.topmenu_delete, false),\n        editBtn: this.vaildData(this.permission.topmenu_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n    idsArray: function idsArray() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids;\n    }\n  }),\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      var menuList = this.$refs.treeMenu.getCheckedKeys();\n      grant(this.idsArray, menuList).then(function () {\n        _this.box = false;\n\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this.onLoad(_this.page);\n      });\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n\n      add(row).then(function () {\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n\n      update(row).then(function () {\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this5.ids);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this5.$refs.crud.toggleSelection();\n      });\n    },\n    handleMenuSetting: function handleMenuSetting() {\n      var _this6 = this;\n\n      if (this.selectionList.length !== 1) {\n        this.$message.warning(\"只能选择一条数据\");\n        return;\n      }\n\n      this.menuTreeObj = [];\n      grantTree().then(function (res) {\n        _this6.menuGrantList = res.data.data.menu;\n        getTopTree(_this6.ids).then(function (res) {\n          _this6.menuTreeObj = res.data.data.menu;\n          _this6.box = true;\n        });\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this7 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          _this7.form = res.data.data;\n        });\n      }\n\n      done();\n    },\n    sortChange: function sortChange(row) {\n      var _this8 = this;\n\n      update(row).then(function () {\n        _this8.onLoad(_this8.page);\n      }, function (error) {\n        window.console.log(error);\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this9 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this9.page.total = data.total;\n        _this9.data = data.records;\n        _this9.loading = false;\n\n        _this9.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":"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","names":["data","form","box","query","loading","props","label","value","page","pageSize","currentPage","total","selectionList","menuGrantList","menuTreeObj","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","viewBtn","selection","dialogWidth","dialogClickModal","column","prop","search","rules","required","message","trigger","type","slot","iconList","computed","mapGetters","permissionList","addBtn","delBtn","editBtn","ids","idsArray","methods","submit","grant","rowSave","row","done","add","window","rowUpdate","update","rowDel","confirmButtonText","cancelButtonText","then","handleDelete","handleMenuSetting","grantTree","getTopTree","beforeOpen","getDetail","sortChange","searchReset","searchChange","params","selectionChange","list","selectionClear","currentChange","sizeChange","refreshChange","onLoad","getList"],"sourceRoot":"src/views/system","sources":["topmenu.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page.sync=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   plain\n                   v-if=\"permission.topmenu_delete\"\n                   @click=\"handleDelete\">删 除\n        </el-button>\n        <el-button size=\"small\"\n                   icon=\"el-icon-delete\"\n                   @click=\"handleMenuSetting\"\n                   v-if=\"permission.topmenu_setting\"\n                   plain>菜单配置\n        </el-button>\n      </template>\n      <template slot-scope=\"{row}\" slot=\"source\">\n        <div style=\"text-align:center\">\n          <i :class=\"row.source\"></i>\n        </div>\n      </template>\n      <template slot=\"sort\" slot-scope=\"{row}\" >\n        <el-input-number v-model=\"row.sort\" @change=\"sortChange(row)\" :min=\"1\" :max=\"100\"></el-input-number>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"下级菜单配置\"\n               append-to-body\n               :visible.sync=\"box\"\n               width=\"345px\">\n\n      <el-tree :data=\"menuGrantList\"\n               show-checkbox\n               node-key=\"id\"\n               ref=\"treeMenu\"\n               :default-checked-keys=\"menuTreeObj\"\n               :props=\"props\">\n      </el-tree>\n\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"box = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"submit\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {getList, getDetail, add, update, remove, grant, grantTree, getTopTree} from \"@/api/system/topmenu\";\n  import {mapGetters} from \"vuex\";\n  import iconList from \"@/config/iconList\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        box: false,\n        query: {},\n        loading: true,\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        selectionList: [],\n        menuGrantList: [],\n        menuTreeObj: [],\n        option: {\n          height: 'auto',\n          calcHeight: 30,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          viewBtn: true,\n          selection: true,\n          dialogWidth: 900,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"菜单名\",\n              prop: \"name\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入菜单名\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"菜单图标\",\n              prop: \"source\",\n              type: \"icon\",\n              slot: true,\n              iconList: iconList,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入菜单图标\",\n                  trigger: \"click\"\n                }\n              ]\n            },\n            {\n              label: \"菜单编号\",\n              prop: \"code\",\n              search: true,\n              rules: [{\n                required: true,\n                message: \"请输入菜单编号\",\n                trigger: \"blur\"\n              }]\n            },\n            {\n              label: \"菜单排序\",\n              prop: \"sort\",\n              type: \"number\",\n              slot: true,\n              rules: [{\n                required: true,\n                message: \"请输入菜单排序\",\n                trigger: \"blur\"\n              }]\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.topmenu_add, false),\n          viewBtn: this.vaildData(this.permission.topmenu_view, false),\n          delBtn: this.vaildData(this.permission.topmenu_delete, false),\n          editBtn: this.vaildData(this.permission.topmenu_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      },\n      idsArray() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids;\n      }\n    },\n    methods: {\n      submit() {\n        const menuList = this.$refs.treeMenu.getCheckedKeys();\n        grant(this.idsArray, menuList).then(() => {\n          this.box = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      handleMenuSetting() {\n        if (this.selectionList.length !== 1) {\n          this.$message.warning(\"只能选择一条数据\");\n          return;\n        }\n        this.menuTreeObj = [];\n        grantTree()\n          .then(res => {\n            this.menuGrantList = res.data.data.menu;\n            getTopTree(this.ids).then(res => {\n              this.menuTreeObj = res.data.data.menu;\n              this.box = true;\n            });\n          });\n      },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      sortChange(row) {\n        update(row).then(() => {\n          this.onLoad(this.page);\n        }, error => {\n          window.console.log(error);\n        });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n  .none-border {\n    border: 0;\n    background-color: transparent !important;\n  }\n</style>\n"]}]}