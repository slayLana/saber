{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/authority/role.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/authority/role.vue","mtime":1666151205537},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { add, getList, getRole, getRoleTreeById, grant, grantTree, remove, update } from \"@/api/system/role\";\nimport { mapGetters } from \"vuex\";\nimport website from '@/config/website';\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      box: false,\n      props: {\n        label: \"title\",\n        value: \"key\"\n      },\n      menuGrantList: [],\n      dataScopeGrantList: [],\n      apiScopeGrantList: [],\n      apiGrantList: [],\n      menuTreeObj: [],\n      dataScopeTreeObj: [],\n      apiScopeTreeObj: [],\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      option: {\n        tip: false,\n        simplePage: true,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tree: true,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        dialogWidth: 900,\n        dialogClickModal: false,\n        column: [{\n          label: \"角色名称\",\n          prop: \"roleName\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入角色名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          dicUrl: \"/api/blade-system/tenant/select\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: website.tenantMode,\n          span: 24,\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          hide: !website.tenantMode,\n          search: website.tenantMode,\n          rules: [{\n            required: true,\n            message: \"请输入所属租户\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"角色别名\",\n          prop: \"roleAlias\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入角色别名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"上级角色\",\n          prop: \"parentId\",\n          dicData: [],\n          type: \"tree\",\n          hide: true,\n          span: 24,\n          props: {\n            label: \"title\"\n          },\n          rules: [{\n            required: false,\n            message: \"请选择上级角色\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"角色排序\",\n          prop: \"sort\",\n          type: \"number\",\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入角色排序\",\n            trigger: \"blur\"\n          }]\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"userInfo\", \"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.role_add, false),\n        viewBtn: this.vaildData(this.permission.role_view, false),\n        delBtn: this.vaildData(this.permission.role_delete, false),\n        editBtn: this.vaildData(this.permission.role_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n    idsArray: function idsArray() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids;\n    }\n  }),\n  methods: {\n    initData: function initData(roleId) {\n      var _this = this;\n\n      getRoleTreeById(roleId).then(function (res) {\n        var column = _this.findObject(_this.option.column, \"parentId\");\n\n        column.dicData = res.data.data;\n      });\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      var menuList = this.$refs.treeMenu.getCheckedKeys();\n      var dataScopeList = this.$refs.treeDataScope.getCheckedKeys();\n      var apiScopeList = this.$refs.treeApiScope.getCheckedKeys();\n      grant(this.idsArray, menuList, dataScopeList, apiScopeList).then(function () {\n        _this2.box = false;\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this2.onLoad(_this2.page);\n      });\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this3 = this;\n\n      add(row).then(function () {\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this4 = this;\n\n      update(row).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this5 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      if ([\"add\", \"edit\"].includes(type)) {\n        this.initData(this.form.id);\n      }\n\n      done();\n    },\n    handleRole: function handleRole() {\n      var _this6 = this;\n\n      if (this.selectionList.length !== 1) {\n        this.$message.warning(\"只能选择一条数据\");\n        return;\n      }\n\n      this.menuTreeObj = [];\n      this.dataScopeTreeObj = [];\n      this.apiScopeTreeObj = [];\n      grantTree().then(function (res) {\n        _this6.menuGrantList = res.data.data.menu;\n        _this6.dataScopeGrantList = res.data.data.dataScope;\n        _this6.apiScopeGrantList = res.data.data.apiScope;\n        getRole(_this6.ids).then(function (res) {\n          _this6.menuTreeObj = res.data.data.menu;\n          _this6.dataScopeTreeObj = res.data.data.dataScope;\n          _this6.apiScopeTreeObj = res.data.data.apiScope;\n          _this6.box = true;\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this7 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this7.ids);\n      }).then(function () {\n        _this7.onLoad(_this7.page);\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this7.$refs.crud.toggleSelection();\n      });\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this8 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        _this8.data = res.data.data;\n        _this8.loading = false;\n\n        _this8.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":"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","names":["data","form","box","props","label","value","menuGrantList","dataScopeGrantList","apiScopeGrantList","apiGrantList","menuTreeObj","dataScopeTreeObj","apiScopeTreeObj","selectionList","query","loading","page","pageSize","currentPage","total","option","tip","simplePage","searchShow","searchMenuSpan","tree","border","index","selection","viewBtn","dialogWidth","dialogClickModal","column","prop","search","span","rules","required","message","trigger","type","dicUrl","addDisplay","editDisplay","viewDisplay","hide","dicData","computed","mapGetters","permissionList","addBtn","delBtn","editBtn","ids","idsArray","methods","initData","roleId","getRoleTreeById","submit","grant","rowSave","row","done","add","window","rowUpdate","update","rowDel","confirmButtonText","cancelButtonText","then","searchReset","searchChange","params","selectionChange","list","selectionClear","beforeOpen","handleRole","grantTree","getRole","handleDelete","currentChange","sizeChange","refreshChange","onLoad","getList"],"sourceRoot":"src/views/authority","sources":["role.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               @row-del=\"rowDel\"\n               @row-update=\"rowUpdate\"\n               @row-save=\"rowSave\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"danger\"\n                   size=\"small\"\n                   icon=\"el-icon-delete\"\n                   v-if=\"permission.role_delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n        <el-button size=\"small\"\n                   icon=\"el-icon-setting\"\n                   @click=\"handleRole\"\n                   v-if=\"userInfo.role_name.includes('admin')\"\n                   plain>权限设置\n        </el-button>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"角色权限配置\"\n               append-to-body\n               :visible.sync=\"box\"\n               width=\"345px\">\n      <el-tabs type=\"border-card\">\n        <el-tab-pane label=\"菜单权限\">\n          <el-tree :data=\"menuGrantList\"\n                   show-checkbox\n                   node-key=\"id\"\n                   ref=\"treeMenu\"\n                   :default-checked-keys=\"menuTreeObj\"\n                   :props=\"props\">\n          </el-tree>\n        </el-tab-pane>\n        <el-tab-pane label=\"数据权限\">\n          <el-tree :data=\"dataScopeGrantList\"\n                   show-checkbox\n                   node-key=\"id\"\n                   ref=\"treeDataScope\"\n                   :default-checked-keys=\"dataScopeTreeObj\"\n                   :props=\"props\">\n          </el-tree>\n        </el-tab-pane>\n        <el-tab-pane label=\"接口权限\">\n          <el-tree :data=\"apiScopeGrantList\"\n                   show-checkbox\n                   node-key=\"id\"\n                   ref=\"treeApiScope\"\n                   :default-checked-keys=\"apiScopeTreeObj\"\n                   :props=\"props\">\n          </el-tree>\n        </el-tab-pane>\n      </el-tabs>\n\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"box = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"submit\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {add, getList, getRole, getRoleTreeById, grant, grantTree, remove, update} from \"@/api/system/role\";\n  import {mapGetters} from \"vuex\";\n  import website from '@/config/website';\n\n  export default {\n    data() {\n      return {\n        form: {},\n        box: false,\n        props: {\n          label: \"title\",\n          value: \"key\"\n        },\n        menuGrantList: [],\n        dataScopeGrantList: [],\n        apiScopeGrantList: [],\n        apiGrantList: [],\n        menuTreeObj: [],\n        dataScopeTreeObj: [],\n        apiScopeTreeObj: [],\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        option: {\n          tip: false,\n          simplePage: true,\n          searchShow: true,\n          searchMenuSpan: 6,\n          tree: true,\n          border: true,\n          index: true,\n          selection: true,\n          viewBtn: true,\n          dialogWidth: 900,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"角色名称\",\n              prop: \"roleName\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色名称\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"所属租户\",\n              prop: \"tenantId\",\n              type: \"tree\",\n              dicUrl: \"/api/blade-system/tenant/select\",\n              addDisplay: false,\n              editDisplay: false,\n              viewDisplay: website.tenantMode,\n              span: 24,\n              props: {\n                label: \"tenantName\",\n                value: \"tenantId\"\n              },\n              hide: !website.tenantMode,\n              search: website.tenantMode,\n              rules: [{\n                required: true,\n                message: \"请输入所属租户\",\n                trigger: \"click\"\n              }]\n            },\n            {\n              label: \"角色别名\",\n              prop: \"roleAlias\",\n              search: true,\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色别名\",\n                  trigger: \"blur\"\n                }\n              ]\n            },\n            {\n              label: \"上级角色\",\n              prop: \"parentId\",\n              dicData: [],\n              type: \"tree\",\n              hide: true,\n              span: 24,\n              props: {\n                label: \"title\"\n              },\n              rules: [\n                {\n                  required: false,\n                  message: \"请选择上级角色\",\n                  trigger: \"click\"\n                }\n              ]\n            },\n            {\n              label: \"角色排序\",\n              prop: \"sort\",\n              type: \"number\",\n              span: 24,\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入角色排序\",\n                  trigger: \"blur\"\n                }\n              ]\n            }\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"userInfo\", \"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.role_add, false),\n          viewBtn: this.vaildData(this.permission.role_view, false),\n          delBtn: this.vaildData(this.permission.role_delete, false),\n          editBtn: this.vaildData(this.permission.role_edit, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n\n        });\n        return ids.join(\",\");\n      },\n      idsArray() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids;\n      }\n    },\n    methods: {\n      initData(roleId){\n        getRoleTreeById(roleId).then(res => {\n          const column = this.findObject(this.option.column, \"parentId\");\n          column.dicData = res.data.data;\n        });\n      },\n      submit() {\n        const menuList = this.$refs.treeMenu.getCheckedKeys();\n        const dataScopeList = this.$refs.treeDataScope.getCheckedKeys();\n        const apiScopeList = this.$refs.treeApiScope.getCheckedKeys();\n        grant(this.idsArray, menuList, dataScopeList, apiScopeList).then(() => {\n          this.box = false;\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.onLoad(this.page);\n        });\n      },\n      rowSave(row, done, loading) {\n        add(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowUpdate(row, index, done, loading) {\n        update(row).then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          done();\n        }, error => {\n          window.console.log(error);\n          loading();\n        });\n      },\n      rowDel(row) {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(row.id);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      beforeOpen(done, type) {\n        if ([\"add\", \"edit\"].includes(type)) {\n          this.initData(this.form.id);\n        }\n        done();\n      },\n      handleRole() {\n        if (this.selectionList.length !== 1) {\n          this.$message.warning(\"只能选择一条数据\");\n          return;\n        }\n        this.menuTreeObj = [];\n        this.dataScopeTreeObj = [];\n        this.apiScopeTreeObj = [];\n        grantTree()\n          .then(res => {\n            this.menuGrantList = res.data.data.menu;\n            this.dataScopeGrantList = res.data.data.dataScope;\n            this.apiScopeGrantList = res.data.data.apiScope;\n            getRole(this.ids).then(res => {\n              this.menuTreeObj = res.data.data.menu;\n              this.dataScopeTreeObj = res.data.data.dataScope;\n              this.apiScopeTreeObj = res.data.data.apiScope;\n              this.box = true;\n            });\n          });\n      },\n      handleDelete() {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return remove(this.ids);\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n            this.$refs.crud.toggleSelection();\n          });\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          this.data = res.data.data;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n"]}]}