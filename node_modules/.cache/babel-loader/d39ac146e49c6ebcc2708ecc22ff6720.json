{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/flow/model.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/flow/model.vue","mtime":1666151205539},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mapGetters } from \"vuex\";\nimport { modelList, removeModel, deployModel, submitModel, detail } from \"@/api/flow/flow\";\nimport { flowCategory } from \"@/util/flow\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      optionDeploy: {\n        menuBtn: false,\n        column: [{\n          label: \"流程类型\",\n          type: \"select\",\n          dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          dataType: \"number\",\n          slot: true,\n          prop: \"categoryValue\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请选择流程类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"流程模式\",\n          prop: \"flowMode\",\n          type: \"radio\",\n          dicData: [{\n            label: \"通用流程\",\n            value: 1\n          }, {\n            label: \"定制流程\",\n            value: 2\n          }],\n          value: 1,\n          span: 24,\n          rules: [{\n            required: true,\n            message: '请选择流程模式',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          multiple: true,\n          dicUrl: \"/api/blade-system/tenant/select\",\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          display: false,\n          span: 24,\n          rules: [{\n            required: true,\n            message: '请选择所属租户',\n            trigger: 'blur'\n          }]\n        }]\n      },\n      selectionId: '',\n      selectionList: [],\n      query: {},\n      loading: true,\n      deployLoading: false,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      deployBox: false,\n      flowBox: false,\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        editBtn: false,\n        addBtn: false,\n        viewBtn: false,\n        delBtn: false,\n        dialogWidth: 900,\n        menuWidth: 200,\n        dialogClickModal: false,\n        size: 'mini',\n        searchSize: 'mini',\n        column: [{\n          label: '模型主键',\n          prop: 'id'\n        }, {\n          label: '模型标识',\n          prop: 'modelKey',\n          search: true,\n          overHidden: true\n        }, {\n          label: '模型名称',\n          prop: 'name',\n          search: true,\n          overHidden: true\n        }, {\n          label: '流程版本',\n          prop: 'version',\n          slot: true,\n          overHidden: true\n        }, {\n          label: '创建时间',\n          prop: 'created',\n          overHidden: true\n        }, {\n          label: '更新时间',\n          prop: 'lastUpdated',\n          overHidden: true\n        }]\n      },\n      data: [],\n      nutflowOption: {\n        process: {},\n        step: 1,\n        step1: {\n          toolbar: ['open', 'create', 'fit', 'zoom-in', 'zoom-out', 'undo', 'redo', 'import', 'preview']\n        },\n        step2: {\n          mode: 'view',\n          simulation: true,\n          minimap: true\n        }\n      }\n    };\n  },\n  watch: {\n    'form.flowMode': function formFlowMode() {\n      var _this = this;\n\n      this.$refs.form.option.column.filter(function (item) {\n        if (item.prop === \"tenantId\") {\n          item.display = _this.form.flowMode === 2;\n        }\n      });\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    handleSubmitModel: function handleSubmitModel() {\n      var _this2 = this;\n\n      var registry = this.$refs['wf-design-view'].getElementRegistry().getAll();\n      var businessObject = registry[0].businessObject;\n      var id = businessObject.id,\n          name = businessObject.name,\n          documentation = businessObject.documentation;\n      var description = documentation && documentation.length > 0 ? documentation[0].text : null;\n\n      var params = _objectSpread(_objectSpread({}, this.nutflowOption.process), {}, {\n        modelKey: id,\n        name: name,\n        description: description,\n        modelEditorXml: this.nutflowOption.process.xml\n      });\n\n      submitModel(params).then(function () {\n        _this2.$message.success(\"操作成功\");\n\n        _this2.handleNutflowClose();\n\n        _this2.onLoad(_this2.page, _this2.query);\n      });\n    },\n    handleStep: function handleStep(step) {\n      var _this3 = this;\n\n      if (step === 1) {\n        // 下一步\n        this.$refs['wf-design'].getData('xml').then(function (data) {\n          _this3.$set(_this3.nutflowOption.step1, 'xml', data);\n\n          _this3.$set(_this3.nutflowOption.step2, 'xml', data);\n\n          _this3.$set(_this3.nutflowOption.process, 'xml', data);\n\n          _this3.$set(_this3.nutflowOption, 'step', 2);\n        });\n      } else this.$set(this.nutflowOption, 'step', 1);\n    },\n    handleNutflowClose: function handleNutflowClose(done, flag) {\n      var _this4 = this;\n\n      var initOption = {\n        process: {},\n        step: 1,\n        step1: {\n          toolbar: ['open', 'create', 'fit', 'zoom-in', 'zoom-out', 'undo', 'redo', 'import', 'preview']\n        },\n        step2: {\n          mode: 'view',\n          simulation: true,\n          minimap: true\n        }\n      };\n\n      if (done || flag) {\n        this.$confirm('确定要关闭吗？关闭未保存的修改都会丢失。', '警告', {\n          type: 'warning'\n        }).then(function () {\n          _this4.$set(_this4, 'nutflowOption', initOption);\n\n          if (typeof done == 'function') done();\n          _this4.flowBox = false;\n        }).catch(function () {});\n      } else {\n        this.$set(this, 'nutflowOption', initOption);\n        this.flowBox = false;\n      }\n    },\n    handleSubmit: function handleSubmit(form, done) {\n      var _this5 = this;\n\n      this.deployLoading = true;\n      deployModel({\n        modelId: this.selectionId,\n        category: flowCategory(form.categoryValue),\n        tenantIds: form.tenantId.join(\",\")\n      }).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this5.$message({\n            type: \"success\",\n            message: data.msg\n          });\n\n          done();\n\n          _this5.$refs.form.resetForm();\n\n          _this5.deployBox = false;\n          _this5.deployLoading = false;\n        } else {\n          done();\n          _this5.deployLoading = false;\n\n          _this5.$message({\n            type: \"warn\",\n            message: data.msg\n          });\n        }\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return removeModel(_this6.ids);\n      }).then(function () {\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this6.$refs.crud.toggleSelection();\n\n        _this6.onLoad(_this6.page);\n      });\n    },\n    handleCreate: function handleCreate() {\n      this.flowBox = true;\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this7 = this;\n\n      detail({\n        id: row.id\n      }).then(function (res) {\n        var data = res.data.data;\n        var modelEditorXml = data.modelEditorXml;\n\n        _this7.$set(_this7.nutflowOption.step1, 'xml', modelEditorXml);\n\n        _this7.$set(_this7.nutflowOption, 'process', data);\n\n        _this7.flowBox = true;\n      });\n    },\n    handleDeploy: function handleDeploy(row) {\n      this.deployBox = true;\n      this.selectionId = row.id;\n    },\n    handleDoDeploy: function handleDoDeploy() {\n      this.$refs.form.submit();\n    },\n    handleSlotDelete: function handleSlotDelete(row) {\n      var _this8 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return removeModel(row.id);\n      }).then(function () {\n        _this8.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this8.$refs.crud.toggleSelection();\n\n        _this8.onLoad(_this8.page);\n      });\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this9 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      modelList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this9.page.total = data.total;\n        _this9.data = data.records;\n        _this9.loading = false;\n\n        _this9.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":"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","names":["data","form","optionDeploy","menuBtn","column","label","type","dicUrl","props","value","dataType","slot","prop","search","span","rules","required","message","trigger","dicData","multiple","display","selectionId","selectionList","query","loading","deployLoading","page","pageSize","currentPage","total","deployBox","flowBox","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","selection","editBtn","addBtn","viewBtn","delBtn","dialogWidth","menuWidth","dialogClickModal","size","searchSize","overHidden","nutflowOption","process","step","step1","toolbar","step2","mode","simulation","minimap","watch","item","computed","mapGetters","ids","methods","handleSubmitModel","modelKey","name","description","modelEditorXml","submitModel","handleStep","handleNutflowClose","done","flag","then","catch","handleSubmit","deployModel","modelId","category","tenantIds","searchReset","searchChange","params","selectionChange","list","selectionClear","handleDelete","confirmButtonText","cancelButtonText","handleCreate","handleUpdate","row","detail","id","handleDeploy","handleDoDeploy","handleSlotDelete","currentChange","sizeChange","refreshChange","onLoad","modelList"],"sourceRoot":"src/views/flow","sources":["model.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :page.sync=\"page\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot=\"menuLeft\">\n        <el-button type=\"primary\"\n                   size=\"mini\"\n                   icon=\"el-icon-circle-plus\"\n                   v-if=\"permission.flow_model_create\"\n                   plain\n                   @click=\"handleCreate\">创 建\n        </el-button>\n        <el-button type=\"danger\"\n                   size=\"mini\"\n                   icon=\"el-icon-delete\"\n                   v-if=\"permission.flow_model_delete\"\n                   plain\n                   @click=\"handleDelete\">删 除\n        </el-button>\n      </template>\n      <template slot-scope=\"scope\"\n                slot=\"menu\">\n        <el-button type=\"text\"\n                   size=\"mini\"\n                   icon=\"el-icon-setting\"\n                   v-if=\"permission.flow_model_update\"\n                   @click.stop=\"handleUpdate(scope.row,scope.index)\">配置\n        </el-button>\n        <el-button type=\"text\"\n                   size=\"mini\"\n                   icon=\"el-icon-upload2\"\n                   v-if=\"permission.flow_model_deploy\"\n                   @click.stop=\"handleDeploy(scope.row,scope.index)\">部署\n        </el-button>\n        <el-button type=\"text\"\n                   size=\"mini\"\n                   icon=\"el-icon-delete\"\n                   v-if=\"permission.flow_model_delete\"\n                   @click.stop=\"handleSlotDelete(scope.row,scope.index)\">删除\n        </el-button>\n      </template>\n      <template slot-scope=\"{row}\"\n                slot=\"version\">\n        <el-tag>v{{ row.version }}</el-tag>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"流程配置\"\n               append-to-body\n               destroy-on-close\n               :visible.sync=\"flowBox\"\n               :close-on-press-escape=\"false\"\n               :fullscreen=\"true\"\n               :before-close=\"handleNutflowClose\"\n               custom-class=\"wf-dialog\">\n      <wf-design-base v-if=\"nutflowOption.step === 1\"\n                      class=\"animated fadeIn\"\n                      style=\"height: calc(100vh - 108px);\"\n                      ref=\"wf-design\"\n                      :options=\"nutflowOption.step1\"></wf-design-base>\n      <wf-design-base v-if=\"nutflowOption.step === 2\"\n                      class=\"animated fadeIn\"\n                      style=\"height: calc(100vh - 108px);\"\n                      ref=\"wf-design-view\"\n                      :options=\"nutflowOption.step2\"></wf-design-base>\n      <span slot=\"footer\"\n            class=\"avue-dialog__footer\">\n        <el-button size=\"small\"\n                   @click=\"handleNutflowClose(() => {}, true)\">取 消</el-button>\n        <el-button v-if=\"nutflowOption.step === 1\"\n                   size=\"small\"\n                   type=\"success\"\n                   @click=\"handleStep(1)\">下 一 步</el-button>\n        <el-button v-if=\"nutflowOption.step === 2\"\n                   size=\"small\"\n                   type=\"success\"\n                   @click=\"handleStep(-1)\">上 一 步</el-button>\n        <el-button v-if=\"nutflowOption.step === 2\"\n                   size=\"small\"\n                   type=\"primary\"\n                   @click=\"handleSubmitModel\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog title=\"流程部署\"\n               append-to-body\n               :visible.sync=\"deployBox\"\n               width=\"20%\">\n      <avue-form ref=\"form\"\n                 :option=\"optionDeploy\"\n                 v-model=\"form\"\n                 @submit=\"handleSubmit\"/>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"deployBox = false\">取 消</el-button>\n        <el-button type=\"primary\"\n                   @click=\"handleDoDeploy\"\n                   :loading=\"deployLoading\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\nimport {mapGetters} from \"vuex\";\nimport {modelList, removeModel, deployModel, submitModel, detail} from \"@/api/flow/flow\";\nimport {flowCategory} from \"@/util/flow\";\n\nexport default {\n  data() {\n    return {\n      form: {},\n      optionDeploy: {\n        menuBtn: false,\n        column: [\n          {\n            label: \"流程类型\",\n            type: \"select\",\n            dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            dataType: \"number\",\n            slot: true,\n            prop: \"categoryValue\",\n            search: true,\n            span: 24,\n            rules: [{\n              required: true,\n              message: \"请选择流程类型\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"流程模式\",\n            prop: \"flowMode\",\n            type: \"radio\",\n            dicData: [\n              {\n                label: \"通用流程\",\n                value: 1\n              },\n              {\n                label: \"定制流程\",\n                value: 2\n              }\n            ],\n            value: 1,\n            span: 24,\n            rules: [\n              {\n                required: true,\n                message: '请选择流程模式',\n                trigger: 'blur'\n              }\n            ],\n          },\n          {\n            label: \"所属租户\",\n            prop: \"tenantId\",\n            type: \"tree\",\n            multiple: true,\n            dicUrl: \"/api/blade-system/tenant/select\",\n            props: {\n              label: \"tenantName\",\n              value: \"tenantId\"\n            },\n            display: false,\n            span: 24,\n            rules: [\n              {\n                required: true,\n                message: '请选择所属租户',\n                trigger: 'blur'\n              }\n            ],\n          },\n        ],\n      },\n      selectionId: '',\n      selectionList: [],\n      query: {},\n      loading: true,\n      deployLoading: false,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      deployBox: false,\n      flowBox: false,\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        editBtn: false,\n        addBtn: false,\n        viewBtn: false,\n        delBtn: false,\n        dialogWidth: 900,\n        menuWidth: 200,\n        dialogClickModal: false,\n        size: 'mini',\n        searchSize: 'mini',\n        column: [\n          {\n            label: '模型主键',\n            prop: 'id',\n          },\n          {\n            label: '模型标识',\n            prop: 'modelKey',\n            search: true,\n            overHidden: true\n          },\n          {\n            label: '模型名称',\n            prop: 'name',\n            search: true,\n            overHidden: true\n          },\n          {\n            label: '流程版本',\n            prop: 'version',\n            slot: true,\n            overHidden: true\n          },\n          {\n            label: '创建时间',\n            prop: 'created',\n            overHidden: true\n          },\n          {\n            label: '更新时间',\n            prop: 'lastUpdated',\n            overHidden: true\n          },\n        ]\n      },\n      data: [],\n      nutflowOption: {\n        process: {},\n        step: 1,\n        step1: {\n          toolbar: ['open', 'create', 'fit', 'zoom-in', 'zoom-out', 'undo', 'redo', 'import', 'preview'],\n        },\n        step2: {\n          mode: 'view',\n          simulation: true,\n          minimap: true,\n        }\n      }\n    };\n  },\n  watch: {\n    'form.flowMode'() {\n      this.$refs.form.option.column.filter(item => {\n        if (item.prop === \"tenantId\") {\n          item.display = this.form.flowMode === 2;\n        }\n      });\n    }\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    handleSubmitModel() {\n      const registry = this.$refs['wf-design-view'].getElementRegistry().getAll()\n      const {businessObject} = registry[0]\n      const {id, name, documentation} = businessObject\n      const description = (documentation && documentation.length > 0) ? documentation[0].text : null\n      const params = {\n        ...this.nutflowOption.process,\n        modelKey: id,\n        name,\n        description,\n        modelEditorXml: this.nutflowOption.process.xml\n      }\n      submitModel(params).then(() => {\n        this.$message.success(\"操作成功\")\n        this.handleNutflowClose()\n        this.onLoad(this.page, this.query)\n      })\n    },\n    handleStep(step) {\n      if (step === 1) { // 下一步\n        this.$refs['wf-design'].getData('xml').then(data => {\n          this.$set(this.nutflowOption.step1, 'xml', data)\n          this.$set(this.nutflowOption.step2, 'xml', data)\n          this.$set(this.nutflowOption.process, 'xml', data)\n          this.$set(this.nutflowOption, 'step', 2)\n        })\n      } else this.$set(this.nutflowOption, 'step', 1)\n    },\n    handleNutflowClose(done, flag) {\n      const initOption = {\n        process: {},\n        step: 1,\n        step1: {\n          toolbar: ['open', 'create', 'fit', 'zoom-in', 'zoom-out', 'undo', 'redo', 'import', 'preview'],\n        },\n        step2: {\n          mode: 'view',\n          simulation: true,\n          minimap: true,\n        }\n      }\n      if (done || flag) {\n        this.$confirm('确定要关闭吗？关闭未保存的修改都会丢失。', '警告', {\n          type: 'warning'\n        }).then(() => {\n          this.$set(this, 'nutflowOption', initOption)\n          if (typeof done == 'function') done()\n          this.flowBox = false\n        }).catch(() => {\n        })\n      } else {\n        this.$set(this, 'nutflowOption', initOption)\n        this.flowBox = false\n      }\n    },\n    handleSubmit(form, done) {\n      this.deployLoading = true;\n      deployModel({\n        modelId: this.selectionId,\n        category: flowCategory(form.categoryValue),\n        tenantIds: form.tenantId.join(\",\")\n      }).then(res => {\n        const data = res.data;\n        if (data.success) {\n          this.$message({\n            type: \"success\",\n            message: data.msg\n          });\n          done();\n          this.$refs.form.resetForm();\n          this.deployBox = false;\n          this.deployLoading = false;\n        } else {\n          done();\n          this.deployLoading = false;\n          this.$message({\n            type: \"warn\",\n            message: data.msg\n          });\n        }\n      })\n    },\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return removeModel(this.ids);\n        })\n        .then(() => {\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n          this.onLoad(this.page);\n        });\n    },\n    handleCreate() {\n      this.flowBox = true;\n    },\n    handleUpdate(row) {\n      detail({id: row.id}).then(res => {\n        const data = res.data.data\n        const {modelEditorXml} = data\n        this.$set(this.nutflowOption.step1, 'xml', modelEditorXml)\n        this.$set(this.nutflowOption, 'process', data)\n        this.flowBox = true;\n      })\n    },\n    handleDeploy(row) {\n      this.deployBox = true;\n      this.selectionId = row.id;\n    },\n    handleDoDeploy() {\n      this.$refs.form.submit();\n    },\n    handleSlotDelete(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return removeModel(row.id);\n        })\n        .then(() => {\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n          this.onLoad(this.page);\n        });\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      modelList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n\n.wf-dialog {\n  .el-dialog__body {\n    padding: 5px;\n  }\n\n  .avue-dialog__footer {\n    text-align: center;\n  }\n}\n</style>\n"]}]}