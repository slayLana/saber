{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/views/goodsInfo/priceForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/views/goodsInfo/priceForm.vue","mtime":1668865005787},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.find\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { update } from \"@/api/goodsInfo/goodsInfo\";\nexport default {\n  name: \"priceForm\",\n  data: function data() {\n    return {\n      cityList: []\n    };\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"\"\n    },\n    priceBox: {\n      type: Boolean,\n      default: false\n    },\n    option: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    request: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    priceForm: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  watch: {\n    \"priceForm.goodsCount\": function priceFormGoodsCount() {\n      this.priceForm.weight = this.priceForm.goodsCount * this.priceForm.goodsWeightK / 1000;\n    }\n  },\n  methods: {\n    loadCityBypId: function loadCityBypId(pCode, event) {\n      this.$http({\n        url: \"/api/blade-system/region/lazy-tree?parentCode=\".concat(pCode),\n        method: \"get\"\n      }).then(event);\n    },\n    remoteMethod: function remoteMethod(query) {\n      var _this = this;\n\n      if (query) {\n        this.$http({\n          url: \"/api/blade-system/region/allList?name=\".concat(query),\n          method: \"get\"\n        }).then(function (res) {\n          _this.cityList = res.data.data;\n        });\n      }\n    },\n    changeCity2: function changeCity2(city2) {\n      if (city2) {\n        var city = this.cityList.find(function (item) {\n          return item.code == city2;\n        });\n        this.priceForm.receiveCityId = city.code;\n        this.priceForm.receiveProvinceId = city.parentCode;\n      } else {\n        this.priceForm.receiveCityId = null;\n        this.priceForm.receiveProvinceId = null;\n      }\n    },\n    changeCity1: function changeCity1(city1) {\n      if (city1) {\n        var city = this.cityList.find(function (item) {\n          return item.code == city1;\n        });\n        this.priceForm.sendCityId = city.code;\n        this.priceForm.sendProvinceId = city.parentCode;\n      } else {\n        this.priceForm.sendCityId = null;\n        this.priceForm.sendProvinceId = null;\n      }\n    },\n    handleSavePrice: function handleSavePrice() {\n      var _this2 = this;\n\n      if (!this.request.primeCost1) {\n        this.$message({\n          type: \"error\",\n          message: \"请先计算费用!\"\n        });\n      }\n\n      var tmp = +(this.priceForm.profitRate.replace(\"%\", \"\") / 100).toFixed(2);\n\n      var form = _objectSpread({\n        id: this.priceForm.goodsId,\n        goodsCount: this.priceForm.goodsCount,\n        goodsWeightKg: this.priceForm.goodsWeightKg,\n        offerPrice: (this.request.primeCost2 * (1 + tmp)).toFixed(1)\n      }, this.request);\n\n      update(form).then(function () {\n        _this2.priceBox = false;\n\n        _this2.$emit(\"submitSuccess\", \"priceBox\");\n      });\n    },\n    beforeClose: function beforeClose(done) {\n      done();\n      this.request = {};\n      this.priceForm = {};\n      this.$emit(\"closeBox\", \"priceBox\");\n    },\n    closeBox: function closeBox() {\n      this.priceBox = false;\n      this.$emit(\"closeBox\", \"priceBox\");\n    },\n    handleComputed: function handleComputed() {\n      var _this3 = this;\n\n      console.log(this.priceForm);\n      this.loadingDailog = true; // };\n\n      this.$http({\n        url: \"/api/blade-goodsInfo/goodsInfo/computedPrice\",\n        params: this.priceForm\n      }).then(function (res) {\n        _this3.loadingDailog = false;\n        console.log(res);\n        _this3.request = res.data.data;\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;AAwIA,SACAA,MADA,QAEA,2BAFA;AAGA;EACAC,iBADA;EAEAC,IAFA,kBAEA;IACA;MACAC;IADA;EAEA,CALA;EAMAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,aADA;MAEAC;IAFA,CALA;IASAE;MACAH,YADA;MAEAC;QAAA;MAAA;IAFA,CATA;IAaAG;MACAJ,YADA;MAEAC;QAAA;MAAA;IAFA,CAbA;IAiBAI;MACAL,YADA;MAEAC;QAAA;MAAA;IAFA;EAjBA,CANA;EA4BAK;IACA,sBADA,iCACA;MACA,wBACA,8DADA;IAEA;EAJA,CA5BA;EAkCAC;IACAC,aADA,yBACAC,KADA,EACAC,KADA,EACA;MACA;QACAC,mEADA;QAEAC;MAFA,GAGAC,IAHA,CAGAH,KAHA;IAIA,CANA;IAOAI,YAPA,wBAOAC,KAPA,EAOA;MAAA;;MACA;QACA;UACAJ,2DADA;UAEAC;QAFA,GAGAC,IAHA,CAGA;UACA;QACA,CALA;MAMA;IACA,CAhBA;IAiBAG,WAjBA,uBAiBAC,KAjBA,EAiBA;MACA;QACA;UAAA;QAAA;QACA;QACA;MACA,CAJA,MAIA;QACA;QACA;MACA;IACA,CA1BA;IA2BAC,WA3BA,uBA2BAC,KA3BA,EA2BA;MACA;QACA;UAAA;QAAA;QACA;QACA;MACA,CAJA,MAIA;QACA;QACA;MACA;IACA,CApCA;IAqCAC,eArCA,6BAqCA;MAAA;;MACA;QACA;UACApB,aADA;UAEAqB;QAFA;MAIA;;MACA;;MACA;QACAC,0BADA;QAEAC,qCAFA;QAGAC,2CAHA;QAIAC;MAJA,GAKA,YALA;;MAOA/B;QACA;;QACA;MACA,CAHA;IAIA,CAxDA;IAyDAgC,WAzDA,uBAyDAC,IAzDA,EAyDA;MACAA;MACA;MACA;MACA;IACA,CA9DA;IA+DAC,QA/DA,sBA+DA;MACA;MACA;IACA,CAlEA;IAmEAC,cAnEA,4BAmEA;MAAA;;MACAC;MACA,0BAFA,CAGA;;MACA;QACAnB,mDADA;QAEAoB;MAFA,GAGAlB,IAHA,CAGA;QACA;QACAiB;QACA;MACA,CAPA;IAQA;EA/EA;AAlCA","names":["update","name","data","cityList","props","title","type","default","priceBox","option","request","priceForm","watch","methods","loadCityBypId","pCode","event","url","method","then","remoteMethod","query","changeCity2","city2","changeCity1","city1","handleSavePrice","message","id","goodsCount","goodsWeightKg","offerPrice","beforeClose","done","closeBox","handleComputed","console","params"],"sourceRoot":"src/views/goodsInfo","sources":["priceForm.vue"],"sourcesContent":["<template>\n    <el-dialog\n        v-loading=\"loadingDialog\"\n        :title=\"title\"\n        :visible.sync=\"priceBox\"\n        width=\"50%\"\n        :before-close=\"beforeClose\"\n        append-to-body\n      >\n        <el-form\n          :size=\"option.size\"\n          ref=\"priceForm\"\n          :model=\"priceForm\"\n          label-width=\"80px\"\n        >\n          <el-row>\n            <el-col span=\"8\">\n              <el-form-item label=\"数量\" prop=\"goodsCount\">\n                <el-input\n                  v-model=\"priceForm.goodsCount\"\n                  placeholder=\"请输入数量\"\n                />\n              </el-form-item>\n            </el-col>\n            <el-col span=\"8\">\n              <el-form-item label=\"重量\" prop=\"weight\">\n                <el-input\n                  v-model=\"priceForm.weight\"\n                  placeholder=\"请输入\"\n                  disabled\n                />\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col span=\"12\">\n              <el-form-item label=\"嘉兴收\" prop=\"city1\">\n                <!-- <el-cascader\n                  clearable\n                  :props=\"propsCity1\"\n                  :options=\"cityList\"\n                  v-model=\"priceForm.city1\"\n                  @change=\"changeCity1\"\n                ></el-cascader> -->\n                <el-select\n                  clearable\n                  v-model=\"priceForm.city1\"\n                  filterable\n                  remote\n                  reserve-keyword\n                  @change=\"changeCity1\"\n                  placeholder=\"请输入关键词\"\n                  :remote-method=\"remoteMethod\"\n                >\n                  <el-option\n                    v-for=\"item in cityList\"\n                    :key=\"item.code\"\n                    :label=\"item.name\"\n                    :value=\"item.code\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col span=\"12\">\n              <el-form-item label=\"嘉兴发\" prop=\"city2\">\n                <!-- <el-cascader\n                  clearable\n                  :props=\"propsCity1\"\n                  :options=\"cityList\"\n                  v-model=\"priceForm.city2\"\n                  @change=\"changeCity1\"\n                ></el-cascader> -->\n                <el-select\n                  clearable\n                  v-model=\"priceForm.city2\"\n                  filterable\n                  remote\n                  reserve-keyword\n                  @change=\"changeCity2\"\n                  placeholder=\"请输入关键词\"\n                  :remote-method=\"remoteMethod\"\n                >\n                  <el-option\n                    v-for=\"item in cityList\"\n                    :key=\"item.code\"\n                    :label=\"item.name\"\n                    :value=\"item.code\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col span=\"12\">\n              <el-form-item label=\"运费1:\" prop=\"city1\">\n                {{ this.request.freightFee1 }}\n              </el-form-item>\n            </el-col>\n            <el-col span=\"12\">\n              <el-form-item label=\"成本1:\" prop=\"city1\">\n                {{ this.request.primeCost1 }}\n              </el-form-item>\n            </el-col>\n            <el-col span=\"12\">\n              <el-form-item label=\"运费2:\" prop=\"city1\">\n                {{ this.request.freightFee2 }}\n              </el-form-item>\n            </el-col>\n            <el-col span=\"12\">\n              <el-form-item label=\"成本2:\" prop=\"city1\">\n                {{ this.request.primeCost2 }}\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button type=\"primary\" :size=\"option.size\" @click=\"handleComputed\"\n            >计 算</el-button\n          >\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-circle-check\"\n            :size=\"option.size\"\n            @click=\"handleSavePrice\"\n            >保 存</el-button\n          >\n          <el-button\n            icon=\"el-icon-circle-close\"\n            :size=\"option.size\"\n            @click=\"closeBox\"\n            >取 消</el-button\n          >\n        </span>\n      </el-dialog>\n</template>\n<script>\nimport {\n  update,\n} from \"@/api/goodsInfo/goodsInfo\";\nexport default {\n    name: \"priceForm\",\n    data() {\n        return {\n        cityList:[]}\n    },\n    props:{\n        title:{\n            type:String,\n            default:\"\"\n        },\n        priceBox:{\n            type:Boolean,\n            default:false\n        },\n        option:{\n            type:Object,\n            default:()=>({})\n        },\n        request:{\n            type:Object,\n            default:()=>({})\n        },\n        priceForm:{\n            type:Object,\n            default:()=>({})\n        }\n    },\n     watch: {\n    \"priceForm.goodsCount\"() {\n      this.priceForm.weight =\n        (this.priceForm.goodsCount * this.priceForm.goodsWeightK) / 1000;\n    },\n  },\n    methods:{\n    loadCityBypId(pCode, event) {\n      this.$http({\n        url: `/api/blade-system/region/lazy-tree?parentCode=${pCode}`,\n        method: \"get\",\n      }).then(event);\n    },\n    remoteMethod(query) {\n      if (query) {\n        this.$http({\n          url: `/api/blade-system/region/allList?name=${query}`,\n          method: \"get\",\n        }).then((res) => {\n          this.cityList = res.data.data;\n        });\n      }\n    },\n    changeCity2(city2) {\n      if (city2) {\n        const city = this.cityList.find((item) => item.code == city2);\n        this.priceForm.receiveCityId = city.code;\n        this.priceForm.receiveProvinceId = city.parentCode;\n      } else {\n        this.priceForm.receiveCityId = null;\n        this.priceForm.receiveProvinceId = null;\n      }\n    },\n    changeCity1(city1) {\n      if (city1) {\n        const city = this.cityList.find((item) => item.code == city1);\n        this.priceForm.sendCityId = city.code;\n        this.priceForm.sendProvinceId = city.parentCode;\n      } else {\n        this.priceForm.sendCityId = null;\n        this.priceForm.sendProvinceId = null;\n      }\n    },\n    handleSavePrice() {\n      if (!this.request.primeCost1) {\n        this.$message({\n          type: \"error\",\n          message: \"请先计算费用!\",\n        });\n      }\n      let tmp = +(this.priceForm.profitRate.replace(\"%\", \"\") / 100).toFixed(2);\n      const form = {\n        id: this.priceForm.goodsId,\n        goodsCount: this.priceForm.goodsCount,\n        goodsWeightKg: this.priceForm.goodsWeightKg,\n        offerPrice: (this.request.primeCost2 * (1 + tmp)).toFixed(1),\n        ...this.request,\n      };\n      update(form).then(() => {\n        this.priceBox = false;\n        this.$emit(\"submitSuccess\",\"priceBox\")\n      });\n    },\n    beforeClose(done) {\n      done();\n      this.request = {};\n      this.priceForm = {};\n      this.$emit(\"closeBox\",\"priceBox\")\n    },\n    closeBox(){\n        this.priceBox = false\n        this.$emit(\"closeBox\",\"priceBox\")\n    },\n    handleComputed() {\n      console.log(this.priceForm);\n      this.loadingDailog = true;\n      // };\n      this.$http({\n        url: `/api/blade-goodsInfo/goodsInfo/computedPrice`,\n        params: this.priceForm,\n      }).then((res) => {\n        this.loadingDailog = false;\n        console.log(res);\n        this.request = res.data.data;\n      });\n    },\n    }\n}\n</script>"]}]}