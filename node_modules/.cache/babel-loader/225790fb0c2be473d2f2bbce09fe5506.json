{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/eslint-loader/index.js??ref--13-0!/Users/jiang/WorkSpace/bladex/saber/src/mixins/color.js","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/mixins/color.js","mtime":1666151205522},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/eslint-loader/index.js","mtime":1666157452476}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mapGetters } from \"vuex\";\n\nvar version = require(\"element-ui/package.json\").version; // element-ui version from node_modules\n\n\nvar ORIGINAL_THEME = \"#409EFF\"; // default color\n\nexport default function () {\n  return {\n    data: function data() {\n      return {\n        themeVal: ORIGINAL_THEME\n      };\n    },\n    created: function created() {\n      this.themeVal = this.colorName;\n    },\n    watch: {\n      themeVal: function themeVal(val, oldVal) {\n        this.$store.commit(\"SET_COLOR_NAME\", val);\n        this.updateTheme(val, oldVal);\n      }\n    },\n    computed: _objectSpread({}, mapGetters([\"colorName\"])),\n    methods: {\n      updateTheme: function updateTheme(val, oldVal) {\n        var _this = this;\n\n        if (typeof val !== \"string\") return;\n        var head = document.getElementsByTagName(\"head\")[0];\n        var themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\n        var originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\n\n        var getHandler = function getHandler(variable, id) {\n          return function () {\n            var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace(\"#\", \"\"));\n\n            var newStyle = _this.updateStyle(_this[variable], originalCluster, themeCluster);\n\n            var styleTag = document.getElementById(id);\n\n            if (!styleTag) {\n              styleTag = document.createElement(\"style\");\n              styleTag.setAttribute(\"id\", id);\n              head.appendChild(styleTag);\n            }\n\n            styleTag.innerText = newStyle;\n          };\n        };\n\n        var chalkHandler = getHandler(\"chalk\", \"chalk-style\");\n\n        if (!this.chalk) {\n          var url = \"/cdn/element-ui/\".concat(version, \"/theme-chalk/index.css\");\n          this.getCSSString(url, chalkHandler, \"chalk\");\n        } else {\n          chalkHandler();\n        }\n\n        var link = [].slice.call(document.getElementsByTagName(\"head\")[0].getElementsByTagName(\"link\"));\n\n        var _loop = function _loop(i) {\n          var style = link[i];\n\n          if (style.href.includes('css')) {\n            _this.getCSSString(style.href, function (innerText) {\n              var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace(\"#\", \"\"));\n\n              var newStyle = _this.updateStyle(innerText, originalCluster, themeCluster);\n\n              var styleTag = document.getElementById(i);\n\n              if (!styleTag) {\n                styleTag = document.createElement(\"style\");\n                styleTag.id = i;\n                styleTag.innerText = newStyle;\n                head.appendChild(styleTag);\n              }\n            });\n          }\n        };\n\n        for (var i = 0; i < link.length; i++) {\n          _loop(i);\n        }\n\n        var styles = [].slice.call(document.querySelectorAll(\"style\"));\n        styles.forEach(function (style) {\n          var innerText = style.innerText;\n          if (typeof innerText !== \"string\") return;\n          style.innerText = _this.updateStyle(innerText, originalCluster, themeCluster);\n        });\n      },\n      updateStyle: function updateStyle(style, oldCluster, newCluster) {\n        var newStyle = style;\n        oldCluster.forEach(function (color, index) {\n          newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\n        });\n        return newStyle;\n      },\n      getCSSString: function getCSSString(url, callback, variable) {\n        var _this2 = this;\n\n        var xhr = new XMLHttpRequest();\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            if (variable) {\n              _this2[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\n            }\n\n            callback(xhr.responseText);\n          }\n        };\n\n        xhr.open(\"GET\", url);\n        xhr.send();\n      },\n      getThemeCluster: function getThemeCluster(theme) {\n        var tintColor = function tintColor(color, tint) {\n          var red = parseInt(color.slice(0, 2), 16);\n          var green = parseInt(color.slice(2, 4), 16);\n          var blue = parseInt(color.slice(4, 6), 16);\n\n          if (tint === 0) {\n            // when primary color is in its rgb space\n            return [red, green, blue].join(\",\");\n          } else {\n            red += Math.round(tint * (255 - red));\n            green += Math.round(tint * (255 - green));\n            blue += Math.round(tint * (255 - blue));\n            red = red.toString(16);\n            green = green.toString(16);\n            blue = blue.toString(16);\n            return \"#\".concat(red).concat(green).concat(blue);\n          }\n        };\n\n        var shadeColor = function shadeColor(color, shade) {\n          var red = parseInt(color.slice(0, 2), 16);\n          var green = parseInt(color.slice(2, 4), 16);\n          var blue = parseInt(color.slice(4, 6), 16);\n          red = Math.round((1 - shade) * red);\n          green = Math.round((1 - shade) * green);\n          blue = Math.round((1 - shade) * blue);\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n          return \"#\".concat(red).concat(green).concat(blue);\n        };\n\n        var clusters = [theme];\n\n        for (var i = 0; i <= 9; i++) {\n          clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n        }\n\n        clusters.push(shadeColor(theme, 0.1));\n        return clusters;\n      }\n    }\n  };\n}",{"version":3,"names":["mapGetters","version","require","ORIGINAL_THEME","data","themeVal","created","colorName","watch","val","oldVal","$store","commit","updateTheme","computed","methods","head","document","getElementsByTagName","themeCluster","getThemeCluster","replace","originalCluster","getHandler","variable","id","newStyle","updateStyle","styleTag","getElementById","createElement","setAttribute","appendChild","innerText","chalkHandler","chalk","url","getCSSString","link","slice","call","i","style","href","includes","length","styles","querySelectorAll","forEach","oldCluster","newCluster","color","index","RegExp","callback","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","theme","tintColor","tint","red","parseInt","green","blue","join","Math","round","toString","shadeColor","shade","clusters","push","Number","toFixed"],"sources":["/Users/jiang/WorkSpace/bladex/saber/src/mixins/color.js"],"sourcesContent":["import { mapGetters } from \"vuex\";\nconst version = require(\"element-ui/package.json\").version; // element-ui version from node_modules\nconst ORIGINAL_THEME = \"#409EFF\"; // default color\nexport default function () {\n  return {\n    data() {\n      return {\n        themeVal: ORIGINAL_THEME\n      }\n    },\n    created() {\n      this.themeVal = this.colorName;\n    },\n    watch: {\n      themeVal(val, oldVal) {\n        this.$store.commit(\"SET_COLOR_NAME\", val);\n        this.updateTheme(val, oldVal);\n      }\n    },\n    computed: {\n      ...mapGetters([\"colorName\"])\n    },\n    methods: {\n      updateTheme(val, oldVal) {\n        if (typeof val !== \"string\") return;\n        const head = document.getElementsByTagName(\"head\")[0];\n        const themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\n        const originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\n        const getHandler = (variable, id) => {\n          return () => {\n            const originalCluster = this.getThemeCluster(\n              ORIGINAL_THEME.replace(\"#\", \"\")\n            );\n            const newStyle = this.updateStyle(\n              this[variable],\n              originalCluster,\n              themeCluster\n            );\n\n            let styleTag = document.getElementById(id);\n            if (!styleTag) {\n              styleTag = document.createElement(\"style\");\n              styleTag.setAttribute(\"id\", id);\n              head.appendChild(styleTag);\n            }\n            styleTag.innerText = newStyle;\n          };\n        };\n\n        const chalkHandler = getHandler(\"chalk\", \"chalk-style\");\n\n        if (!this.chalk) {\n          const url = `/cdn/element-ui/${version}/theme-chalk/index.css`;\n          this.getCSSString(url, chalkHandler, \"chalk\");\n        } else {\n          chalkHandler();\n        }\n\n        const link = [].slice.call(\n          document.getElementsByTagName(\"head\")[0].getElementsByTagName(\"link\")\n        );\n        for (let i = 0; i < link.length; i++) {\n          const style = link[i];\n          if (style.href.includes('css')) {\n            this.getCSSString(style.href, innerText => {\n              const originalCluster = this.getThemeCluster(\n                ORIGINAL_THEME.replace(\"#\", \"\")\n              );\n              const newStyle = this.updateStyle(\n                innerText,\n                originalCluster,\n                themeCluster\n              );\n              let styleTag = document.getElementById(i);\n              if (!styleTag) {\n                styleTag = document.createElement(\"style\");\n                styleTag.id = i;\n                styleTag.innerText = newStyle;\n                head.appendChild(styleTag);\n              }\n            });\n          }\n        }\n\n        const styles = [].slice.call(document.querySelectorAll(\"style\"))\n\n        styles.forEach(style => {\n          const {\n            innerText\n          } = style;\n          if (typeof innerText !== \"string\") return;\n          style.innerText = this.updateStyle(\n            innerText,\n            originalCluster,\n            themeCluster\n          );\n        });\n      },\n      updateStyle(style, oldCluster, newCluster) {\n        let newStyle = style;\n        oldCluster.forEach((color, index) => {\n          newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\n        });\n        return newStyle;\n      },\n\n      getCSSString(url, callback, variable) {\n        const xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            if (variable) {\n              this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\n            }\n            callback(xhr.responseText);\n          }\n        };\n        xhr.open(\"GET\", url);\n        xhr.send();\n      },\n\n      getThemeCluster(theme) {\n        const tintColor = (color, tint) => {\n          let red = parseInt(color.slice(0, 2), 16);\n          let green = parseInt(color.slice(2, 4), 16);\n          let blue = parseInt(color.slice(4, 6), 16);\n\n          if (tint === 0) {\n            // when primary color is in its rgb space\n            return [red, green, blue].join(\",\");\n          } else {\n            red += Math.round(tint * (255 - red));\n            green += Math.round(tint * (255 - green));\n            blue += Math.round(tint * (255 - blue));\n\n            red = red.toString(16);\n            green = green.toString(16);\n            blue = blue.toString(16);\n\n            return `#${red}${green}${blue}`;\n          }\n        };\n\n        const shadeColor = (color, shade) => {\n          let red = parseInt(color.slice(0, 2), 16);\n          let green = parseInt(color.slice(2, 4), 16);\n          let blue = parseInt(color.slice(4, 6), 16);\n\n          red = Math.round((1 - shade) * red);\n          green = Math.round((1 - shade) * green);\n          blue = Math.round((1 - shade) * blue);\n\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n\n          return `#${red}${green}${blue}`;\n        };\n\n        const clusters = [theme];\n        for (let i = 0; i <= 9; i++) {\n          clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n        }\n        clusters.push(shadeColor(theme, 0.1));\n        return clusters;\n      }\n    }\n  }\n}\n"],"mappings":"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"}]}