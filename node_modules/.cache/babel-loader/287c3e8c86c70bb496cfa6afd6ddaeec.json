{"remainingRequest":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/bladex/saber/src/views/util/store.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/bladex/saber/src/views/util/store.vue","mtime":1666151205546},{"path":"/Users/jiang/WorkSpace/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport { setStore, getStore, removeStore, clearStore, getAllStore } from \"@/util/store\";\nexport default {\n  name: \"store\",\n  methods: {\n    setItem: function setItem() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var name = params.name,\n          value = params.value,\n          type = params.type;\n      setStore({\n        name: name,\n        content: value,\n        type: type\n      });\n      this.$message(\"\\u8BBE\\u7F6E\\u6570\\u636E \".concat(name, \" = \").concat(value));\n    },\n    getItem: function getItem() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var name = params.name,\n          type = params.type;\n      var content = getStore({\n        name: name,\n        type: type\n      });\n      this.$message(\"\\u83B7\\u53D6\\u6570\\u636E \".concat(name, \" = \").concat(content));\n    },\n    delItem: function delItem() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var name = params.name,\n          type = params.type;\n      removeStore({\n        name: name,\n        type: type\n      });\n      this.$message(\"\\u5220\\u9664\\u6570\\u636E \".concat(name));\n    },\n    clearAll: function clearAll() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      clearStore(params);\n      this.$message(\"\\u6E05\\u9664\\u5168\\u90E8\\u6570\\u636E\\u5B8C\\u6210\");\n    },\n    getAll: function getAll() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var list = getAllStore(params);\n      window.console.log(list);\n      this.$message(\"\\u7ED3\\u679C\\u5DF2\\u7ECF\\u6253\\u5370\\u5230\\u63A7\\u5236\\u53F0\");\n    }\n  }\n};",{"version":3,"mappings":";AAmEA,SACAA,QADA,EAEAC,QAFA,EAGAC,WAHA,EAIAC,UAJA,EAKAC,WALA,QAMA,cANA;AAQA;EACAC,aADA;EAEAC;IACAC,OADA,qBACA;MAAA;MACA;MAAA;MAAA;MACAP;QACAK,UADA;QAEAG,cAFA;QAGAC;MAHA;MAKA;IACA,CATA;IAUAC,OAVA,qBAUA;MAAA;MACA;MAAA;MACA;QACAL,UADA;QAEAI;MAFA;MAIA;IACA,CAjBA;IAkBAE,OAlBA,qBAkBA;MAAA;MACA;MAAA;MACAT;QAAAG;QAAAI;MAAA;MACA;IACA,CAtBA;IAuBAG,QAvBA,sBAuBA;MAAA;MACAT;MACA;IACA,CA1BA;IA2BAU,MA3BA,oBA2BA;MAAA;MACA;MACAC;MACA;IACA;EA/BA;AAFA","names":["setStore","getStore","removeStore","clearStore","getAllStore","name","methods","setItem","content","type","getItem","delItem","clearAll","getAll","window"],"sourceRoot":"src/views/util","sources":["store.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <h3>存储</h3>\n    <el-tag class=\"title\"\n            size=\"small\">基本读写删(持久化存储)\n    </el-tag>\n    <div class=\"box\">\n      <el-button type=\"primary\"\n                 size=\"small\"\n                 @click=\"setItem({name:'username', value:'avuex'});\">set('username', 'avuex')\n      </el-button>\n\n      <el-button type=\"success\"\n                 size=\"small\"\n                 @click=\"getItem({name:'username'});\">get('username')\n      </el-button>\n\n      <el-button type=\"danger\"\n                 size=\"small\"\n                 @click=\"delItem({name:'username'});\">remove('username')\n      </el-button>\n    </div>\n    <el-tag class=\"title\"\n            size=\"small\">设置session(session存储)\n    </el-tag>\n    <div class=\"box\">\n      <el-button type=\"primary\"\n                 size=\"small\"\n                 @click=\"setItem({name:'username', value:'avuex',type:'session'});\">set('username', 'avuex')\n      </el-button>\n\n      <el-button type=\"success\"\n                 size=\"small\"\n                 @click=\"getItem({name:'username',type:'session'});\">get('username')\n      </el-button>\n\n      <el-button type=\"danger\"\n                 size=\"small\"\n                 @click=\"delItem({name:'username',type:'session'});\">remove('username')\n      </el-button>\n    </div>\n    <el-tag class=\"title\"\n            size=\"small\">获取所有可以获得的数据\n    </el-tag>\n    <div class=\"box\">\n      <el-button type=\"success\"\n                 size=\"small\"\n                 @click=\"getAll()\">getAll(持久化存储)\n      </el-button>\n      <el-button type=\"success\"\n                 size=\"small\"\n                 @click=\"getAll({type:'session'})\">getAll(session存储)\n      </el-button>\n      <el-button type=\"danger\"\n                 size=\"small\"\n                 @click=\"clearAll()\">delAll(持久化存储)\n      </el-button>\n      <el-button type=\"danger\"\n                 size=\"small\"\n                 @click=\"clearAll({type:'session'})\">delAll(session存储)\n      </el-button>\n    </div>\n  </basic-container>\n\n</template>\n\n<script>\n  import {\n    setStore,\n    getStore,\n    removeStore,\n    clearStore,\n    getAllStore\n  } from \"@/util/store\";\n\n  export default {\n    name: \"store\",\n    methods: {\n      setItem(params = {}) {\n        const {name, value, type} = params;\n        setStore({\n          name: name,\n          content: value,\n          type: type\n        });\n        this.$message(`设置数据 ${name} = ${value}`);\n      },\n      getItem(params = {}) {\n        const {name, type} = params;\n        const content = getStore({\n          name: name,\n          type: type\n        });\n        this.$message(`获取数据 ${name} = ${content}`);\n      },\n      delItem(params = {}) {\n        const {name, type} = params;\n        removeStore({name, type});\n        this.$message(`删除数据 ${name}`);\n      },\n      clearAll(params = {}) {\n        clearStore(params);\n        this.$message(`清除全部数据完成`);\n      },\n      getAll(params = {}) {\n        const list = getAllStore(params);\n        window.console.log(list);\n        this.$message(`结果已经打印到控制台`);\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\">\n  .title {\n    margin-bottom: 10px;\n  }\n\n  .box {\n    margin-bottom: 20px;\n  }\n</style>\n"]}]}