{"remainingRequest":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiang/WorkSpace/code/bladex/saber/src/views/flow/follow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiang/WorkSpace/code/bladex/saber/src/views/flow/follow.vue","mtime":1666151205538},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/babel.config.js","mtime":1666151205448},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/babel-loader/lib/index.js","mtime":1666157453268},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/cache-loader/dist/cjs.js","mtime":1666157453018},{"path":"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/vue-loader/lib/index.js","mtime":1666157454301}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/jiang/WorkSpace/code/bladex/saber/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mapGetters } from \"vuex\";\nimport { followList, deleteProcessInstance } from \"@/api/flow/flow\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      selectionId: '',\n      processInstanceId: '',\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      followBox: false,\n      deleteReason: '',\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        editBtn: false,\n        addBtn: false,\n        viewBtn: false,\n        dialogWidth: 900,\n        menuWidth: 100,\n        dialogClickModal: false,\n        column: [{\n          label: \"执行id\",\n          prop: \"executionId\",\n          search: true,\n          width: 320\n        }, {\n          label: \"流程key\",\n          prop: \"processDefinitionKey\",\n          search: true\n        }, {\n          label: \"实例id\",\n          prop: \"processInstanceId\",\n          search: true,\n          width: 320\n        }, {\n          label: \"状态\",\n          prop: \"suspensionState\",\n          slot: true,\n          width: 80\n        }, {\n          label: \"发起人\",\n          prop: \"startUser\",\n          width: 100\n        }, {\n          label: '开始时间',\n          prop: 'startTime',\n          width: 165\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        delBtn: this.vaildData(this.permission.flow_follow_delete, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowDel: function rowDel(row) {\n      this.followBox = true;\n      this.selectionId = row.id;\n      this.processInstanceId = row.processInstanceId;\n    },\n    handleDelete: function handleDelete() {\n      var _this = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return deleteProcessInstance({\n          deleteReason: _this.deleteReason,\n          processInstanceId: _this.processInstanceId\n        });\n      }).then(function () {\n        _this.onLoad(_this.page);\n\n        _this.followBox = false;\n\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this2 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      followList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this2.page.total = data.total;\n        _this2.data = data.records;\n        _this2.loading = false;\n\n        _this2.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;AA6CA;AACA;AAEA;EACAA,IADA,kBACA;IACA;MACAC,QADA;MAEAC,eAFA;MAGAC,qBAHA;MAIAC,iBAJA;MAKAC,SALA;MAMAC,aANA;MAOAC;QACAC,YADA;QAEAC,cAFA;QAGAC;MAHA,CAPA;MAYAC,gBAZA;MAaAC,gBAbA;MAcAC;QACAC,cADA;QAEAC,cAFA;QAGAC,UAHA;QAIAC,gBAJA;QAKAC,iBALA;QAMAC,YANA;QAOAC,WAPA;QAQAC,eARA;QASAC,cATA;QAUAC,aAVA;QAWAC,cAXA;QAYAC,gBAZA;QAaAC,cAbA;QAcAC,uBAdA;QAeAC,SACA;UACAC,aADA;UAEAC,mBAFA;UAGAC,YAHA;UAIAC;QAJA,CADA,EAOA;UACAH,cADA;UAEAC,4BAFA;UAGAC;QAHA,CAPA,EAYA;UACAF,aADA;UAEAC,yBAFA;UAGAC,YAHA;UAIAC;QAJA,CAZA,EAkBA;UACAH,WADA;UAEAC,uBAFA;UAGAG,UAHA;UAIAD;QAJA,CAlBA,EAwBA;UACAH,YADA;UAEAC,iBAFA;UAGAE;QAHA,CAxBA,EA6BA;UACAH,aADA;UAEAC,iBAFA;UAGAE;QAHA,CA7BA;MAfA,CAdA;MAiEAhC;IAjEA;EAmEA,CArEA;EAsEAkC,0CACAC,0BADA;IAEAC,cAFA,4BAEA;MACA;QACAC;MADA;IAGA,CANA;IAOAC,GAPA,iBAOA;MACA;MACA;QACAA;MACA,CAFA;MAGA;IACA;EAbA,EAtEA;EAqFAC;IACAC,MADA,kBACAC,GADA,EACA;MACA;MACA;MACA;IACA,CALA;IAMAC,YANA,0BAMA;MAAA;;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAKAC,IALA,CAKA;QACA;UAAAlC;UAAAT;QAAA;MACA,CAPA,EAQA2C,IARA,CAQA;QACA;;QACA;;QACA;UACAD,eADA;UAEAE;QAFA;MAIA,CAfA;IAgBA,CAvBA;IAwBAC,WAxBA,yBAwBA;MACA;MACA;IACA,CA3BA;IA4BAC,YA5BA,wBA4BAC,MA5BA,EA4BAC,IA5BA,EA4BA;MACA;MACA;MACA;MACAA;IACA,CAjCA;IAkCAC,eAlCA,2BAkCAC,IAlCA,EAkCA;MACA;IACA,CApCA;IAqCAC,cArCA,4BAqCA;MACA;MACA;IACA,CAxCA;IAyCAC,aAzCA,yBAyCA9C,WAzCA,EAyCA;MACA;IACA,CA3CA;IA4CA+C,UA5CA,sBA4CAhD,QA5CA,EA4CA;MACA;IACA,CA9CA;IA+CAiD,aA/CA,2BA+CA;MACA;IACA,CAjDA;IAkDAC,MAlDA,kBAkDAnD,IAlDA,EAkDA;MAAA;;MAAA;MACA;MACAoD;QACA;QACA;QACA;QACA;;QACA;MACA,CANA;IAOA;EA3DA;AArFA","names":["data","form","selectionId","processInstanceId","selectionList","query","loading","page","pageSize","currentPage","total","followBox","deleteReason","option","height","calcHeight","tip","searchShow","searchMenuSpan","border","index","selection","editBtn","addBtn","viewBtn","dialogWidth","menuWidth","dialogClickModal","column","label","prop","search","width","slot","computed","mapGetters","permissionList","delBtn","ids","methods","rowDel","row","handleDelete","confirmButtonText","cancelButtonText","type","then","message","searchReset","searchChange","params","done","selectionChange","list","selectionClear","currentChange","sizeChange","refreshChange","onLoad","followList"],"sourceRoot":"src/views/flow","sources":["follow.vue"],"sourcesContent":["<template>\n  <basic-container>\n    <avue-crud :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               ref=\"crud\"\n               v-model=\"form\"\n               :page.sync=\"page\"\n               :permission=\"permissionList\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\">\n      <template slot-scope=\"{row}\"\n                slot=\"suspensionState\">\n        <el-tag>{{row.suspensionState===1?'激活':'挂起'}}</el-tag>\n      </template>\n    </avue-crud>\n    <el-dialog title=\"流程删除\"\n               append-to-body\n               :visible.sync=\"followBox\"\n               width=\"20%\">\n      <el-form :model=\"form\"\n               ref=\"form\"\n               label-width=\"80px\">\n        <el-form-item label=\"删除理由\">\n          <el-input v-model=\"deleteReason\"\n                    placeholder=\"请输入删除理由\" />\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"followBox = false\">关 闭</el-button>\n        <el-button type=\"primary\"\n                   @click=\"handleDelete\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </basic-container>\n</template>\n\n<script>\n  import {mapGetters} from \"vuex\";\n  import {followList, deleteProcessInstance} from \"@/api/flow/flow\";\n\n  export default {\n    data() {\n      return {\n        form: {},\n        selectionId: '',\n        processInstanceId: '',\n        selectionList: [],\n        query: {},\n        loading: true,\n        page: {\n          pageSize: 10,\n          currentPage: 1,\n          total: 0\n        },\n        followBox: false,\n        deleteReason: '',\n        option: {\n          height: 'auto',\n          calcHeight: 30,\n          tip: false,\n          searchShow: true,\n          searchMenuSpan: 6,\n          border: true,\n          index: true,\n          selection: true,\n          editBtn: false,\n          addBtn: false,\n          viewBtn: false,\n          dialogWidth: 900,\n          menuWidth: 100,\n          dialogClickModal: false,\n          column: [\n            {\n              label: \"执行id\",\n              prop: \"executionId\",\n              search: true,\n              width: 320,\n            },\n            {\n              label: \"流程key\",\n              prop: \"processDefinitionKey\",\n              search: true,\n            },\n            {\n              label: \"实例id\",\n              prop: \"processInstanceId\",\n              search: true,\n              width: 320,\n            },\n            {\n              label: \"状态\",\n              prop: \"suspensionState\",\n              slot: true,\n              width: 80,\n            },\n            {\n              label: \"发起人\",\n              prop: \"startUser\",\n              width: 100,\n            },\n            {\n              label: '开始时间',\n              prop: 'startTime',\n              width: 165,\n            },\n          ]\n        },\n        data: []\n      };\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          delBtn: this.vaildData(this.permission.flow_follow_delete, false),\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    methods: {\n      rowDel(row) {\n        this.followBox = true;\n        this.selectionId = row.id;\n        this.processInstanceId = row.processInstanceId;\n      },\n      handleDelete() {\n        this.$confirm(\"确定将选择数据删除?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            return deleteProcessInstance({deleteReason: this.deleteReason, processInstanceId: this.processInstanceId});\n          })\n          .then(() => {\n            this.onLoad(this.page);\n            this.followBox = false;\n            this.$message({\n              type: \"success\",\n              message: \"操作成功!\"\n            });\n          });\n      },\n      searchReset() {\n        this.query = {};\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        this.query = params;\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage) {\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize) {\n        this.page.pageSize = pageSize;\n      },\n      refreshChange() {\n        this.onLoad(this.page, this.query);\n      },\n      onLoad(page, params = {}) {\n        this.loading = true;\n        followList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n      }\n    }\n  };\n</script>\n\n<style>\n  .none-border {\n    border: 0;\n    background-color: transparent !important;\n  }\n</style>\n"]}]}